:- op(1200, xfx, ['-->>']).   % Same as ':-'.
:- op(1200, xfx, ['-->']).   % Same as ':-'.
:- op( 850, xfx, [':']).      % Slightly tighter than ',' and '\+'.
:- op( 700, xfx, ['\=']).
:- op( 500, yfx, [and,or,xor]).
:- op(1150,  fx, [(init_directive)]). % Same op declaration as 'dynamic'.
:- op(1150,  fx, [(mode)]). % Same op declaration as 'dynamic'.

le(g,g):-true.
lt(g,g):-true.
ge(g,g):-true.
gt(g,g):-true.
exprEval(g,g):-true.
ident(A,B):-true.
nonident(A,B):-true.
cut:-true.
eq(g,g):-true.
noteq(g,g):-true.
termlt(A,B):-true.
termle(A,B):-true.
termgt(A,B):-true.
termge(A,B):-true.
notequal(A,B):-true.
univ(g,g):-true.
univ(ng,ng):-true.
compound(A):-true.
display(A):-true.
listing:-true.
listing(A):-true.
nl:-true.
nonvar(A):-true.
print(A):-true.
portray_clause(A):-true.
read(A):-true.
repeat:-true.
true:-true.
var(A):-true.
write(A):-true.
writeq(A):-true.
atom(g):-true.
atomic(g):-true.
compare(g,A,B):-true.
float(g):-true.
ground(g):-true.
integer(g):-true.
number(g):-true.
length(A,g):-true.
statistics(g,g):-true.
keysort(g,g):-true.
keysort(ng,ng):-true.
sort(ng,ng):-true.
tab(g):-true.
put(g):-true.
arg(g,g,g):-true.
arg(g,ng,g):-true.
arg(g,ng,ng):-true.
name(g,g):-true.
functor(A,g,g):-true.
neg(A):-true.
le_error(ng,A):-true.
le_error(A,ng):-true.
lt_error(ng,A):-true.
lt_error(A,ng):-true.
ge_error(ng,A):-true.
ge_error(A,ng):-true.
gt_error(ng,A):-true.
gt_error(A,ng):-true.
exprEval_error(ng,A):-true.
exprEval_error(A,ng):-true.
eq_error(ng,A):-true.
eq_error(A,ng):-true.
noteq_error(ng,A):-true.
noteq_error(A,ng):-true.
univ_error(ng,ng):-true.
keysort_error(ng,A):-true.
sort_error(ng,A):-true.
tab_error(ng):-true.
put_error(ng):-true.
arg_error(ng,A,B):-true.
arg_error(A,ng,B):-true.
name_error(ng,ng):-true.
functor_error(ng,g,ng):-true.
functor_error(ng,ng,A):-true.
'denotes_.'(A,ng,ng).
'denotes_.'(ng,A,ng).
'denotes_.'(g,g,g).
'denotes_-->>'(A,ng,ng).
'denotes_-->>'(ng,A,ng).
'denotes_-->>'(g,g,g).
'denotes_:-'(A,ng,ng).
'denotes_:-'(ng,A,ng).
'denotes_:-'(g,g,g).
'denotes_/'(A,ng,ng).
'denotes_/'(ng,A,ng).
'denotes_/'(g,g,g).
'denotes_/hprg/q2.0/library'(g).
'denotes_/hprg/q2.0/tools'(g).
'denotes_/hprg/q2.0/IPC'(g).
denotes_1(g).
'denotes_Aquarius Prolog compiler'(g).
denotes_2(g).
'denotes_Copyright (C) 1989-91 P. Van Roy and Regents of the University of California'(g).
denotes_3(g).
'denotes_All rights reserved.'(g).
'denotes_Fri Sep 20 10:16:37 PDT 1991'(g).
'denotes_[]'(g).
denotes_pred_info(A,B,ng,ng).
denotes_pred_info(A,ng,B,ng).
denotes_pred_info(ng,A,B,ng).
denotes_pred_info(g,g,g,g).
denotes_acc(A,B,ng,ng).
denotes_acc(A,ng,B,ng).
denotes_acc(ng,A,B,ng).
denotes_acc(g,g,g,g).
'denotes_+'(A,ng,ng).
'denotes_+'(ng,A,ng).
'denotes_+'(g,g,g).
denotes_pass(A,ng,ng).
denotes_pass(ng,A,ng).
denotes_pass(g,g,g).
denotes_u_is_acc(ng,ng).
denotes_u_is_acc(g,g).
denotes_u_is_pass(ng,ng).
denotes_u_is_pass(g,g).
'denotes_*** Error: '(g).
'denotes_ is not a hidden parameter.'(g).
denotes_true(g).
'denotes_,'(A,ng,ng).
'denotes_,'(ng,A,ng).
'denotes_,'(g,g,g).
'denotes_{}'(ng,ng).
'denotes_{}'(g,g).
denotes_insert(A,ng,ng).
denotes_insert(ng,A,ng).
denotes_insert(g,g,g).
'denotes_='(A,ng,ng).
'denotes_='(ng,A,ng).
'denotes_='(g,g,g).
denotes_dcg(g).
'denotes_:'(A,ng,ng).
'denotes_:'(ng,A,ng).
'denotes_:'(g,g,g).
denotes_u_list(ng,ng).
denotes_u_list(g,g).
'denotes_*** Warning: in '(g).
'denotes_ the term '(g).
'denotes_ uses a non-existent hidden parameter.'(g).
'denotes_*** Error: the hidden parameter '(g).
'denotes_ does not exist.'(g).
'denotes_ the accumulator '(g).
denotes_u_dummy(g).
denotes_0(g).
denotes_flat(g).
denotes_write(g).
denotes_source(g).
denotes_peep(g).
denotes_low_reg(ng,ng).
denotes_low_reg(g,g).
denotes_1000(g).
denotes_high_reg(ng,ng).
denotes_high_reg(g,g).
denotes_low_perm(ng,ng).
denotes_low_perm(g,g).
denotes_align(ng,ng).
denotes_align(g,g).
denotes_compile(g).
denotes_factor(g).
denotes_uni(g).
denotes_select_limit(ng,ng).
denotes_select_limit(g,g).
denotes_5(g).
denotes_hash_size(ng,ng).
denotes_hash_size(g,g).
denotes_functor_limit(ng,ng).
denotes_functor_limit(g,g).
denotes_8(g).
denotes_include_limit(ng,ng).
denotes_include_limit(g,g).
denotes_depth_limit(ng,ng).
denotes_depth_limit(g,g).
denotes_6(g).
denotes_short_block(ng,ng).
denotes_short_block(g,g).
denotes_write_once(g).
denotes_same_number_solutions(g).
denotes_same_order_solutions(g).
denotes_split_integer(g).
denotes_quintus(g).
denotes_system(ng,ng).
denotes_system(g,g).
denotes_user_test_size(A,ng,ng).
denotes_user_test_size(ng,A,ng).
denotes_user_test_size(g,g,g).
denotes_analyze_uninit_reg(g).
denotes_protect_builtins(g).
denotes_arithmetic_error_check(g).
denotes_float(g).
denotes_merge_add(g).
denotes_mips(g).
denotes_sparc(g).
denotes_mc68020(g).
'denotes_:-'(ng,ng).
'denotes_:-'(g,g).
'denotes_.'(g).
denotes_no_write_once(g).
denotes_(g).
denotes_end_of_file(g).
denotes_save_clause(ng,ng).
denotes_save_clause(g,g).
denotes_include_stack(ng,ng).
denotes_include_stack(g,g).
'denotes_Variable directive ignored'(g).
denotes_init_directive(ng,ng).
denotes_init_directive(g,g).
'denotes_Non-existent directive \''(g).
'denotes_\' ignored'(g).
denotes_read_clauses(A,B,C,ng,ng).
denotes_read_clauses(A,B,ng,C,ng).
denotes_read_clauses(A,ng,B,C,ng).
denotes_read_clauses(ng,A,B,C,ng).
denotes_read_clauses(g,g,g,g,g).
'denotes_->'(A,ng,ng).
'denotes_->'(ng,A,ng).
'denotes_->'(g,g,g).
denotes_w(g).
denotes_mode(ng,ng).
denotes_mode(g,g).
denotes_mode_option(A,B,C,D,ng,ng).
denotes_mode_option(A,B,C,ng,D,ng).
denotes_mode_option(A,B,ng,C,D,ng).
denotes_mode_option(A,ng,B,C,D,ng).
denotes_mode_option(ng,A,B,C,D,ng).
denotes_mode_option(g,g,g,g,g,g).
denotes_n(g).
denotes_analyze_mode(A,B,C,ng,ng).
denotes_analyze_mode(A,B,ng,C,ng).
denotes_analyze_mode(A,ng,B,C,ng).
denotes_analyze_mode(ng,A,B,C,ng).
denotes_analyze_mode(g,g,g,g,g).
denotes_dummy_mode(A,B,ng,ng).
denotes_dummy_mode(A,ng,B,ng).
denotes_dummy_mode(ng,A,B,ng).
denotes_dummy_mode(g,g,g,g).
denotes_mode(A,B,C,D,ng,ng).
denotes_mode(A,B,C,ng,D,ng).
denotes_mode(A,B,ng,C,D,ng).
denotes_mode(A,ng,B,C,D,ng).
denotes_mode(ng,A,B,C,D,ng).
denotes_mode(g,g,g,g,g,g).
denotes_entry(A,B,C,D,ng,ng).
denotes_entry(A,B,C,ng,D,ng).
denotes_entry(A,B,ng,C,D,ng).
denotes_entry(A,ng,B,C,D,ng).
denotes_entry(ng,A,B,C,D,ng).
denotes_entry(g,g,g,g,g,g).
denotes_entry(A,ng,ng).
denotes_entry(ng,A,ng).
denotes_entry(g,g,g).
denotes_compile_option(ng,ng).
denotes_compile_option(g,g).
denotes_entry(ng,ng).
denotes_entry(g,g).
denotes_modal_entry(A,ng,ng).
denotes_modal_entry(ng,A,ng).
denotes_modal_entry(g,g,g).
denotes_macro(ng,ng).
denotes_macro(g,g).
denotes_macro(A,B,C,D,E,ng,ng).
denotes_macro(A,B,C,D,ng,E,ng).
denotes_macro(A,B,C,ng,D,E,ng).
denotes_macro(A,B,ng,C,D,E,ng).
denotes_macro(A,ng,B,C,D,E,ng).
denotes_macro(ng,A,B,C,D,E,ng).
denotes_macro(g,g,g,g,g,g,g).
denotes_vlsi_bam(g).
denotes_version(g).
denotes_help(g).
denotes_helpoptions(g).
denotes_options(g).
denotes_option(g).
denotes_notoption(g).
denotes_include(g).
denotes_op(g).
denotes_prolog_flag(g).
denotes_character_escapes(g).
denotes_copy(A,ng,ng).
denotes_copy(ng,A,ng).
denotes_copy(g,g,g).
denotes_prolog_flag(A,B,ng,ng).
denotes_prolog_flag(A,ng,B,ng).
denotes_prolog_flag(ng,A,B,ng).
denotes_prolog_flag(g,g,g,g).
denotes_dynamic(g).
denotes_init_directive(g).
denotes_o(g).
denotes_no(g).
denotes_ex(g).
denotes_cprolog(g).
denotes_aquarius(g).
'denotes_Compiling for the MIPS processor'(g).
'denotes_Compiling for the SPARC processor'(g).
'denotes_Compiling for the MC68020 processor'(g).
'denotes_% List of useful directives:'(g).
'denotes_% option(OptList)        Enable the listed options.'(g).
'denotes_% notoption(OptList)     Disable the listed options.'(g).
'denotes_% options                Print the current options.'(g).
'denotes_% helpoptions            Give information about the possible options.'(g).
'denotes_% op(A,B,C)              Operator declaration.'(g).
'denotes_% prolog_flag(F,Old,New) Modify execution parameters of the system.'(g).
'denotes_% dynamic(Name/Arity)    Declare a dynamic predicate.'(g).
'denotes_% mode((Head:-Formula))  Mode information for a predicate.'(g).
'denotes_% entry((Head:-Formula)) As above and also used for flow analysis.'(g).
'denotes_% mode(H,R,B,A,S)        More detailed mode declaration.'(g).
'denotes_% entry(H,R,B,A,S)       More detailed entry declaration.'(g).
'denotes_% macro((Head:-BAMCode)) Define a predicate as BAM assembly code.'(g).
'denotes_% include(F)             Insert the contents of file F.'(g).
'denotes_% version                Print the creation date of this version.'(g).
'denotes_% Directives normally only used by the system:'(g).
'denotes_% mips                   Set options for the MIPS.'(g).
'denotes_% sparc                  Set options for the SPARC.'(g).
'denotes_% mc68020                Set options for the MC68020.'(g).
'denotes_% vlsi_bam               Set options for the VLSI-BAM.'(g).
'denotes_% modal_entry(H,Tree)    Discrimination tree for efficient builtins.'(g).
'denotes_% List of useful options (default in parentheses):'(g).
'denotes_% float (off)   Enable use of floating point.'(g).
'denotes_% analyze (off) Perform flow analysis on the input program.'(g).
'denotes_% factor (on)   Perform factoring transformation.'(g).
'denotes_% compile (on)  Compile the input program.'(g).
'denotes_% arithmetic_error_check (on)'(g).
'denotes_%               Perform type checking on arithmetic operations.'(g).
'denotes_% same_number_solutions (on)'(g).
'denotes_%               Keep the same number of solutions as standard Prolog.'(g).
'denotes_% same_order_solutions (on)'(g).
'denotes_%               Keep the same order of solutions as standard Prolog.'(g).
'denotes_% Options = '(g).
denotes_list(ng,ng).
denotes_list(g,g).
denotes_length(A,ng,ng).
denotes_length(ng,A,ng).
denotes_length(g,g,g).
'denotes_>'(A,ng,ng).
'denotes_>'(ng,A,ng).
'denotes_>'(g,g,g).
'denotes_The inclusion stack '(g).
denotes_nl(g).
'denotes_has exceeded the limit of '(g).
'denotes_ nested includes.'(g).
denotes_warning(ng,ng).
denotes_warning(g,g).
denotes_dyn_pred(ng,ng).
denotes_dyn_pred(g,g).
denotes_do_it_now(ng,ng).
denotes_do_it_now(g,g).
denotes_stats(ng,ng).
denotes_stats(g,g).
denotes_analyze(g).
denotes_comment(g).
denotes_test(g).
denotes_test_unify(g).
denotes_test_arith(g).
denotes_test_typecheck(g).
denotes_firstarg(g).
'denotes_% '(g).
'denotes_% Creation date '(g).
denotes_4(g).
denotes_nowrite(g).
denotes_pa(g).
denotes_a(g).
denotes_p(ng,ng).
denotes_p(g,g).
denotes_uninit(ng,ng).
denotes_uninit(g,g).
denotes_a(ng,ng).
denotes_a(g,g).
'denotes_<'(A,ng,ng).
'denotes_<'(ng,A,ng).
'denotes_<'(g,g,g).
denotes_b(A,ng,ng).
denotes_b(ng,A,ng).
denotes_b(g,g,g).
'denotes_@<'(A,ng,ng).
'denotes_@<'(ng,A,ng).
'denotes_@<'(g,g,g).
denotes_b(ng,ng).
denotes_b(g,g).
denotes_up(g).
denotes_p(A,B,C,ng,ng).
denotes_p(A,B,ng,C,ng).
denotes_p(A,ng,B,C,ng).
denotes_p(ng,A,B,C,ng).
denotes_p(g,g,g,g,g).
'denotes_>='(A,ng,ng).
'denotes_>='(ng,A,ng).
'denotes_>='(g,g,g).
denotes_dis(g).
denotes_var(ng,ng).
denotes_var(g,g).
denotes_nonvar(ng,ng).
denotes_nonvar(g,g).
'denotes_;'(A,ng,ng).
'denotes_;'(ng,A,ng).
'denotes_;'(g,g,g).
denotes_aba(g).
denotes_b(g).
denotes_ab(g).
denotes_h1(g).
denotes_c(g).
denotes_d(g).
denotes_h2(g).
denotes_s(ng,ng).
denotes_s(g,g).
denotes_t(ng,ng).
denotes_t(g,g).
denotes_nrev(g).
denotes_nreverse(A,ng,ng).
denotes_nreverse(ng,A,ng).
denotes_nreverse(g,g,g).
denotes_concatenate(A,B,ng,ng).
denotes_concatenate(A,ng,B,ng).
denotes_concatenate(ng,A,B,ng).
denotes_concatenate(g,g,g,g).
denotes_ncon(g).
denotes_compile_cputime(g).
denotes_start(g).
denotes_none(g).
denotes_compile_cputime(A,B,ng,ng).
denotes_compile_cputime(A,ng,B,ng).
denotes_compile_cputime(ng,A,B,ng).
denotes_compile_cputime(g,g,g,g).
denotes_contiguous(g).
denotes_member(A,ng,ng).
denotes_member(ng,A,ng).
denotes_member(g,g,g).
'denotes_$ declare_dynamic'(ng,ng).
'denotes_$ declare_dynamic'(g,g).
'denotes_% Cputime between '(g).
'denotes_ and '(g).
'denotes_ is '(g).
'denotes_-'(A,ng,ng).
'denotes_-'(ng,A,ng).
'denotes_-'(g,g,g).
'denotes_Starting dataflow analysis'(g).
denotes_return(g).
denotes_header(g).
'denotes_ and finish is '(g).
denotes_stree(A,B,C,D,E,ng,ng).
denotes_stree(A,B,C,D,ng,E,ng).
denotes_stree(A,B,C,ng,D,E,ng).
denotes_stree(A,B,ng,C,D,E,ng).
denotes_stree(A,ng,B,C,D,E,ng).
denotes_stree(ng,A,B,C,D,E,ng).
denotes_stree(g,g,g,g,g,g,g).
'denotes_Compiling '(g).
'denotes_ ...'(g).
denotes_print_stree(g).
denotes_gensym_integer(g).
denotes_gensym_integer(ng,ng).
denotes_gensym_integer(g,g).
denotes_write_code(ng,ng).
denotes_write_code(g,g).
'denotes_The predicate '(g).
'denotes_ is a builtin.  It is not compiled.'(g).
denotes_arg(A,B,ng,ng).
denotes_arg(A,ng,B,ng).
denotes_arg(ng,A,B,ng).
denotes_arg(g,g,g,g).
denotes_inv(A,ng,ng).
denotes_inv(ng,A,ng).
denotes_inv(g,g,g).
'denotes_Doing selection on argument '(g).
'denotes_ of '(g).
denotes_select_option(A,ng,ng).
denotes_select_option(ng,A,ng).
denotes_select_option(g,g,g).
denotes_36(g).
denotes_118(g).
denotes_95(g).
denotes_110(g).
denotes_yes(g).
denotes_noheader(g).
denotes_procedure(ng,ng).
denotes_procedure(g,g).
denotes_body(A,ng,ng).
denotes_body(ng,A,ng).
denotes_body(g,g,g).
denotes_label(ng,ng).
denotes_label(g,g).
denotes_jump(ng,ng).
denotes_jump(g,g).
denotes_nopeep(g).
'denotes_Before peephole optimization:'(g).
denotes_fail(g).
'denotes_After peephole optimization:'(g).
denotes_y(g).
'denotes_=='(A,ng,ng).
'denotes_=='(ng,A,ng).
'denotes_=='(g,g,g).
denotes_memberv(A,ng,ng).
denotes_memberv(ng,A,ng).
denotes_memberv(g,g,g).
denotes_prolog(g).
denotes_info(ng,ng).
denotes_info(g,g).
denotes_test(ng,ng).
denotes_test(g,g).
denotes_not(ng,ng).
denotes_not(g,g).
denotes_left(g).
'denotes_Modal entry '(g).
'denotes_ has incorrect syntax.'(g).
denotes_mode(A,B,ng,ng).
denotes_mode(A,ng,B,ng).
denotes_mode(ng,A,B,ng).
denotes_mode(g,g,g,g).
denotes_e(g).
denotes_call(ng,ng).
denotes_call(g,g).
'denotes_^'(A,ng,ng).
'denotes_^'(ng,A,ng).
'denotes_^'(g,g,g).
denotes_c(A,B,ng,ng).
denotes_c(A,ng,B,ng).
denotes_c(ng,A,B,ng).
denotes_c(g,g,g,g).
denotes_constC(A,B,ng,ng).
denotes_constC(A,ng,B,ng).
denotes_constC(ng,A,B,ng).
denotes_constC(g,g,g,g).
denotes_is(A,ng,ng).
denotes_is(ng,A,ng).
denotes_is(g,g,g).
'denotes_=:='(A,ng,ng).
'denotes_=:='(ng,A,ng).
'denotes_=:='(g,g,g).
'denotes_\\+'(ng,ng).
'denotes_\\+'(g,g).
'denotes_=\\='(A,ng,ng).
'denotes_=\\='(ng,A,ng).
'denotes_=\\='(g,g,g).
denotes_put(ng,ng).
denotes_put(g,g).
denotes_false(g).
denotes_otherwise(g).
'denotes_$ call_dynamic'(ng,ng).
'denotes_$ call_dynamic'(g,g).
denotes_logical(g).
'denotes_Attempt to give modes for builtin '(g).
'denotes_ is ignored.'(g).
denotes_survive(ng,ng).
denotes_survive(g,g).
denotes_deref(ng,ng).
denotes_deref(g,g).
denotes_rderef(ng,ng).
denotes_rderef(g,g).
denotes_all_true(ng,ng).
denotes_all_true(g,g).
'denotes_Illegal Require modes converted to Before in '(g).
'denotes_Require modes can only be uninit(X), uninit_reg(X) or deref(X).'(g).
denotes_nil(ng,ng).
denotes_nil(g,g).
denotes_cons(ng,ng).
denotes_cons(g,g).
'denotes_Attempt to give macro definition for builtin '(g).
denotes_reg(g).
denotes_move(A,ng,ng).
denotes_move(ng,A,ng).
denotes_move(g,g,g).
denotes_pref(g).
denotes_dummy(g).
denotes_leaf(g).
denotes_node(A,B,C,ng,ng).
denotes_node(A,B,ng,C,ng).
denotes_node(A,ng,B,C,ng).
denotes_node(ng,A,B,C,ng).
denotes_node(g,g,g,g,g).
denotes_jump(A,B,C,ng,ng).
denotes_jump(A,B,ng,C,ng).
denotes_jump(A,ng,B,C,ng).
denotes_jump(ng,A,B,C,ng).
denotes_jump(g,g,g,g,g).
denotes_jump_nt(A,B,C,ng,ng).
denotes_jump_nt(A,B,ng,C,ng).
denotes_jump_nt(A,ng,B,C,ng).
denotes_jump_nt(ng,A,B,C,ng).
denotes_jump_nt(g,g,g,g,g).
denotes_test(A,B,C,ng,ng).
denotes_test(A,B,ng,C,ng).
denotes_test(A,ng,B,C,ng).
denotes_test(ng,A,B,C,ng).
denotes_test(g,g,g,g,g).
denotes_equal(A,B,ng,ng).
denotes_equal(A,ng,B,ng).
denotes_equal(ng,A,B,ng).
denotes_equal(g,g,g,g).
denotes_unify(A,B,C,D,ng,ng).
denotes_unify(A,B,C,ng,D,ng).
denotes_unify(A,B,ng,C,D,ng).
denotes_unify(A,ng,B,C,D,ng).
denotes_unify(ng,A,B,C,D,ng).
denotes_unify(g,g,g,g,g,g).
denotes_unify_atomic(A,B,ng,ng).
denotes_unify_atomic(A,ng,B,ng).
denotes_unify_atomic(ng,A,B,ng).
denotes_unify_atomic(g,g,g,g).
denotes_choice(A,B,ng,ng).
denotes_choice(A,ng,B,ng).
denotes_choice(ng,A,B,ng).
denotes_choice(g,g,g,g).
denotes_hash(A,B,C,ng,ng).
denotes_hash(A,B,ng,C,ng).
denotes_hash(A,ng,B,C,ng).
denotes_hash(ng,A,B,C,ng).
denotes_hash(g,g,g,g,g).
denotes_pair(A,ng,ng).
denotes_pair(ng,A,ng).
denotes_pair(g,g,g).
denotes_switch(A,B,C,D,ng,ng).
denotes_switch(A,B,C,ng,D,ng).
denotes_switch(A,B,ng,C,D,ng).
denotes_switch(A,ng,B,C,D,ng).
denotes_switch(ng,A,B,C,D,ng).
denotes_switch(g,g,g,g,g,g).
denotes_e(ng,ng).
denotes_e(g,g).
denotes_fget(A,B,ng,ng).
denotes_fget(A,ng,B,ng).
denotes_fget(ng,A,B,ng).
denotes_fget(g,g,g,g).
denotes_init_clause(ng,ng).
denotes_init_clause(g,g).
denotes_ptree(A,B,C,ng,ng).
denotes_ptree(A,B,ng,C,ng).
denotes_ptree(A,ng,B,C,ng).
denotes_ptree(ng,A,B,C,ng).
denotes_ptree(g,g,g,g,g).
'denotes_$ assertz'(ng,ng).
'denotes_$ assertz'(g,g).
denotes_bagof(A,B,ng,ng).
denotes_bagof(A,ng,B,ng).
denotes_bagof(ng,A,B,ng).
denotes_bagof(g,g,g,g).
denotes_first_name(A,ng,ng).
denotes_first_name(ng,A,ng).
denotes_first_name(g,g,g).
denotes_32(g).
denotes_105(g).
denotes_116(g).
denotes_genatom(A,B,ng,ng).
denotes_genatom(A,ng,B,ng).
denotes_genatom(ng,A,B,ng).
denotes_genatom(g,g,g,g).
'denotes_$ init'(g).
denotes_47(g).
'denotes_% Example '(g).
'denotes_:'(g).
'denotes_% Modes:'(g).
denotes_wn(ng,ng).
denotes_wn(g,g).
denotes_inst_writeqs(ng,ng).
denotes_inst_writeqs(g,g).
denotes_32767(g).
'denotes_-32768'(g).
denotes_46(g).
denotes_append(A,B,C,ng,ng).
denotes_append(A,B,ng,C,ng).
denotes_append(A,ng,B,C,ng).
denotes_append(ng,A,B,C,ng).
denotes_append(g,g,g,g,g).
'denotes_<'(g).
'denotes_='(g).
'denotes_>'(g).
denotes_f(g).
denotes_t(g).
denotes_key_list(ng,ng).
denotes_key_list(g,g).
denotes_list_to_key(A,ng,ng).
denotes_list_to_key(ng,A,ng).
denotes_list_to_key(g,g,g).
denotes_23141(g).
denotes_101(g).
denotes_114(g).
denotes_97(g).
denotes_108(g).
denotes_115(g).
denotes_121(g).
denotes_109(g).
'denotes_Erroneous second argument to gensym/3: '(g).
'denotes_['(g).
'denotes_('(g).
denotes_write(ng,ng).
denotes_write(g,g).
'denotes_)'(g).
'denotes_ '(g).
'denotes_|'(g).
'denotes_]'(g).
'denotes_,'(g).
'denotes_-->'(A,ng,ng).
'denotes_-->'(ng,A,ng).
'denotes_-->'(g,g,g).
'denotes_-->'(g).
'denotes_;'(g).
'denotes_^'(g).
'denotes_\\='(A,ng,ng).
'denotes_\\='(ng,A,ng).
'denotes_\\='(g,g,g).
'denotes_\\='(g).
'denotes_:-'(g).
'denotes_->'(g).
'denotes_=..'(A,ng,ng).
'denotes_=..'(ng,A,ng).
'denotes_=..'(g,g,g).
'denotes_=..'(g).
'denotes_@<'(g).
'denotes_@=<'(A,ng,ng).
'denotes_@=<'(ng,A,ng).
'denotes_@=<'(g,g,g).
'denotes_@=<'(g).
'denotes_@>'(A,ng,ng).
'denotes_@>'(ng,A,ng).
'denotes_@>'(g,g,g).
'denotes_@>'(g).
'denotes_@>='(A,ng,ng).
'denotes_@>='(ng,A,ng).
'denotes_@>='(g,g,g).
'denotes_@>='(g).
'denotes_=<'(A,ng,ng).
'denotes_=<'(ng,A,ng).
'denotes_=<'(g,g,g).
'denotes_=<'(g).
'denotes_>='(g).
'denotes_=:='(g).
'denotes_=\\='(g).
'denotes_\\=='(A,ng,ng).
'denotes_\\=='(ng,A,ng).
'denotes_\\=='(g,g,g).
'denotes_\\=='(g).
'denotes_=='(g).
'denotes_+'(g).
'denotes_-'(g).
'denotes_/'(g).
'denotes_*'(A,ng,ng).
'denotes_*'(ng,A,ng).
'denotes_*'(g,g,g).
'denotes_*'(g).
'denotes_//'(A,ng,ng).
'denotes_//'(ng,A,ng).
'denotes_//'(g,g,g).
'denotes_//'(g).
'denotes_/\\'(A,ng,ng).
'denotes_/\\'(ng,A,ng).
'denotes_/\\'(g,g,g).
'denotes_/\\'(g).
'denotes_\\/'(A,ng,ng).
'denotes_\\/'(ng,A,ng).
'denotes_\\/'(g,g,g).
'denotes_\\/'(g).
denotes_mod(A,ng,ng).
denotes_mod(ng,A,ng).
denotes_mod(g,g,g).
'denotes_ mod '(g).
denotes_atomic(ng,ng).
denotes_atomic(g,g).
denotes_26(g).
denotes_65(g).
denotes_global_copy(ng,ng).
denotes_global_copy(g,g).
denotes_global_copy(g).
denotes_p(A,ng,ng).
denotes_p(ng,A,ng).
denotes_p(g,g,g).
denotes_var(g).
denotes_tag(A,ng,ng).
denotes_tag(ng,A,ng).
denotes_tag(g,g,g).
denotes_pragma(ng,ng).
denotes_pragma(g,g).
denotes_1237(g).
denotes_2116(g).
denotes_44449(g).
denotes_succeeds(ng,ng).
denotes_succeeds(g,g).
denotes_functor(A,B,ng,ng).
denotes_functor(A,ng,B,ng).
denotes_functor(ng,A,B,ng).
denotes_functor(g,g,g,g).
denotes_errs(ng,ng).
denotes_errs(g,g).
'denotes_$name_arity'(A,B,ng,ng).
'denotes_$name_arity'(A,ng,B,ng).
'denotes_$name_arity'(ng,A,B,ng).
'denotes_$name_arity'(g,g,g,g).
denotes_ground(ng,ng).
denotes_ground(g,g).
denotes_atom(ng,ng).
denotes_atom(g,g).
denotes_integer(ng,ng).
denotes_integer(g,g).
denotes_negative(ng,ng).
denotes_negative(g,g).
denotes_nonnegative(ng,ng).
denotes_nonnegative(g,g).
denotes_float(ng,ng).
denotes_float(g,g).
denotes_number(ng,ng).
denotes_number(g,g).
denotes_structure(ng,ng).
denotes_structure(g,g).
denotes_compound(ng,ng).
denotes_compound(g,g).
denotes_simple(ng,ng).
denotes_simple(g,g).
denotes_memberv_conj(A,ng,ng).
denotes_memberv_conj(ng,A,ng).
denotes_memberv_conj(g,g,g).
denotes_unify_p(ng,ng).
denotes_unify_p(g,g).
denotes_10000(g).
denotes_disj_p(ng,ng).
denotes_disj_p(g,g).
denotes_conj_p(ng,ng).
denotes_conj_p(g,g).
'denotes_$cut_deep'(ng,ng).
'denotes_$cut_deep'(g,g).
'denotes_$cut_shallow'(ng,ng).
'denotes_$cut_shallow'(g,g).
denotes_unify(g).
denotes_switch(A,B,C,D,E,ng,ng).
denotes_switch(A,B,C,D,ng,E,ng).
denotes_switch(A,B,C,ng,D,E,ng).
denotes_switch(A,B,ng,C,D,E,ng).
denotes_switch(A,ng,B,C,D,E,ng).
denotes_switch(ng,A,B,C,D,E,ng).
denotes_switch(g,g,g,g,g,g,g).
'denotes_switch('(g).
'denotes_) {'(g).
'denotes_else: '(g).
'denotes_}'(g).
denotes_9(g).
'denotes_% Source:'(g).
'denotes_%    '(g).
'denotes_% *** '(g).
denotes_ae(g).
'denotes_% *** Aesthetic: '(g).
'denotes_% *** Warning: '(g).
'denotes_% *** Error: '(g).
denotes_s(A,ng,ng).
denotes_s(ng,A,ng).
denotes_s(g,g,g).
denotes_tab(g).
denotes_cm(g).
'denotes_% ***            '(g).
'denotes_% ***          '(g).
'denotes_% ***        '(g).
'denotes_ ***'(g).
'denotes_- not used!'(g).
denotes_anyregs(ng,ng).
denotes_anyregs(g,g).
denotes_builtin(ng,ng).
denotes_builtin(g,g).
denotes_expanded(ng,ng).
denotes_expanded(g,g).
'denotes_$cut_load'(ng,ng).
'denotes_$cut_load'(g,g).
denotes_uninit_reg(ng,ng).
denotes_uninit_reg(g,g).
'denotes_$if2f'(A,ng,ng).
'denotes_$if2f'(ng,A,ng).
'denotes_$if2f'(g,g,g).
'denotes_$if2i'(A,ng,ng).
'denotes_$if2i'(ng,A,ng).
'denotes_$if2i'(g,g,g).
'denotes_$add'(A,B,ng,ng).
'denotes_$add'(A,ng,B,ng).
'denotes_$add'(ng,A,B,ng).
'denotes_$add'(g,g,g,g).
'denotes_$sub'(A,B,ng,ng).
'denotes_$sub'(A,ng,B,ng).
'denotes_$sub'(ng,A,B,ng).
'denotes_$sub'(g,g,g,g).
'denotes_$mul'(A,B,ng,ng).
'denotes_$mul'(A,ng,B,ng).
'denotes_$mul'(ng,A,B,ng).
'denotes_$mul'(g,g,g,g).
'denotes_$fdiv'(A,B,ng,ng).
'denotes_$fdiv'(A,ng,B,ng).
'denotes_$fdiv'(ng,A,B,ng).
'denotes_$fdiv'(g,g,g,g).
'denotes_$idiv'(A,B,ng,ng).
'denotes_$idiv'(A,ng,B,ng).
'denotes_$idiv'(ng,A,B,ng).
'denotes_$idiv'(g,g,g,g).
'denotes_$mod'(A,B,ng,ng).
'denotes_$mod'(A,ng,B,ng).
'denotes_$mod'(ng,A,B,ng).
'denotes_$mod'(g,g,g,g).
'denotes_$and'(A,B,ng,ng).
'denotes_$and'(A,ng,B,ng).
'denotes_$and'(ng,A,B,ng).
'denotes_$and'(g,g,g,g).
'denotes_$or'(A,B,ng,ng).
'denotes_$or'(A,ng,B,ng).
'denotes_$or'(ng,A,B,ng).
'denotes_$or'(g,g,g,g).
'denotes_$xor'(A,B,ng,ng).
'denotes_$xor'(A,ng,B,ng).
'denotes_$xor'(ng,A,B,ng).
'denotes_$xor'(g,g,g,g).
'denotes_$sll'(A,B,ng,ng).
'denotes_$sll'(A,ng,B,ng).
'denotes_$sll'(ng,A,B,ng).
'denotes_$sll'(g,g,g,g).
'denotes_$sra'(A,B,ng,ng).
'denotes_$sra'(A,ng,B,ng).
'denotes_$sra'(ng,A,B,ng).
'denotes_$sra'(g,g,g,g).
'denotes_$not'(A,ng,ng).
'denotes_$not'(ng,A,ng).
'denotes_$not'(g,g,g).
'denotes_$unify'(A,ng,ng).
'denotes_$unify'(ng,A,ng).
'denotes_$unify'(g,g,g).
'denotes_$test'(A,ng,ng).
'denotes_$test'(ng,A,ng).
'denotes_$test'(g,g,g).
'denotes_$equal'(A,ng,ng).
'denotes_$equal'(ng,A,ng).
'denotes_$equal'(g,g,g).
'denotes_$atom_nonnil'(ng,ng).
'denotes_$atom_nonnil'(g,g).
denotes_denumerable(ng,ng).
denotes_denumerable(g,g).
'denotes_!'(g).
denotes_copy_term(A,ng,ng).
denotes_copy_term(ng,A,ng).
denotes_copy_term(g,g,g).
denotes_compare(A,B,ng,ng).
denotes_compare(A,ng,B,ng).
denotes_compare(ng,A,B,ng).
denotes_compare(g,g,g,g).
denotes_expand_term(A,ng,ng).
denotes_expand_term(ng,A,ng).
denotes_expand_term(g,g,g).
denotes_sort(A,ng,ng).
denotes_sort(ng,A,ng).
denotes_sort(g,g,g).
denotes_keysort(A,ng,ng).
denotes_keysort(ng,A,ng).
denotes_keysort(g,g,g).
denotes_msort(A,ng,ng).
denotes_msort(ng,A,ng).
denotes_msort(g,g,g).
denotes_name(A,ng,ng).
denotes_name(ng,A,ng).
denotes_name(g,g,g).
denotes_atom_chars(A,ng,ng).
denotes_atom_chars(ng,A,ng).
denotes_atom_chars(g,g,g).
denotes_number_chars(A,ng,ng).
denotes_number_chars(ng,A,ng).
denotes_number_chars(g,g,g).
denotes_numbervars(A,B,ng,ng).
denotes_numbervars(A,ng,B,ng).
denotes_numbervars(ng,A,B,ng).
denotes_numbervars(g,g,g,g).
denotes_repeat(g).
denotes_is_list(ng,ng).
denotes_is_list(g,g).
denotes_is_proper_list(ng,ng).
denotes_is_proper_list(g,g).
denotes_is_partial_list(ng,ng).
denotes_is_partial_list(g,g).
denotes_abolish(ng,ng).
denotes_abolish(g,g).
denotes_abolish(A,ng,ng).
denotes_abolish(ng,A,ng).
denotes_abolish(g,g,g).
denotes_assert(ng,ng).
denotes_assert(g,g).
denotes_assert(A,ng,ng).
denotes_assert(ng,A,ng).
denotes_assert(g,g,g).
denotes_asserta(ng,ng).
denotes_asserta(g,g).
denotes_asserta(A,ng,ng).
denotes_asserta(ng,A,ng).
denotes_asserta(g,g,g).
denotes_assertz(ng,ng).
denotes_assertz(g,g).
denotes_assertz(A,ng,ng).
denotes_assertz(ng,A,ng).
denotes_assertz(g,g,g).
denotes_retract(ng,ng).
denotes_retract(g,g).
denotes_retractall(ng,ng).
denotes_retractall(g,g).
denotes_setof(A,B,ng,ng).
denotes_setof(A,ng,B,ng).
denotes_setof(ng,A,B,ng).
denotes_setof(g,g,g,g).
denotes_findall(A,B,ng,ng).
denotes_findall(A,ng,B,ng).
denotes_findall(ng,A,B,ng).
denotes_findall(g,g,g,g).
denotes_clause(A,ng,ng).
denotes_clause(ng,A,ng).
denotes_clause(g,g,g).
denotes_clause(A,B,ng,ng).
denotes_clause(A,ng,B,ng).
denotes_clause(ng,A,B,ng).
denotes_clause(g,g,g,g).
denotes_abort(g).
denotes_break(g).
denotes_halt(g).
denotes_trace(g).
denotes_error_data(A,B,C,ng,ng).
denotes_error_data(A,B,ng,C,ng).
denotes_error_data(A,ng,B,C,ng).
denotes_error_data(ng,A,B,C,ng).
denotes_error_data(g,g,g,g,g).
denotes_file_error_condition(ng,ng).
denotes_file_error_condition(g,g).
denotes_type_failure_condition(ng,ng).
denotes_type_failure_condition(g,g).
denotes_unknown_predicate_condition(ng,ng).
denotes_unknown_predicate_condition(g,g).
denotes_unknown(A,ng,ng).
denotes_unknown(ng,A,ng).
denotes_unknown(g,g,g).
denotes_nodebug(g).
denotes_debug(g).
denotes_leash(ng,ng).
denotes_leash(g,g).
denotes_debugging(g).
denotes_nofileerrors(g).
denotes_fileerrors(g).
denotes_op(A,B,ng,ng).
denotes_op(A,ng,B,ng).
denotes_op(ng,A,B,ng).
denotes_op(g,g,g,g).
denotes_prompt(A,ng,ng).
denotes_prompt(ng,A,ng).
denotes_prompt(g,g,g).
denotes_listing(g).
denotes_listing(ng,ng).
denotes_listing(g,g).
denotes_current_atom(ng,ng).
denotes_current_atom(g,g).
denotes_current_functor(A,ng,ng).
denotes_current_functor(ng,A,ng).
denotes_current_functor(g,g,g).
denotes_current_predicate(A,ng,ng).
denotes_current_predicate(ng,A,ng).
denotes_current_predicate(g,g,g).
denotes_current_op(A,B,ng,ng).
denotes_current_op(A,ng,B,ng).
denotes_current_op(ng,A,B,ng).
denotes_current_op(g,g,g,g).
denotes_current_key(A,ng,ng).
denotes_current_key(ng,A,ng).
denotes_current_key(g,g,g).
denotes_predicate_property(A,ng,ng).
denotes_predicate_property(ng,A,ng).
denotes_predicate_property(g,g,g).
denotes_prolog_flag(A,ng,ng).
denotes_prolog_flag(ng,A,ng).
denotes_prolog_flag(g,g,g).
denotes_consult(ng,ng).
denotes_consult(g,g).
denotes_ensure_loaded(ng,ng).
denotes_ensure_loaded(g,g).
denotes_close(ng,ng).
denotes_close(g,g).
denotes_exists(ng,ng).
denotes_exists(g,g).
denotes_reconsult(ng,ng).
denotes_reconsult(g,g).
denotes_rename(A,ng,ng).
denotes_rename(ng,A,ng).
denotes_rename(g,g,g).
denotes_save(ng,ng).
denotes_save(g,g).
denotes_see(ng,ng).
denotes_see(g,g).
denotes_seeing(ng,ng).
denotes_seeing(g,g).
denotes_seen(g).
denotes_tell(ng,ng).
denotes_tell(g,g).
denotes_telling(ng,ng).
denotes_telling(g,g).
denotes_told(g).
denotes_get(ng,ng).
denotes_get(g,g).
denotes_get0(ng,ng).
denotes_get0(g,g).
denotes_skip(ng,ng).
denotes_skip(g,g).
denotes_read(ng,ng).
denotes_read(g,g).
denotes_tab(ng,ng).
denotes_tab(g,g).
denotes_print(ng,ng).
denotes_print(g,g).
denotes_writeq(ng,ng).
denotes_writeq(g,g).
denotes_write_canonical(ng,ng).
denotes_write_canonical(g,g).
denotes_display(ng,ng).
denotes_display(g,g).
denotes_format(A,ng,ng).
denotes_format(ng,A,ng).
denotes_format(g,g,g).
denotes_portray_clause(ng,ng).
denotes_portray_clause(g,g).
denotes_recorda(A,B,ng,ng).
denotes_recorda(A,ng,B,ng).
denotes_recorda(ng,A,B,ng).
denotes_recorda(g,g,g,g).
denotes_recordz(A,B,ng,ng).
denotes_recordz(A,ng,B,ng).
denotes_recordz(ng,A,B,ng).
denotes_recordz(g,g,g,g).
denotes_recorded(A,B,ng,ng).
denotes_recorded(A,ng,B,ng).
denotes_recorded(ng,A,B,ng).
denotes_recorded(g,g,g,g).
denotes_erase(ng,ng).
denotes_erase(g,g).
denotes_instance(A,ng,ng).
denotes_instance(ng,A,ng).
denotes_instance(g,g,g).
denotes_deref(A,ng,ng).
denotes_deref(ng,A,ng).
denotes_deref(g,g,g).
denotes_trail(ng,ng).
denotes_trail(g,g).
denotes_push(A,B,ng,ng).
denotes_push(A,ng,B,ng).
denotes_push(ng,A,B,ng).
denotes_push(g,g,g,g).
denotes_adda(A,B,ng,ng).
denotes_adda(A,ng,B,ng).
denotes_adda(ng,A,B,ng).
denotes_adda(g,g,g,g).
denotes_pad(ng,ng).
denotes_pad(g,g).
denotes_h(g).
denotes_r(ng,ng).
denotes_r(g,g).
denotes_allocate(ng,ng).
denotes_allocate(g,g).
denotes_deallocate(ng,ng).
denotes_deallocate(g,g).
denotes_f2i(A,ng,ng).
denotes_f2i(ng,A,ng).
denotes_f2i(g,g,g).
denotes_i2f(A,ng,ng).
denotes_i2f(ng,A,ng).
denotes_i2f(g,g,g).
denotes_fadd(A,B,ng,ng).
denotes_fadd(A,ng,B,ng).
denotes_fadd(ng,A,B,ng).
denotes_fadd(g,g,g,g).
denotes_fsub(A,B,ng,ng).
denotes_fsub(A,ng,B,ng).
denotes_fsub(ng,A,B,ng).
denotes_fsub(g,g,g,g).
denotes_fmul(A,B,ng,ng).
denotes_fmul(A,ng,B,ng).
denotes_fmul(ng,A,B,ng).
denotes_fmul(g,g,g,g).
denotes_fdiv(A,B,ng,ng).
denotes_fdiv(A,ng,B,ng).
denotes_fdiv(ng,A,B,ng).
denotes_fdiv(g,g,g,g).
denotes_add(A,B,ng,ng).
denotes_add(A,ng,B,ng).
denotes_add(ng,A,B,ng).
denotes_add(g,g,g,g).
denotes_sub(A,B,ng,ng).
denotes_sub(A,ng,B,ng).
denotes_sub(ng,A,B,ng).
denotes_sub(g,g,g,g).
denotes_mul(A,B,ng,ng).
denotes_mul(A,ng,B,ng).
denotes_mul(ng,A,B,ng).
denotes_mul(g,g,g,g).
denotes_div(A,B,ng,ng).
denotes_div(A,ng,B,ng).
denotes_div(ng,A,B,ng).
denotes_div(g,g,g,g).
denotes_and(A,B,ng,ng).
denotes_and(A,ng,B,ng).
denotes_and(ng,A,B,ng).
denotes_and(g,g,g,g).
denotes_or(A,B,ng,ng).
denotes_or(A,ng,B,ng).
denotes_or(ng,A,B,ng).
denotes_or(g,g,g,g).
denotes_xor(A,B,ng,ng).
denotes_xor(A,ng,B,ng).
denotes_xor(ng,A,B,ng).
denotes_xor(g,g,g,g).
denotes_sll(A,B,ng,ng).
denotes_sll(A,ng,B,ng).
denotes_sll(ng,A,B,ng).
denotes_sll(g,g,g,g).
denotes_sra(A,B,ng,ng).
denotes_sra(A,ng,B,ng).
denotes_sra(ng,A,B,ng).
denotes_sra(g,g,g,g).
denotes_not(A,ng,ng).
denotes_not(ng,A,ng).
denotes_not(g,g,g).
denotes_ord(A,ng,ng).
denotes_ord(ng,A,ng).
denotes_ord(g,g,g).
denotes_val(A,B,ng,ng).
denotes_val(A,ng,B,ng).
denotes_val(ng,A,B,ng).
denotes_val(g,g,g,g).
denotes_add_nt(A,B,ng,ng).
denotes_add_nt(A,ng,B,ng).
denotes_add_nt(ng,A,B,ng).
denotes_add_nt(g,g,g,g).
denotes_sub_nt(A,B,ng,ng).
denotes_sub_nt(A,ng,B,ng).
denotes_sub_nt(ng,A,B,ng).
denotes_sub_nt(g,g,g,g).
denotes_and_nt(A,B,ng,ng).
denotes_and_nt(A,ng,B,ng).
denotes_and_nt(ng,A,B,ng).
denotes_and_nt(g,g,g,g).
denotes_or_nt(A,B,ng,ng).
denotes_or_nt(A,ng,B,ng).
denotes_or_nt(ng,A,B,ng).
denotes_or_nt(g,g,g,g).
denotes_xor_nt(A,B,ng,ng).
denotes_xor_nt(A,ng,B,ng).
denotes_xor_nt(ng,A,B,ng).
denotes_xor_nt(g,g,g,g).
denotes_sll_nt(A,B,ng,ng).
denotes_sll_nt(A,ng,B,ng).
denotes_sll_nt(ng,A,B,ng).
denotes_sll_nt(g,g,g,g).
denotes_sra_nt(A,B,ng,ng).
denotes_sra_nt(A,ng,B,ng).
denotes_sra_nt(ng,A,B,ng).
denotes_sra_nt(g,g,g,g).
denotes_not_nt(A,ng,ng).
denotes_not_nt(ng,A,ng).
denotes_not_nt(g,g,g).
denotes_trail_bda(ng,ng).
denotes_trail_bda(g,g).
denotes_tflt(g).
denotes_tint(g).
denotes_integer(g).
denotes_tpos(g).
denotes_nonnegative(g).
denotes_tneg(g).
denotes_negative(g).
denotes_tatm(g).
denotes_atom(g).
denotes_tstr(g).
denotes_structure(g).
denotes_tlst(g).
denotes_cons(g).
denotes_tvar(g).
denotes_pointer_tag(ng,ng).
denotes_pointer_tag(g,g).
denotes_number(g).
denotes_atomic(g).
denotes_denumerable(g).
denotes_simple(g).
denotes_compound(g).
denotes_eq(g).
denotes_ne(g).
denotes_lts(g).
denotes_les(g).
denotes_ges(g).
denotes_gts(g).
denotes_feq(g).
denotes_flts(g).
denotes_fgts(g).
denotes_fges(g).
denotes_fles(g).
denotes_fne(g).
denotes_can_overlap(A,B,C,D,E,F,ng,ng).
denotes_can_overlap(A,B,C,D,E,ng,F,ng).
denotes_can_overlap(A,B,C,D,ng,E,F,ng).
denotes_can_overlap(A,B,C,ng,D,E,F,ng).
denotes_can_overlap(A,B,ng,C,D,E,F,ng).
denotes_can_overlap(A,ng,B,C,D,E,F,ng).
denotes_can_overlap(ng,A,B,C,D,E,F,ng).
denotes_can_overlap(g,g,g,g,g,g,g,g).
denotes_trail_if_var(ng,ng).
denotes_trail_if_var(g,g).
denotes_mem(g).
denotes_uninit(A,ng,ng).
denotes_uninit(ng,A,ng).
denotes_uninit(g,g,g).
denotes_uninit(A,B,ng,ng).
denotes_uninit(A,ng,B,ng).
denotes_uninit(ng,A,B,ng).
denotes_uninit(g,g,g,g).
denotes_unbound(ng,ng).
denotes_unbound(g,g).
denotes_either(g).
'denotes_\\'(ng,ng).
'denotes_\\'(g,g).
denotes_511(g).
denotes_128(g).
denotes_64(g).
denotes_447(g).
denotes_16(g).
denotes_509(g).
denotes_192(g).
denotes_252(g).
denotes_255(g).
denotes_256(g).
denotes_259(g).
denotes_319(g).
denotes_383(g).
denotes_48(g).
denotes_463(g).
denotes_495(g).
denotes_479(g).
denotes_60(g).
denotes_451(g).
denotes_240(g).
denotes_271(g).
denotes_12(g).
denotes_499(g).
denotes_66(g).
denotes_445(g).
denotes_510(g).
denotes_508(g).
denotes_sign_flags(A,B,C,ng,ng).
denotes_sign_flags(A,B,ng,C,ng).
denotes_sign_flags(A,ng,B,C,ng).
denotes_sign_flags(ng,A,B,C,ng).
denotes_sign_flags(g,g,g,g,g).
denotes_right(g).
denotes_before(g).
denotes_invalid_negation(ng,ng).
denotes_invalid_negation(g,g).
denotes_check_different(A,ng,ng).
denotes_check_different(ng,A,ng).
denotes_check_different(g,g,g).
denotes_any(g).
denotes_bind_test(ng,ng).
denotes_bind_test(g,g).
denotes_arith(g).
denotes_stand(g).
denotes_7(g).
'denotes_<<'(A,ng,ng).
'denotes_<<'(ng,A,ng).
'denotes_<<'(g,g,g).
'denotes_>>'(A,ng,ng).
'denotes_>>'(ng,A,ng).
'denotes_>>'(g,g,g).
denotes_op_table(A,B,ng,ng).
denotes_op_table(A,ng,B,ng).
denotes_op_table(ng,A,B,ng).
denotes_op_table(g,g,g,g).
denotes_strong_compare_args(A,B,C,D,ng,ng).
denotes_strong_compare_args(A,B,C,ng,D,ng).
denotes_strong_compare_args(A,B,ng,C,D,ng).
denotes_strong_compare_args(A,ng,B,C,D,ng).
denotes_strong_compare_args(ng,A,B,C,D,ng).
denotes_strong_compare_args(g,g,g,g,g,g).
denotes_complex_bitmap(ng,ng).
denotes_complex_bitmap(g,g).
'denotes_Could not convert bitmap \''(g).
'denotes_\' to a disjunction.'(g).
'denotes_Replacing by fail.'(g).
denotes_191(g).
denotes_40(g).
denotes_20(g).
denotes_one_atomic(A,ng,ng).
denotes_one_atomic(ng,A,ng).
denotes_one_atomic(g,g,g).
denotes_no_update(g).
denotes_prolog_implies(A,ng,ng).
denotes_prolog_implies(ng,A,ng).
denotes_prolog_implies(g,g,g).
denotes_update(g).
denotes_align(A,ng,ng).
denotes_align(ng,A,ng).
denotes_align(g,g,g).
'denotes_$varlist'(ng,ng).
'denotes_$varlist'(g,g).
denotes_cut(ng,ng).
denotes_cut(g,g).
denotes_and(g).
denotes_or(g).
denotes_xor(g).
denotes_sll(g).
denotes_sra(g).
denotes_not(g).
denotes_div(g).
denotes_mod(g).
denotes_add(g).
denotes_sub(g).
denotes_mul(g).
'denotes_Illegal use of function float(X): float option is disabled.'(g).
denotes_ctest(A,ng,ng).
denotes_ctest(ng,A,ng).
denotes_ctest(g,g,g).
denotes_or(A,ng,ng).
denotes_or(ng,A,ng).
denotes_or(g,g,g).
'denotes_Illegal use of X/Y: float option is disabled.'(g).
denotes_nop(g).
denotes_error_jump(A,ng,ng).
denotes_error_jump(ng,A,ng).
denotes_error_jump(g,g,g).
denotes_mod(A,B,ng,ng).
denotes_mod(A,ng,B,ng).
denotes_mod(ng,A,B,ng).
denotes_mod(g,g,g,g).
'denotes_$ eq_error'(g).
'denotes_$ ne_error'(g).
'denotes_$ lt_error'(g).
'denotes_$ ge_error'(g).
'denotes_$ gt_error'(g).
'denotes_$ le_error'(g).
'denotes_$ feq_error'(g).
'denotes_$ fne_error'(g).
'denotes_$ flt_error'(g).
'denotes_$ fge_error'(g).
'denotes_$ fgt_error'(g).
'denotes_$ fle_error'(g).
'denotes_$ add_error'(g).
'denotes_$ sub_error'(g).
'denotes_$ mul_error'(g).
'denotes_$ div_error'(g).
'denotes_$ mod_error'(g).
'denotes_$ fadd_error'(g).
'denotes_$ fsub_error'(g).
'denotes_$ fmul_error'(g).
'denotes_$ fdiv_error'(g).
'denotes_$ int_error'(g).
'denotes_$ not_error'(g).
'denotes_$ and_error'(g).
'denotes_$ or_error'(g).
'denotes_$ xor_error'(g).
'denotes_$ sll_error'(g).
'denotes_$ sra_error'(g).
'denotes_0.0'(g).
'denotes_$case'(A,B,ng,ng).
'denotes_$case'(A,ng,B,ng).
'denotes_$case'(ng,A,B,ng).
'denotes_$case'(g,g,g,g).
'denotes_$test'(A,B,C,D,ng,ng).
'denotes_$test'(A,B,C,ng,D,ng).
'denotes_$test'(A,B,ng,C,D,ng).
'denotes_$test'(A,ng,B,C,D,ng).
'denotes_$test'(ng,A,B,C,D,ng).
'denotes_$test'(g,g,g,g,g,g).
denotes_after(g).
'denotes_$else'(A,B,ng,ng).
'denotes_$else'(A,ng,B,ng).
'denotes_$else'(ng,A,B,ng).
'denotes_$else'(g,g,g,g).
denotes_test_nobind(ng,ng).
denotes_test_nobind(g,g).
denotes_same_number(g).
denotes_binds(ng,ng).
denotes_binds(g,g).
denotes_implies(A,ng,ng).
denotes_implies(ng,A,ng).
denotes_implies(g,g,g).
denotes_mutex(A,B,ng,ng).
denotes_mutex(A,ng,B,ng).
denotes_mutex(ng,A,B,ng).
denotes_mutex(g,g,g,g).
denotes_bitmap_combine(A,B,ng,ng).
denotes_bitmap_combine(A,ng,B,ng).
denotes_bitmap_combine(ng,A,B,ng).
denotes_bitmap_combine(g,g,g,g).
denotes_extended_bindset(A,B,C,ng,ng).
denotes_extended_bindset(A,B,ng,C,ng).
denotes_extended_bindset(A,ng,B,C,ng).
denotes_extended_bindset(ng,A,B,C,ng).
denotes_extended_bindset(g,g,g,g,g).
denotes_extended_bindset(A,B,ng,ng).
denotes_extended_bindset(A,ng,B,ng).
denotes_extended_bindset(ng,A,B,ng).
denotes_extended_bindset(g,g,g,g).
denotes_mutex(A,B,C,ng,ng).
denotes_mutex(A,B,ng,C,ng).
denotes_mutex(A,ng,B,C,ng).
denotes_mutex(ng,A,B,C,ng).
denotes_mutex(g,g,g,g,g).
denotes_split_formula(A,B,C,D,E,ng,ng).
denotes_split_formula(A,B,C,D,ng,E,ng).
denotes_split_formula(A,B,C,ng,D,E,ng).
denotes_split_formula(A,B,ng,C,D,E,ng).
denotes_split_formula(A,ng,B,C,D,E,ng).
denotes_split_formula(ng,A,B,C,D,E,ng).
denotes_split_formula(g,g,g,g,g,g,g).
denotes_remove_vars(A,ng,ng).
denotes_remove_vars(ng,A,ng).
denotes_remove_vars(g,g,g).
denotes_combine_formula(A,B,ng,ng).
denotes_combine_formula(A,ng,B,ng).
denotes_combine_formula(ng,A,B,ng).
denotes_combine_formula(g,g,g,g).
denotes_all(g).
denotes_uninit_set(A,ng,ng).
denotes_uninit_set(ng,A,ng).
denotes_uninit_set(g,g,g).
denotes_diffv(A,B,ng,ng).
denotes_diffv(A,ng,B,ng).
denotes_diffv(ng,A,B,ng).
denotes_diffv(g,g,g,g).
denotes_aliasing_flag(A,B,ng,ng).
denotes_aliasing_flag(A,ng,B,ng).
denotes_aliasing_flag(ng,A,B,ng).
denotes_aliasing_flag(g,g,g,g).
denotes_end(g).
denotes_key(A,B,ng,ng).
denotes_key(A,ng,B,ng).
denotes_key(ng,A,B,ng).
denotes_key(g,g,g,g).
denotes_pair(A,B,C,ng,ng).
denotes_pair(A,B,ng,C,ng).
denotes_pair(A,ng,B,C,ng).
denotes_pair(ng,A,B,C,ng).
denotes_pair(g,g,g,g,g).
denotes_next_name(A,B,C,D,ng,ng).
denotes_next_name(A,B,C,ng,D,ng).
denotes_next_name(A,B,ng,C,D,ng).
denotes_next_name(A,ng,B,C,D,ng).
denotes_next_name(ng,A,B,C,D,ng).
denotes_next_name(g,g,g,g,g,g).
denotes_cls_to_proc(A,B,C,ng,ng).
denotes_cls_to_proc(A,B,ng,C,ng).
denotes_cls_to_proc(A,ng,B,C,ng).
denotes_cls_to_proc(ng,A,B,C,ng).
denotes_cls_to_proc(g,g,g,g,g).
denotes_cls_to_ptrees_loop(A,ng,ng).
denotes_cls_to_ptrees_loop(ng,A,ng).
denotes_cls_to_ptrees_loop(g,g,g).
denotes_require(A,ng,ng).
denotes_require(ng,A,ng).
denotes_require(g,g,g).
denotes_before(A,ng,ng).
denotes_before(ng,A,ng).
denotes_before(g,g,g).
denotes_and(A,ng,ng).
denotes_and(ng,A,ng).
denotes_and(g,g,g).
denotes_xor(A,ng,ng).
denotes_xor(ng,A,ng).
denotes_xor(g,g,g).
'denotes_-'(ng,ng).
'denotes_-'(g,g).
denotes_99(g).
denotes_117(g).
denotes_range(A,B,ng,ng).
denotes_range(A,ng,B,ng).
denotes_range(ng,A,B,ng).
denotes_range(g,g,g,g).
denotes_test_arg(A,ng,ng).
denotes_test_arg(ng,A,ng).
denotes_test_arg(g,g,g).
denotes_same_order(g).
denotes_adjacent_nontrivial(ng,ng).
denotes_adjacent_nontrivial(g,g).
denotes_info(A,B,C,ng,ng).
denotes_info(A,B,ng,C,ng).
denotes_info(A,ng,B,C,ng).
denotes_info(ng,A,B,C,ng).
denotes_info(g,g,g,g,g).
denotes_info2(A,B,ng,ng).
denotes_info2(A,ng,B,ng).
denotes_info2(ng,A,B,ng).
denotes_info2(g,g,g,g).
denotes_first(g).
denotes_msg_args(A,B,ng,ng).
denotes_msg_args(A,ng,B,ng).
denotes_msg_args(ng,A,B,ng).
denotes_msg_args(g,g,g,g).
denotes_a_head(A,ng,ng).
denotes_a_head(ng,A,ng).
denotes_a_head(g,g,g).
denotes_102(g).
denotes_collect_msg(A,B,C,ng,ng).
denotes_collect_msg(A,B,ng,C,ng).
denotes_collect_msg(A,ng,B,C,ng).
denotes_collect_msg(ng,A,B,C,ng).
denotes_collect_msg(g,g,g,g,g).
denotes_notfirst(g).
denotes_end_fill_args(A,B,ng,ng).
denotes_end_fill_args(A,ng,B,ng).
denotes_end_fill_args(ng,A,B,ng).
denotes_end_fill_args(g,g,g,g).
denotes_type_propagate(A,B,ng,ng).
denotes_type_propagate(A,ng,B,ng).
denotes_type_propagate(ng,A,B,ng).
denotes_type_propagate(g,g,g,g).
denotes_mode_propagate(A,B,C,ng,ng).
denotes_mode_propagate(A,B,ng,C,ng).
denotes_mode_propagate(A,ng,B,C,ng).
denotes_mode_propagate(ng,A,B,C,ng).
denotes_mode_propagate(g,g,g,g,g).
denotes_uninit(g).
denotes_ground(g).
denotes_rderef(g).
denotes_single_word(ng,ng).
denotes_single_word(g,g).
denotes_disj_inside(ng,ng).
denotes_disj_inside(g,g).
denotes_strong_disj_p(ng,ng).
denotes_strong_disj_p(g,g).
denotes_disj_exists(ng,ng).
denotes_disj_exists(g,g).
denotes_info(A,B,ng,ng).
denotes_info(A,ng,B,ng).
denotes_info(ng,A,B,ng).
denotes_info(g,g,g,g).
'denotes_ has multiple definitions.'(g).
'denotes_Only the first definition will be used.'(g).
denotes_inline_replace_conj(A,B,ng,ng).
denotes_inline_replace_conj(A,ng,B,ng).
denotes_inline_replace_conj(ng,A,B,ng).
denotes_inline_replace_conj(g,g,g,g).
'denotes_Total complexity of program is '(g).
'denotes_uc= '(g).
'denotes_ gc= '(g).
'denotes_ tc= '(g).
'denotes_ times_called= '(g).
'denotes_ pred= '(g).
'denotes_Mismatch in complexity measurement.'(g).
denotes_get(A,ng,ng).
denotes_get(ng,A,ng).
denotes_get(g,g,g).
denotes_fget(A,ng,ng).
denotes_fget(ng,A,ng).
denotes_fget(g,g,g).
denotes_set(A,ng,ng).
denotes_set(ng,A,ng).
denotes_set(g,g,g).
denotes_add(A,ng,ng).
denotes_add(ng,A,ng).
denotes_add(g,g,g).
denotes_sub(ng,ng).
denotes_sub(g,g).
denotes_add(ng,ng).
denotes_add(g,g).
denotes_sub_set(ng,ng).
denotes_sub_set(g,g).
denotes_add_set(ng,ng).
denotes_add_set(g,g).
denotes_top(g).
denotes_nontop(g).
'denotes_:- '(g).
'denotes_%  '(g).
'denotes_Mode '(g).
'denotes_ replaced by '(g).
'denotes_ is incorrect.'(g).
'denotes_Compilation continued with corrected mode '(g).
denotes_uninit_mem(ng,ng).
denotes_uninit_mem(g,g).
'denotes_Uninit(reg) conversion pass--changed '(g).
'denotes_ predicates.'(g).
denotes_exit(ng,ng).
denotes_exit(g,g).
denotes_entry_data(ng,ng).
denotes_entry_data(g,g).
denotes_entry(A,B,C,D,E,ng,ng).
denotes_entry(A,B,C,D,ng,E,ng).
denotes_entry(A,B,C,ng,D,E,ng).
denotes_entry(A,B,ng,C,D,E,ng).
denotes_entry(A,ng,B,C,D,E,ng).
denotes_entry(ng,A,B,C,D,E,ng).
denotes_entry(g,g,g,g,g,g,g).
'denotes_% Modes generated:'(g).
'denotes_There are no usable entry points, so no flow analysis was done.'(g).
'denotes_Analysis pass--changed '(g).
'denotes_ entry and exit modes.'(g).
denotes_unknown(g).
denotes_nonvar(g).
denotes_caller(A,ng,ng).
denotes_caller(ng,A,ng).
denotes_caller(g,g,g).
denotes_state(A,B,C,D,ng,ng).
denotes_state(A,B,C,ng,D,ng).
denotes_state(A,B,ng,C,D,ng).
denotes_state(A,ng,B,C,D,ng).
denotes_state(ng,A,B,C,D,ng).
denotes_state(g,g,g,g,g,g).
denotes_unify(A,B,C,ng,ng).
denotes_unify(A,B,ng,C,ng).
denotes_unify(A,ng,B,C,ng).
denotes_unify(ng,A,B,C,ng).
denotes_unify(g,g,g,g,g).
denotes_index(A,B,ng,ng).
denotes_index(A,ng,B,ng).
denotes_index(ng,A,B,ng).
denotes_index(g,g,g,g).
denotes_value(A,B,ng,ng).
denotes_value(A,ng,B,ng).
denotes_value(ng,A,B,ng).
denotes_value(g,g,g,g).
denotes_gnddrf(g).
denotes_nondrf(g).
'denotes_Bug in lub with '(g).
denotes_lub(A,B,ng,ng).
denotes_lub(A,ng,B,ng).
denotes_lub(ng,A,B,ng).
denotes_lub(g,g,g,g).
denotes_length_test_user(A,B,ng,ng).
denotes_length_test_user(A,ng,B,ng).
denotes_length_test_user(ng,A,B,ng).
denotes_length_test_user(g,g,g,g).
denotes_flat_conj(A,ng,ng).
denotes_flat_conj(ng,A,ng).
denotes_flat_conj(g,g,g).
denotes_varset(A,ng,ng).
denotes_varset(ng,A,ng).
denotes_varset(g,g,g).
'denotes_$body'(A,B,ng,ng).
'denotes_$body'(A,ng,B,ng).
'denotes_$body'(ng,A,B,ng).
'denotes_$body'(g,g,g,g).
denotes_98(g).
denotes_standard_order(ng,ng).
denotes_standard_order(g,g).
denotes_intersectv(A,B,ng,ng).
denotes_intersectv(A,ng,B,ng).
denotes_intersectv(ng,A,B,ng).
denotes_intersectv(g,g,g,g).
denotes_new_head(A,B,C,ng,ng).
denotes_new_head(A,B,ng,C,ng).
denotes_new_head(A,ng,B,C,ng).
denotes_new_head(ng,A,B,C,ng).
denotes_new_head(g,g,g,g,g).
'denotes_Selection code:'(g).
'denotes_First test is '(g).
denotes_key(A,ng,ng).
denotes_key(ng,A,ng).
denotes_key(g,g,g).
denotes_val(A,B,C,D,E,ng,ng).
denotes_val(A,B,C,D,ng,E,ng).
denotes_val(A,B,C,ng,D,E,ng).
denotes_val(A,B,ng,C,D,E,ng).
denotes_val(A,ng,B,C,D,E,ng).
denotes_val(ng,A,B,C,D,E,ng).
denotes_val(g,g,g,g,g,g,g).
denotes_valid_testset(A,B,C,D,E,F,G,H,I,ng,ng).
denotes_valid_testset(A,B,C,D,E,F,G,H,ng,I,ng).
denotes_valid_testset(A,B,C,D,E,F,G,ng,H,I,ng).
denotes_valid_testset(A,B,C,D,E,F,ng,G,H,I,ng).
denotes_valid_testset(A,B,C,D,E,ng,F,G,H,I,ng).
denotes_valid_testset(A,B,C,D,ng,E,F,G,H,I,ng).
denotes_valid_testset(A,B,C,ng,D,E,F,G,H,I,ng).
denotes_valid_testset(A,B,ng,C,D,E,F,G,H,I,ng).
denotes_valid_testset(A,ng,B,C,D,E,F,G,H,I,ng).
denotes_valid_testset(ng,A,B,C,D,E,F,G,H,I,ng).
denotes_valid_testset(g,g,g,g,g,g,g,g,g,g,g).
denotes_equal(g).
denotes_v(A,ng,ng).
denotes_v(ng,A,ng).
denotes_v(g,g,g).
denotes_relational_test(A,B,ng,ng).
denotes_relational_test(A,ng,B,ng).
denotes_relational_test(ng,A,B,ng).
denotes_relational_test(g,g,g,g).
denotes_relational_testset(ng,ng).
denotes_relational_testset(g,g).
denotes_typecheck(g).
denotes_comparison(A,ng,ng).
denotes_comparison(ng,A,ng).
denotes_comparison(g,g,g).
denotes_rel_flag(A,ng,ng).
denotes_rel_flag(ng,A,ng).
denotes_rel_flag(g,g,g).
denotes_goodness_testset(A,B,ng,ng).
denotes_goodness_testset(A,ng,B,ng).
denotes_goodness_testset(ng,A,B,ng).
denotes_goodness_testset(g,g,g,g).
denotes_pick_eq(A,B,C,D,E,ng,ng).
denotes_pick_eq(A,B,C,D,ng,E,ng).
denotes_pick_eq(A,B,C,ng,D,E,ng).
denotes_pick_eq(A,B,ng,C,D,E,ng).
denotes_pick_eq(A,ng,B,C,D,E,ng).
denotes_pick_eq(ng,A,B,C,D,E,ng).
denotes_pick_eq(g,g,g,g,g,g,g).
denotes_hash(ng,ng).
denotes_hash(g,g).
'denotes_Goodness of '(g).
denotes_switch(ng,ng).
denotes_switch(g,g).
denotes_v(ng,ng).
denotes_v(g,g).
denotes_unionv(A,B,ng,ng).
denotes_unionv(A,ng,B,ng).
denotes_unionv(ng,A,B,ng).
denotes_unionv(g,g,g,g).
denotes_logical_subsume(A,B,ng,ng).
denotes_logical_subsume(A,ng,B,ng).
denotes_logical_subsume(ng,A,B,ng).
denotes_logical_subsume(g,g,g,g).
denotes_logical_simplify(A,ng,ng).
denotes_logical_simplify(ng,A,ng).
denotes_logical_simplify(g,g,g).
denotes_selection(A,B,C,D,E,ng,ng).
denotes_selection(A,B,C,D,ng,E,ng).
denotes_selection(A,B,C,ng,D,E,ng).
denotes_selection(A,B,ng,C,D,E,ng).
denotes_selection(A,ng,B,C,D,E,ng).
denotes_selection(ng,A,B,C,D,E,ng).
denotes_selection(g,g,g,g,g,g,g).
denotes_restore(ng,ng).
denotes_restore(g,g).
'denotes_peephole started'(g).
denotes_call(g).
'denotes_Number of duplicate blocks = '(g).
denotes_comment(ng,ng).
denotes_comment(g,g).
denotes_map_blocks(A,B,ng,ng).
denotes_map_blocks(A,ng,B,ng).
denotes_map_blocks(ng,A,B,ng).
denotes_map_blocks(g,g,g,g).
denotes_l(A,ng,ng).
denotes_l(ng,A,ng).
denotes_l(g,g,g).
denotes_has_label(ng,ng).
denotes_has_label(g,g).
denotes_small_block(ng,ng).
denotes_small_block(g,g).
denotes_distant_branch(ng,ng).
denotes_distant_branch(g,g).
'denotes_Able to remove a block after '(g).
denotes_end_block(ng,ng).
denotes_end_block(g,g).
'denotes_Number of unique labels = '(g).
denotes_no_opt_block(ng,ng).
denotes_no_opt_block(g,g).
denotes_last(A,ng,ng).
denotes_last(ng,A,ng).
denotes_last(g,g,g).
denotes_has_recursion(A,ng,ng).
denotes_has_recursion(ng,A,ng).
denotes_has_recursion(g,g,g).
denotes_repl_choice(A,B,C,D,ng,ng).
denotes_repl_choice(A,B,C,ng,D,ng).
denotes_repl_choice(A,B,ng,C,D,ng).
denotes_repl_choice(A,ng,B,C,D,ng).
denotes_repl_choice(ng,A,B,C,D,ng).
denotes_repl_choice(g,g,g,g,g,g).
'denotes_Number of choice-fail replacements = '(g).
denotes_rep(A,B,ng,ng).
denotes_rep(A,ng,B,ng).
denotes_rep(ng,A,B,ng).
denotes_rep(g,g,g,g).
denotes_push(ng,ng).
denotes_push(g,g).
denotes_branch(ng,ng).
denotes_branch(g,g).
denotes_to_next_label(A,B,ng,ng).
denotes_to_next_label(A,ng,B,ng).
denotes_to_next_label(ng,A,B,ng).
denotes_to_next_label(g,g,g,g).
denotes_branch(A,B,ng,ng).
denotes_branch(A,ng,B,ng).
denotes_branch(ng,A,B,ng).
denotes_branch(g,g,g,g).
denotes_branch_dest_bag(A,ng,ng).
denotes_branch_dest_bag(ng,A,ng).
denotes_branch_dest_bag(g,g,g).
denotes_is_in(A,ng,ng).
denotes_is_in(ng,A,ng).
denotes_is_in(g,g,g).
denotes_void(g).
denotes_reg(ng,ng).
denotes_reg(g,g).
denotes_ind(ng,ng).
denotes_ind(g,g).
denotes_tmatch(A,B,ng,ng).
denotes_tmatch(A,ng,B,ng).
denotes_tmatch(ng,A,B,ng).
denotes_tmatch(g,g,g,g).
denotes_s_o(A,ng,ng).
denotes_s_o(ng,A,ng).
denotes_s_o(g,g,g).
denotes_i(g).
denotes_is_syn(A,ng,ng).
denotes_is_syn(ng,A,ng).
denotes_is_syn(g,g,g).
denotes_trail_bda(A,ng,ng).
denotes_trail_bda(ng,A,ng).
denotes_trail_bda(g,g,g).
denotes_queue_sda(A,B,ng,ng).
denotes_queue_sda(A,ng,B,ng).
denotes_queue_sda(ng,A,B,ng).
denotes_queue_sda(g,g,g,g).
denotes_simple_call(ng,ng).
denotes_simple_call(g,g).
denotes_ord(A,B,ng,ng).
denotes_ord(A,ng,B,ng).
denotes_ord(ng,A,B,ng).
denotes_ord(g,g,g,g).
denotes_val(A,B,C,ng,ng).
denotes_val(A,B,ng,C,ng).
denotes_val(A,ng,B,C,ng).
denotes_val(ng,A,B,C,ng).
denotes_val(g,g,g,g,g).
denotes_c(ng,ng).
denotes_c(g,g).
denotes_d(ng,ng).
denotes_d(g,g).
denotes_f(ng,ng).
denotes_f(g,g).
denotes_hash_length(ng,ng).
denotes_hash_length(g,g).
denotes_other(g).
denotes_equal(A,ng,ng).
denotes_equal(ng,A,ng).
denotes_equal(g,g,g).
denotes_deref(g).
denotes_complex_type_error(g).
'denotes_Mutex of '(g).
'denotes_ in choice'(g).
denotes_choice(A,ng,ng).
denotes_choice(ng,A,ng).
denotes_choice(g,g,g).
denotes_arity_error(g).
denotes_denumerable_type(ng,ng).
denotes_denumerable_type(g,g).
denotes_132(g).
denotes_130(g).
denotes_129(g).
denotes_131(g).
denotes_122(g).
denotes_120(g).
denotes_85(g).
denotes_80(g).
denotes_79(g).
denotes_78(g).
denotes_50(g).
denotes_41(g).
'denotes_$sel_error'(g).
'denotes_) is called with '(g).
'denotes_Variable '(g).
'denotes_ is not initialized.'(g).
'denotes_Register allocation could not be done for the clause:'(g).
'denotes_because of a bug in the register allocation routine.'(g).
'denotes_Replaced '(g).
'denotes_ by '(g).
'denotes_The mode formula at this point is '(g).
denotes_data(A,ng,ng).
denotes_data(ng,A,ng).
denotes_data(g,g,g).
denotes_data(A,B,ng,ng).
denotes_data(A,ng,B,ng).
denotes_data(ng,A,B,ng).
denotes_data(g,g,g,g).
'denotes_$varlist'(A,ng,ng).
'denotes_$varlist'(ng,A,ng).
'denotes_$varlist'(g,g,g).
denotes_flag(A,ng,ng).
denotes_flag(ng,A,ng).
denotes_flag(g,g,g).
denotes_fence(g).
'denotes_Bad require modes--the goal '(g).
'denotes_ can never be reached.'(g).
denotes_variable(g).
'denotes_Argument '(g).
'denotes_ is duplicated.'(g).
'denotes_Arguments '(g).
'denotes_ are duplicated.'(g).
denotes_ini(g).
'denotes_ is given an init but requires an uninit.'(g).
denotes_sf(g).
denotes_tree_trav_entry(A,B,ng,ng).
denotes_tree_trav_entry(A,ng,B,ng).
denotes_tree_trav_entry(ng,A,B,ng).
denotes_tree_trav_entry(g,g,g,g).
denotes_void(ng,ng).
denotes_void(g,g).
denotes_trivial_moves(ng,ng).
denotes_trivial_moves(g,g).
denotes_var(A,B,ng,ng).
denotes_var(A,ng,B,ng).
denotes_var(ng,A,B,ng).
denotes_var(g,g,g,g).
denotes_find_usage(A,B,C,ng,ng).
denotes_find_usage(A,B,ng,C,ng).
denotes_find_usage(A,ng,B,C,ng).
denotes_find_usage(ng,A,B,C,ng).
denotes_find_usage(g,g,g,g,g).
denotes_usage_overlap(A,B,C,ng,ng).
denotes_usage_overlap(A,B,ng,C,ng).
denotes_usage_overlap(A,ng,B,C,ng).
denotes_usage_overlap(ng,A,B,C,ng).
denotes_usage_overlap(g,g,g,g,g).
denotes_rest_allocate(A,B,C,D,ng,ng).
denotes_rest_allocate(A,B,C,ng,D,ng).
denotes_rest_allocate(A,B,ng,C,D,ng).
denotes_rest_allocate(A,ng,B,C,D,ng).
denotes_rest_allocate(ng,A,B,C,D,ng).
denotes_rest_allocate(g,g,g,g,g,g).
denotes_pref_closure(A,ng,ng).
denotes_pref_closure(ng,A,ng).
denotes_pref_closure(g,g,g).
denotes_pref_allocate(A,B,C,D,ng,ng).
denotes_pref_allocate(A,B,C,ng,D,ng).
denotes_pref_allocate(A,B,ng,C,D,ng).
denotes_pref_allocate(A,ng,B,C,D,ng).
denotes_pref_allocate(ng,A,B,C,D,ng).
denotes_pref_allocate(g,g,g,g,g,g).
denotes_already_used(A,B,C,D,E,ng,ng).
denotes_already_used(A,B,C,D,ng,E,ng).
denotes_already_used(A,B,C,ng,D,E,ng).
denotes_already_used(A,B,ng,C,D,E,ng).
denotes_already_used(A,ng,B,C,D,E,ng).
denotes_already_used(ng,A,B,C,D,E,ng).
denotes_already_used(g,g,g,g,g,g,g).
denotes_nonlast(g).
'denotes_?'(g).
denotes_last(g).
denotes_term(ng,ng).
denotes_term(g,g).
'denotes_Found structure '(g).
'denotes_ at depth '(g).
main:-adefault,pipe.
constC(A,B,C):-'denotes_.'(B,C,A).
term_expansion(A,B):-functor(C,D,E),u_has_hidden(C,F),u_new_goal(C,F,G,H),u_create_acc_pass(F,G,H,I,J),u_flat_conj(K,L),u_expand_body(L,M,N,F,I,J),u_flat_conj(M,O),cut,'denotes_/'(D,E,N),'denotes_:-'(H,O,B),'denotes_-->>'(C,K,A).
library_directory(A):-'denotes_/hprg/q2.0/library'(A).
library_directory(A):-'denotes_/hprg/q2.0/tools'(A).
library_directory(A):-'denotes_/hprg/q2.0/IPC'(A).
copyright(A,B):-'denotes_Aquarius Prolog compiler'(B),denotes_1(A).
copyright(A,B):-'denotes_Copyright (C) 1989-91 P. Van Roy and Regents of the University of California'(B),denotes_2(A).
copyright(A,B):-'denotes_All rights reserved.'(B),denotes_3(A).
compiler_version(A):-'denotes_Fri Sep 20 10:16:37 PDT 1991'(A).
u_has_hidden(A,B):-functor(A,C,D),pred_info(C,D,B).
u_has_hidden(A,B):-functor(A,C,D),neg(E),denotes_pred_info(C,D,F,E),'denotes_[]'(B).
u_new_goal(A,B,C,D):-functor(A,E,C),u_number_args(B,C,F),functor(D,E,F),u_match(G,C,A,D),denotes_1(G).
u_create_acc_pass(A,B,C,D,E):-'denotes_[]'(E),'denotes_[]'(D),'denotes_[]'(A).
u_create_acc_pass(A,B,C,D,E):-u_is_acc(F),cut,exprEval(G,H),arg(G,C,I),exprEval(J,K),arg(J,C,L),u_create_acc_pass(M,J,C,N,E),'denotes_+'(B,O,K),denotes_2(O),'denotes_+'(B,P,H),denotes_1(P),'denotes_.'(Q,N,D),denotes_acc(F,I,L,Q),'denotes_.'(F,M,A).
u_create_acc_pass(A,B,C,D,E):-u_is_pass(F),cut,exprEval(G,H),arg(G,C,I),u_create_acc_pass(J,G,C,D,K),'denotes_+'(B,L,H),denotes_1(L),'denotes_.'(M,K,E),denotes_pass(F,I,M),'denotes_.'(F,J,A).
u_create_acc_pass(A,B,C,D,E):-neg(F),neg(G),write(H),write(I),write(J),nl,'denotes_ is not a hidden parameter.'(J),'denotes_*** Error: '(H),denotes_u_is_pass(I,G),denotes_u_is_acc(I,F),'denotes_.'(I,K,A).
u_flat_conj(A,B):-u_flat_conj(A,B,C),denotes_true(C).
u_expand_body(A,B,C,D,E,F):-u_finish_acc(E),denotes_true(B),denotes_true(A).
u_expand_body(A,B,C,D,E,F):-u_expand_goal(G,H,C,D,E,I,F),u_expand_body(J,K,C,D,I,F),'denotes_,'(H,K,B),'denotes_,'(G,J,A).
u_finish_acc(A):-'denotes_[]'(A).
u_finish_acc(A):-u_finish_acc(B),'denotes_.'(C,B,A),denotes_acc(D,E,E,C).
u_expand_goal(A,B,C,D,E,E,F):-cut,'denotes_{}'(B,A).
u_expand_goal(A,B,C,D,E,F,G):-u_replace_acc(H,I,J,K,J,E,F),cut,denotes_dcg(H),'denotes_='(I,L,B),denotes_insert(L,K,A).
u_expand_goal(A,B,C,D,E,F,G):-u_replace_acc(H,I,J,K,J,E,F),cut,'denotes_='(I,L,B),'denotes_:'(M,H,A),denotes_insert(L,K,M).
u_expand_goal(A,B,C,D,E,F,G):-neg(H),u_has_hidden(I,J),cut,u_make_list(K,L),u_new_goal(I,L,M,B),u_use_acc_pass(L,M,B,E,F,G),'denotes_[]'(J),denotes_u_list(I,H),'denotes_:'(I,K,A).
u_expand_goal(A,B,C,D,E,F,G):-neg(H),u_has_hidden(I,J),nonident(J,K),cut,u_make_list(L,M),u_new_goal(I,J,N,B),u_replace_defaults(J,O,M),u_use_acc_pass(O,N,B,E,F,G),'denotes_[]'(K),denotes_u_list(I,H),'denotes_:'(I,L,A).
u_expand_goal(A,B,C,D,E,F,G):-u_list(H),cut,u_joiner(H,I,C,B,E,F),'denotes_:'(H,I,A).
u_expand_goal(A,B,C,D,E,F,G):-u_list(A),cut,u_joiner(A,H,C,B,E,F),denotes_dcg(H).
u_expand_goal(A,B,C,D,E,E,F):-var(G),nonvar(H),u_member(I,E),cut,denotes_acc(H,G,J,I),denotes_true(B),'denotes_/'(G,H,A).
u_expand_goal(A,B,C,D,E,E,F):-var(G),nonvar(H),u_member(I,F),cut,denotes_pass(H,G,I),denotes_true(B),'denotes_/'(G,H,A).
u_expand_goal(A,B,C,D,E,E,F):-var(G),nonvar(H),u_member(I,E),cut,denotes_acc(H,J,G,I),denotes_true(B),'denotes_/'(H,G,A).
u_expand_goal(A,B,C,D,E,E,F):-var(G),var(H),nonvar(I),u_member(J,E),cut,denotes_acc(I,G,H,J),denotes_true(B),'denotes_/'(K,H,A),'denotes_/'(G,I,K).
u_expand_goal(A,B,C,D,E,E,F):-write(G),write(C),write(H),write(I),write(J),nl,'denotes_ uses a non-existent hidden parameter.'(J),'denotes_/'(K,L,I),'denotes_ the term '(H),'denotes_*** Warning: in '(G),denotes_true(B),'denotes_/'(K,L,A).
u_expand_goal(A,B,C,D,E,F,G):-u_has_hidden(A,H),cut,u_new_goal(A,H,I,B),u_use_acc_pass(H,I,B,E,F,G).
u_replace_acc(A,B,C,D,E,F,G):-u_member(H,F),cut,u_replace(I,J,F,G),denotes_acc(A,D,E,J),denotes_acc(A,K,L,I),denotes_acc(A,B,C,H).
u_list(A):-nonvar(B),cut,'denotes_.'(C,D,B),'denotes_.'(C,D,A).
u_list(A):-ident(A,B),cut,'denotes_[]'(B).
u_make_list(A,B):-neg(C),cut,denotes_u_list(A,C),'denotes_.'(A,D,B),'denotes_[]'(D).
u_make_list(A,A):-u_list(A),cut.
u_use_acc_pass(A,B,C,D,D,E):-'denotes_[]'(A).
u_use_acc_pass(A,B,C,D,E,F):-u_replace_acc(G,H,I,J,I,D,K),cut,exprEval(L,M),arg(L,C,H),exprEval(N,O),arg(N,C,J),u_use_acc_pass(P,N,C,K,E,F),'denotes_+'(B,Q,O),denotes_2(Q),'denotes_+'(B,R,M),denotes_1(R),'denotes_.'(G,P,A).
u_use_acc_pass(A,B,C,D,E,F):-u_acc_info(G,H,I),cut,exprEval(J,K),arg(J,C,H),exprEval(L,M),arg(L,C,I),u_use_acc_pass(N,L,C,D,E,F),'denotes_+'(B,O,M),denotes_2(O),'denotes_+'(B,P,K),denotes_1(P),'denotes_.'(G,N,A).
u_use_acc_pass(A,B,C,D,E,F):-u_is_pass(G),u_member(H,F),cut,exprEval(I,J),arg(I,C,K),u_use_acc_pass(L,I,C,D,E,F),'denotes_+'(B,M,J),denotes_1(M),denotes_pass(G,K,H),'denotes_.'(G,L,A).
u_use_acc_pass(A,B,C,D,E,F):-u_pass_info(G,H),cut,exprEval(I,J),arg(I,C,H),u_use_acc_pass(K,I,C,D,E,F),'denotes_+'(B,L,J),denotes_1(L),'denotes_.'(G,K,A).
u_use_acc_pass(A,B,C,D,D,E):-write(F),write(G),write(H),nl,'denotes_ does not exist.'(H),'denotes_*** Error: the hidden parameter '(F),'denotes_.'(G,I,A).
u_replace_defaults(A,B,C):-'denotes_[]'(B),'denotes_[]'(A).
u_replace_defaults(A,B,C):-u_replace_default(D,E,C),u_replace_defaults(F,G,C),'denotes_.'(E,G,B),'denotes_.'(D,F,A).
u_joiner(A,B,C,D,E,E):-denotes_true(D),'denotes_[]'(A).
u_joiner(A,B,C,D,E,F):-u_replace_acc(B,G,H,I,H,E,J),u_acc_info(B,K,G,I,L,M,N),cut,u_joiner(O,B,C,P,J,F),'denotes_,'(L,P,D),'denotes_.'(K,O,A).
u_joiner(A,B,C,D,E,F):-write(G),write(C),write(H),write(B),write(I),nl,u_joiner(J,B,C,D,E,F),'denotes_ does not exist.'(I),'denotes_ the accumulator '(H),'denotes_*** Warning: in '(G),'denotes_.'(K,J,A).
u_member(A,B):-'denotes_.'(A,C,B).
u_member(A,B):-u_member(A,C),'denotes_.'(D,C,B).
u_is_acc(A):-atomic(A),cut,u_acc_info(A,B,C,D,E,F,G).
u_is_acc(A):-functor(A,B,C),cut,u_acc_info(B,D,E,F,G,H,I),denotes_2(C).
u_is_pass(A):-atomic(A),cut,u_pass_info(A,B).
u_is_pass(A):-functor(A,B,C),cut,u_pass_info(B,D),denotes_1(C).
u_acc_info(A,B,C):-functor(A,D,E),u_is_acc(D),cut,arg(F,A,B),arg(G,A,C),denotes_2(G),denotes_1(F),denotes_2(E).
u_acc_info(A,B,C):-u_acc_info(A,D,E,F,G,B,C).
u_pass_info(A,B):-functor(A,C,D),u_is_pass(C),cut,arg(E,A,B),denotes_1(E),denotes_1(D).
u_pass_info(A,B):-pass_info(A,B).
u_pass_info(A,B):-pass_info(A).
u_replace(A,B,C,D):-'denotes_[]'(D),'denotes_[]'(C).
u_replace(A,B,C,D):-cut,u_replace(A,B,E,F),'denotes_.'(B,F,D),'denotes_.'(A,E,C).
u_replace(A,B,C,D):-neg(E),cut,u_replace(A,B,F,G),'denotes_='(H,A,E),'denotes_.'(H,G,D),'denotes_.'(H,F,C).
u_number_args(A,B,B):-'denotes_[]'(A).
u_number_args(A,B,C):-u_is_acc(D),cut,exprEval(E,F),u_number_args(G,E,C),'denotes_+'(B,H,F),denotes_2(H),'denotes_.'(D,G,A).
u_number_args(A,B,C):-u_is_pass(D),cut,exprEval(E,F),u_number_args(G,E,C),'denotes_+'(B,H,F),denotes_1(H),'denotes_.'(D,G,A).
u_match(A,B,C,D):-gt(A,B),cut.
u_match(A,B,C,D):-le(A,B),cut,arg(A,C,E),arg(A,D,E),exprEval(F,G),u_match(F,B,C,D),'denotes_+'(A,H,G),denotes_1(H).
pred_info(A,B,C):-denotes_0(B),denotes_u_dummy(A).
u_acc_info(A,B,C,D,E,F,G):-acc_info(A,B,C,D,E,F,G).
u_acc_info(A,B,C,D,E,F,G):-acc_info(A,B,C,D,E).
u_acc_info(A,B,C,D,E,F,G):-'denotes_[]'(G),'denotes_='(C,H,E),'denotes_.'(B,D,H),denotes_dcg(A).
acc_info(A,B,C,D,E,F,G):-denotes_u_dummy(A).
acc_info(A,B,C,D,E):-denotes_u_dummy(A).
pass_info(A,B):-denotes_u_dummy(A).
pass_info(A):-denotes_u_dummy(A).
u_replace_default(A,B,C):-functor(B,A,D),u_member(B,C),cut,denotes_2(D).
u_replace_default(A,B,C):-functor(B,A,D),u_member(B,C),cut,denotes_1(D).
u_replace_default(A,A,B):-true.
u_flat_conj(A,B,B):-denotes_true(A).
u_flat_conj(A,B,C):-u_flat_conj(D,B,E),u_flat_conj(F,E,C),'denotes_,'(D,F,A).
u_flat_conj(A,B,C):-neg(D),neg(E),'denotes_='(A,F,E),'denotes_,'(G,H,F),'denotes_='(A,I,D),denotes_true(I),'denotes_,'(A,C,B).
u_append(A,B,B):-'denotes_[]'(A).
u_append(A,B,C):-u_append(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
include_stack(A):-'denotes_[]'(A).
default_option(A):-denotes_flat(A).
default_option(A):-denotes_write(A).
default_option(A):-denotes_source(A).
default_option(A):-denotes_peep(A).
default_option(A):-denotes_low_reg(B,A),denotes_0(B).
default_option(A):-denotes_high_reg(B,A),denotes_1000(B).
default_option(A):-denotes_low_perm(B,A),denotes_0(B).
default_option(A):-denotes_align(B,A),denotes_2(B).
default_option(A):-denotes_compile(A).
default_option(A):-denotes_factor(A).
default_option(A):-denotes_uni(A).
default_option(A):-denotes_select_limit(B,A),denotes_1(B).
default_option(A):-denotes_hash_size(B,A),denotes_5(B).
default_option(A):-denotes_functor_limit(B,A),denotes_5(B).
default_option(A):-denotes_include_limit(B,A),denotes_8(B).
default_option(A):-denotes_depth_limit(B,A),denotes_2(B).
default_option(A):-denotes_short_block(B,A),denotes_6(B).
default_option(A):-denotes_write_once(A).
default_option(A):-denotes_same_number_solutions(A).
default_option(A):-denotes_same_order_solutions(A).
default_option(A):-denotes_split_integer(A).
default_option(A):-denotes_system(B,A),denotes_quintus(B).
default_option(A):-denotes_user_test_size(B,C,A),denotes_2(C),denotes_1(B).
default_option(A):-denotes_analyze_uninit_reg(A).
default_option(A):-denotes_protect_builtins(A).
low_reg(A):-compile_option(B),cut,denotes_low_reg(A,B).
low_reg(A):-default_option(B),cut,denotes_low_reg(A,B).
high_reg(A):-compile_option(B),cut,denotes_high_reg(A,B).
high_reg(A):-default_option(B),cut,denotes_high_reg(A,B).
low_perm(A):-compile_option(B),cut,denotes_low_perm(A,B).
low_perm(A):-default_option(B),cut,denotes_low_perm(A,B).
align(A):-compile_option(B),cut,denotes_align(A,B).
align(A):-default_option(B),cut,denotes_align(A,B).
the_system(A):-compile_option(B),cut,denotes_system(A,B).
the_system(A):-default_option(B),cut,denotes_system(A,B).
select_limit(A):-compile_option(B),cut,denotes_select_limit(A,B).
select_limit(A):-default_option(B),cut,denotes_select_limit(A,B).
depth_limit(A):-compile_option(B),cut,denotes_depth_limit(A,B).
depth_limit(A):-default_option(B),cut,denotes_depth_limit(A,B).
arith_error_check:-compile_option(A),cut,denotes_arithmetic_error_check(A).
split_integer:-compile_option(A),cut,denotes_split_integer(A).
float:-compile_option(A),cut,denotes_float(A).
merge_add:-compile_option(A),cut,denotes_merge_add(A).
write_once:-compile_option(A),cut,denotes_write_once(A).
same_number:-compile_option(A),cut,denotes_same_number_solutions(A).
same_order:-compile_option(A),cut,denotes_same_order_solutions(A).
mips:-compile_option(A),cut,denotes_mips(A).
sparc:-compile_option(A),cut,denotes_sparc(A).
mc68020:-compile_option(A),cut,denotes_mc68020(A).
pragma_write_once(A):-cut,w(B),wn(C),nl,'denotes_.'(C),'denotes_:-'(D,B),denotes_write_once(D),denotes_write_once(A).
pragma_write_once(A):-true.
w(A):-write(A).
wn(A):-write(A),nl.
pragma_no_write_once(A):-cut,w(B),wn(C),nl,'denotes_.'(C),'denotes_:-'(D,B),denotes_no_write_once(D),denotes_write_once(A).
pragma_no_write_once(A):-true.
pipe:-prompt(A,B),print_version,read_expand(C),pipe_loop(C),denotes_(B).
print_version:-nl,print_copyright,print_date,nl.
read_expand(A):-read(B),expand_term(B,A).
pipe_loop(A):-pop_incl_stack(B),cut,seen,see(B),read_expand(C),pipe_loop(C),denotes_end_of_file(A).
pipe_loop(A):-cut,denotes_end_of_file(A).
pipe_loop(A):-pipe_loop_one(A,B),asserta(C),fail,denotes_save_clause(B,C).
pipe_loop(A):-retract(B),pipe_loop(C),denotes_save_clause(C,B).
pop_incl_stack(A):-include_stack(B),my_retractall(C),asserta(D),denotes_include_stack(E,D),denotes_include_stack(F,C),'denotes_.'(A,E,B).
pipe_loop_one(A,B):-collect_clauses(A,B,C),internal_comp(C),cut.
collect_clauses(A,B,C):-pop_incl_stack(D),cut,seen,see(D),read_expand(E),collect_clauses(E,B,C),denotes_end_of_file(A).
collect_clauses(A,B,C):-cut,'denotes_[]'(C),denotes_end_of_file(B),denotes_end_of_file(A).
collect_clauses(A,B,C):-one_step(A,D,C,E),collect_clauses(D,B,E).
internal_comp(A):-internal_comp(B,A,C),denotes_write(B).
one_step(A,B,C,D):-after_collect(E),cut,handle_init(E),read_expand(B),'denotes_.'(F,D,C),'denotes_:-'(E,F),'denotes_:-'(E,A).
one_step(A,B,C,C):-cut,handle_dir(D),handle_init(D),read_expand(B),'denotes_:-'(D,A).
one_step(A,B,C,D):-getname(A,E),read_clauses(E,B,F,D),'denotes_.'(A,F,C).
after_collect(A):-cut,after_collect(B),after_collect(C),'denotes_,'(B,C,A).
after_collect(A):-nonvar(A),univ(A,B),after_collect(C,D),'denotes_.'(C,D,B).
handle_init(A):-init_directives(A),cut,translate(A,B),add_init(B).
handle_init(A):-true.
handle_dir(A):-var(A),cut,warning(B),'denotes_Variable directive ignored'(B).
handle_dir(A):-cut,handle_dir(B),handle_dir(C),'denotes_,'(B,C,A).
handle_dir(A):-add_mode_option(A),cut.
handle_dir(A):-add_entry_option(A),cut.
handle_dir(A):-add_modal_entry(A),cut.
handle_dir(A):-add_macro_def(A),cut.
handle_dir(A):-univ(A,B),handle_dir(C,D),cut,'denotes_.'(C,D,B).
handle_dir(A):-neg(B),cut,warning(C),'denotes_.'(D,E,C),'denotes_.'(A,F,E),'denotes_.'(G,H,F),'denotes_[]'(H),'denotes_\' ignored'(G),'denotes_Non-existent directive \''(D),denotes_init_directive(A,B).
handle_dir(A):-(init_directive A),cut.
getname(A,B):-split(A,C,D),functor(C,E,F),cut,'denotes_/'(E,F,B).
read_clauses(A,B,C,D):-read_expand(E),getname(E,F),(G;H),cut,'denotes_,'(I,J,H),'denotes_='(B,E,J),'denotes_='(C,D,I),'denotes_->'(K,L,G),'denotes_,'(M,N,L),denotes_read_clauses(A,B,O,D,N),'denotes_='(C,P,M),'denotes_.'(E,O,P),'denotes_='(F,A,K).
split(A,B,C):-(D;E),'denotes_,'(F,G,E),'denotes_='(C,H,G),denotes_true(H),'denotes_='(A,B,F),'denotes_->'(I,J,D),denotes_true(J),'denotes_='(A,K,I),'denotes_:-'(B,C,K).
warning(A):-make_msg(A,B),w,msg_list(B,C),denotes_w(C).
add_mode_option(A):-cut,denotes_mode(B,A),denotes_true(B).
add_mode_option(A):-check_non_builtin(B),cut,my_retractall(C),make_req_bef(D,E,F),keep_uninit(B,E,G),asserta(H),denotes_mode_option(B,G,F,I,J,H),denotes_n(J),denotes_true(I),denotes_mode_option(B,K,L,M,N,C),denotes_mode(O,A),'denotes_:-'(B,D,O).
add_mode_option(A):-denotes_mode(B,A).
add_mode_option(A):-check_non_builtin(B),cut,survive(B,C),my_retractall(D),keep_uninit(B,E,F),keep_uninit(B,G,H),translate(F,I),flat_conj(I,J),logical_simplify(J,K),translate(H,L),flat_conj(L,M),logical_simplify(M,N),translate(O,P),flat_conj(P,Q),logical_simplify(Q,R),asserta(S),denotes_mode_option(B,K,N,R,C,S),denotes_mode_option(B,T,U,V,W,D),denotes_analyze_mode(B,E,G,O,A).
add_mode_option(A):-denotes_analyze_mode(B,C,D,E,A).
add_mode_option(A):-check_non_builtin(B),cut,survive(B,C),after(B,D),my_retractall(E),keep_uninit(B,F,G),split_deref(G,H,I),keep_uninit(B,J,K),translate(I,L),flat_conj(L,M),logical_simplify(M,N),translate(O,P),flat_conj(P,Q),logical_simplify(Q,R),asserta(S),denotes_mode_option(B,N,R,D,C,S),'denotes_,'(H,K,O),denotes_mode_option(B,T,U,V,W,E),denotes_dummy_mode(B,F,J,A).
add_mode_option(A):-denotes_dummy_mode(B,C,D,A).
add_mode_option(A):-check_non_builtin(B),cut,my_retractall(C),check_req_bef(D,E,F,G,B),keep_uninit(B,F,H),translate(H,I),logical_simplify(I,J),keep_uninit(B,G,K),translate(K,L),logical_simplify(L,M),translate(N,O),logical_simplify(O,P),asserta(Q),denotes_mode_option(B,J,M,P,R,Q),denotes_mode_option(B,S,T,U,V,C),denotes_mode(B,D,E,N,R,A).
add_mode_option(A):-denotes_mode(B,C,D,E,F,A).
add_entry_option(A):-add_mode_option(B),nox(C),translate(D,E),flat_conj(E,F),logical_simplify(F,G),asserta(H),denotes_compile_option(I,H),denotes_entry(J,G,I),'denotes_,'(K,L,D),denotes_entry(J,M,C),denotes_mode(J,K,L,N,O,B),denotes_entry(J,K,L,N,O,A).
add_entry_option(A):-add_mode_option(B),nox(C),translate(D,E),flat_conj(E,F),logical_simplify(F,G),asserta(H),denotes_compile_option(I,H),denotes_entry(J,G,I),denotes_entry(J,K,C),denotes_mode(L,B),'denotes_:-'(J,D,L),denotes_entry(M,A),'denotes_:-'(J,D,M).
add_entry_option(A):-atom(B),nonnegative(C),functor(D,B,C),add_mode_option(E),nox(F),asserta(G),denotes_compile_option(H,G),denotes_entry(D,I,H),denotes_true(I),denotes_entry(D,J,F),denotes_mode(K,E),'denotes_:-'(D,L,K),denotes_true(L),denotes_entry(M,A),'denotes_/'(B,C,M).
add_modal_entry(A):-check_modal_entry(B,C),cut,my_retractall(D),asserta(E),denotes_modal_entry(B,C,E),denotes_modal_entry(B,F,D),denotes_modal_entry(B,C,A).
add_modal_entry(A):-denotes_modal_entry(B,C,A).
add_macro_def(A):-check_macro_def(B),cut,my_retractall(C),conjlist(D,E,F),remove_double_indirect(B,G,H,E),varset(H,I),difflist(H,J,K),macro_varlist(H,L,M),asserta(N),denotes_macro(G,J,K,L,M,I,N),'denotes_[]'(F),denotes_macro(B,O,P,Q,R,S,C),denotes_macro(T,A),'denotes_:-'(B,D,T).
add_macro_def(A):-denotes_macro(B,A).
handle_dir(A,B):-vlsi_bam,'denotes_[]'(B),denotes_vlsi_bam(A).
handle_dir(A,B):-mips_options,'denotes_[]'(B),denotes_mips(A).
handle_dir(A,B):-sparc_options,'denotes_[]'(B),denotes_sparc(A).
handle_dir(A,B):-mc68020_options,'denotes_[]'(B),denotes_mc68020(A).
handle_dir(A,B):-print_version,'denotes_[]'(B),denotes_version(A).
handle_dir(A,B):-print_help,'denotes_[]'(B),denotes_help(A).
handle_dir(A,B):-print_helpoptions,'denotes_[]'(B),denotes_helpoptions(A).
handle_dir(A,B):-po,'denotes_[]'(B),denotes_options(A).
handle_dir(A,B):-cox_list(B),denotes_option(A).
handle_dir(A,B):-nox_list(B),denotes_notoption(A).
handle_dir(A,B):-atom(C),seeing(D),push_incl_stack(D),see(C),'denotes_.'(C,E,B),'denotes_[]'(E),denotes_include(A).
handle_dir(A,B):-op(C,D,E),'denotes_.'(C,F,B),'denotes_.'(D,G,F),'denotes_.'(E,H,G),'denotes_[]'(H),denotes_op(A).
handle_dir(A,B):-(C;D),denotes_true(D),'denotes_->'(E,F,C),'denotes_,'(G,H,F),denotes_prolog_flag(I,J,K,H),denotes_copy(L,M,G),'denotes_.'(J,N,M),'denotes_.'(K,O,N),'denotes_[]'(O),'denotes_.'(P,Q,L),'denotes_.'(R,S,Q),'denotes_[]'(S),'denotes_='(I,T,E),denotes_character_escapes(T),'denotes_.'(I,U,B),'denotes_.'(P,V,U),'denotes_.'(R,W,V),'denotes_[]'(W),denotes_prolog_flag(A).
handle_dir(A,B):-check_spec_list(C),dynamic_list(C),'denotes_.'(C,D,B),'denotes_[]'(D),denotes_dynamic(A).
handle_dir(A,B):-check_spec_list(C),init_dir_list(C),'denotes_.'(C,D,B),'denotes_[]'(D),denotes_init_directive(A).
handle_dir(A,B):-cox_list(B),denotes_o(A).
handle_dir(A,B):-nox_list(B),denotes_no(A).
handle_dir(A,B):-ground(C),ex(C),'denotes_.'(C,D,B),'denotes_[]'(D),denotes_ex(A).
vlsi_bam:-compile_option(A),cut,cdefault,denotes_system(B,A),denotes_cprolog(B).
vlsi_bam:-compile_option(A),cut,qdefault,denotes_system(B,A),denotes_quintus(B).
vlsi_bam:-compile_option(A),cut,adefault,denotes_system(B,A),denotes_aquarius(B).
mips_options:-comment(A),vlsi_bam,cox_list(B),nox_list(C),'denotes_.'(D,E,C),'denotes_[]'(E),denotes_split_integer(D),'denotes_.'(F,G,B),'denotes_.'(H,I,G),'denotes_.'(J,K,I),'denotes_[]'(K),denotes_align(L,J),denotes_1(L),denotes_arithmetic_error_check(H),denotes_mips(F),'denotes_.'(M,N,A),'denotes_[]'(N),'denotes_Compiling for the MIPS processor'(M).
sparc_options:-comment(A),vlsi_bam,cox_list(B),nox_list(C),'denotes_.'(D,E,C),'denotes_[]'(E),denotes_split_integer(D),'denotes_.'(F,G,B),'denotes_.'(H,I,G),'denotes_.'(J,K,I),'denotes_[]'(K),denotes_align(L,J),denotes_2(L),denotes_arithmetic_error_check(H),denotes_sparc(F),'denotes_.'(M,N,A),'denotes_[]'(N),'denotes_Compiling for the SPARC processor'(M).
mc68020_options:-comment(A),vlsi_bam,cox_list(B),nox_list(C),'denotes_.'(D,E,C),'denotes_[]'(E),denotes_split_integer(D),'denotes_.'(F,G,B),'denotes_.'(H,I,G),'denotes_.'(J,K,I),'denotes_[]'(K),denotes_align(L,J),denotes_1(L),denotes_arithmetic_error_check(H),denotes_mc68020(F),'denotes_.'(M,N,A),'denotes_[]'(N),'denotes_Compiling for the MC68020 processor'(M).
print_help:-nl,wn(A),wn(B),wn(C),wn(D),wn(E),wn(F),wn(G),wn(H),wn(I),wn(J),wn(K),wn(L),wn(M),wn(N),wn(O),wn(P),wn(Q),wn(R),wn(S),wn(T),wn(U),nl,'denotes_% modal_entry(H,Tree)    Discrimination tree for efficient builtins.'(U),'denotes_% vlsi_bam               Set options for the VLSI-BAM.'(T),'denotes_% mc68020                Set options for the MC68020.'(S),'denotes_% sparc                  Set options for the SPARC.'(R),'denotes_% mips                   Set options for the MIPS.'(Q),'denotes_% Directives normally only used by the system:'(P),'denotes_% version                Print the creation date of this version.'(O),'denotes_% include(F)             Insert the contents of file F.'(N),'denotes_% macro((Head:-BAMCode)) Define a predicate as BAM assembly code.'(M),'denotes_% entry(H,R,B,A,S)       More detailed entry declaration.'(L),'denotes_% mode(H,R,B,A,S)        More detailed mode declaration.'(K),'denotes_% entry((Head:-Formula)) As above and also used for flow analysis.'(J),'denotes_% mode((Head:-Formula))  Mode information for a predicate.'(I),'denotes_% dynamic(Name/Arity)    Declare a dynamic predicate.'(H),'denotes_% prolog_flag(F,Old,New) Modify execution parameters of the system.'(G),'denotes_% op(A,B,C)              Operator declaration.'(F),'denotes_% helpoptions            Give information about the possible options.'(E),'denotes_% options                Print the current options.'(D),'denotes_% notoption(OptList)     Disable the listed options.'(C),'denotes_% option(OptList)        Enable the listed options.'(B),'denotes_% List of useful directives:'(A).
print_helpoptions:-nl,wn(A),wn(B),wn(C),wn(D),wn(E),wn(F),wn(G),wn(H),wn(I),wn(J),wn(K),nl,'denotes_%               Keep the same order of solutions as standard Prolog.'(K),'denotes_% same_order_solutions (on)'(J),'denotes_%               Keep the same number of solutions as standard Prolog.'(I),'denotes_% same_number_solutions (on)'(H),'denotes_%               Perform type checking on arithmetic operations.'(G),'denotes_% arithmetic_error_check (on)'(F),'denotes_% compile (on)  Compile the input program.'(E),'denotes_% factor (on)   Perform factoring transformation.'(D),'denotes_% analyze (off) Perform flow analysis on the input program.'(C),'denotes_% float (off)   Enable use of floating point.'(B),'denotes_% List of useful options (default in parentheses):'(A).
po:-pox(A),write(B),write(A),nl,pmodes,cut,'denotes_% Options = '(B).
cox_list(A):-cut,'denotes_[]'(A).
cox_list(A):-cut,cox_list(B),cox_list(C),'denotes_.'(B,C,A).
cox_list(A):-neg(B),cut,cox(A),denotes_list(A,B).
nox_list(A):-cut,'denotes_[]'(A).
nox_list(A):-cut,nox_list(B),nox_list(C),'denotes_.'(B,C,A).
nox_list(A):-neg(B),cut,nox(A),denotes_list(A,B).
push_incl_stack(A):-include_stack(B),my_retractall(C),asserta(D),(E;F),denotes_true(F),'denotes_->'(G,H,E),denotes_warning(I,H),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_.'(N,O,M),'denotes_.'(P,Q,O),'denotes_.'(R,S,Q),'denotes_.'(T,U,S),'denotes_[]'(U),'denotes_ nested includes.'(T),'denotes_has exceeded the limit of '(P),denotes_nl(N),'denotes_.'(A,B,L),'denotes_The inclusion stack '(J),'denotes_,'(V,W,G),'denotes_,'(X,Y,W),'denotes_>'(Z,R,Y),denotes_compile_option(A1,X),denotes_include_limit(R,A1),denotes_length(B1,Z,V),'denotes_.'(A,B,B1),denotes_include_stack(C1,D),'denotes_.'(A,B,C1),denotes_include_stack(D1,C).
copy(A,B):-copyB(A,B).
check_spec_list(A):-check_spec_list(B),check_spec_list(C),'denotes_,'(B,C,A).
check_spec_list(A):-atom(B),integer(C),ge(C,D),denotes_0(D),'denotes_/'(B,C,A).
dynamic_list(A):-dynamic_list(B),dynamic_list(C),'denotes_,'(B,C,A).
dynamic_list(A):-functor(B,C,D),assert(E),denotes_dyn_pred(B,E),'denotes_/'(C,D,A).
init_dir_list(A):-init_dir_list(B),init_dir_list(C),'denotes_,'(B,C,A).
init_dir_list(A):-functor(B,C,D),assert(E),denotes_init_directive(B,E),'denotes_/'(C,D,A).
ex(A):-ex(A,B,C),cut,comp(B,C).
after_collect(A,B):-'denotes_[]'(B),denotes_options(A).
after_collect(A,B):-neg(C),denotes_do_it_now(B,C),denotes_option(A).
after_collect(A,B):-neg(C),denotes_do_it_now(B,C),denotes_o(A).
after_collect(A,B):-neg(C),denotes_do_it_now(B,C),denotes_notoption(A).
after_collect(A,B):-neg(C),denotes_do_it_now(B,C),denotes_no(A).
do_it_now(A):-now_list(B),member(C,B),member(C,A).
do_it_now(A):-now_list(B),member(C,B),member(C,D),'denotes_.'(D,E,A),'denotes_[]'(E).
now_list(A):-'denotes_.'(B,C,A),'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_.'(H,I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_.'(N,O,M),'denotes_.'(P,Q,O),'denotes_.'(R,S,Q),'denotes_.'(T,U,S),'denotes_.'(V,W,U),'denotes_.'(X,Y,W),'denotes_.'(Z,A1,Y),'denotes_.'(B1,C1,A1),'denotes_[]'(C1),denotes_firstarg(B1),denotes_test_typecheck(Z),denotes_test_arith(X),denotes_test_unify(V),denotes_test(T),denotes_factor(R),denotes_float(P),denotes_uni(N),denotes_comment(L),denotes_compile(J),denotes_analyze_uninit_reg(H),denotes_analyze(F),denotes_stats(D1,D),denotes_arithmetic_error_check(B).
member(A,B):-'denotes_.'(A,C,B).
member(A,B):-member(A,C),'denotes_.'(D,C,B).
comment(A):-true.
print_copyright:-copyright(A,B),w(C),wn(B),fail,'denotes_% '(C).
print_copyright:-true.
print_date:-compiler_version(A),cut,w(B),wn(A),'denotes_% Creation date '(B).
print_date:-true.
my_retractall(A):-copy(A,B),retract(B),cut,my_retractall(A).
my_retractall(A):-true.
cf(A,B):-cf(A,B,C),'denotes_[]'(C).
cf(A,B,C):-tell(A),comp(B,C),cut,told.
cf(A,B,C):-told.
comp(A,B):-make_list(B,C),comp(A,C,D),write_source(A,C),write_code(D).
comp(A):-comp(A,B),'denotes_[]'(B).
make_list(A,B):-neg(C),cut,denotes_list(A,C),'denotes_.'(A,D,B),'denotes_[]'(D).
make_list(A,A):-list(A),cut.
comp(A,B,C):-clr_mode,add_mode_options(B),internal_comp(A,C).
write_source(A,B):-neg(C),cut,denotes_compile_option(D,C),denotes_source(D).
write_source(A,B):-compile_option(C),inst_vars(B,D),xwrite_modes(D),inst_vars(A,E),xwrite_source(E),denotes_source(C).
write_code(A):-cut,'denotes_[]'(A).
write_code(A):-neg(B),cut,denotes_compile_option(C,B),denotes_write(C).
write_code(A):-compile_option(B),neg(C),cut,write_code(A,D),denotes_4(D),denotes_compile_option(E,C),denotes_flat(E),denotes_write(B).
write_code(A):-compile_option(B),compile_option(C),cut,write_output(A),denotes_flat(C),denotes_write(B).
clr_mode:-my_retractall(A),denotes_mode_option(B,C,D,E,F,A).
add_mode_options(A):-cut,'denotes_[]'(A).
add_mode_options(A):-cut,add_mode_option(B),add_mode_options(C),denotes_mode(D,B),'denotes_:-'(E,F,D),'denotes_.'(G,C,A),'denotes_:-'(E,F,G).
add_mode_options(A):-cut,add_mode_options(B),'denotes_.'(C,B,A),denotes_true(C).
add_mode_options(A):-add_mode_option(B),add_mode_options(C),'denotes_.'(B,C,A).
internal_comp(A,B):-internal_comp(C,A,B),denotes_nowrite(C).
ex(A,B,C):-'denotes_:-'(D,E,C),denotes_uninit(F,E),denotes_p(F,D),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_p(I,G),denotes_a(I),denotes_pa(A).
ex(A,B,C):-denotes_true(C),'denotes_.'(D,E,B),'denotes_[]'(E),'denotes_:-'(F,G,D),'denotes_,'(H,I,G),denotes_b(J,J,I),'denotes_<'(J,K,H),denotes_1(K),denotes_a(J,F),denotes_1(A).
ex(A,B,C):-denotes_true(C),'denotes_.'(D,E,B),'denotes_[]'(E),'denotes_:-'(F,G,D),'denotes_,'(H,I,G),denotes_b(J,I),'denotes_@<'(J,K,H),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_a(J,F),denotes_2(A).
ex(A,B,C):-'denotes_:-'(D,E,C),'denotes_,'(F,G,E),'denotes_,'(H,I,G),denotes_uninit(J,I),denotes_uninit(K,H),denotes_list(L,F),denotes_p(L,M,K,J,D),'denotes_.'(N,O,B),'denotes_.'(P,Q,O),'denotes_.'(R,S,Q),'denotes_[]'(S),denotes_p(T,U,V,W,R),'denotes_[]'(W),'denotes_[]'(V),'denotes_[]'(T),'denotes_:-'(X,Y,P),'denotes_,'(Z,A1,Y),denotes_p(B1,C1,D1,E1,A1),'denotes_<'(C1,F1,Z),denotes_p(G1,C1,D1,H1,X),'denotes_.'(F1,E1,H1),'denotes_.'(F1,B1,G1),'denotes_:-'(I1,J1,N),'denotes_,'(K1,L1,J1),denotes_p(B1,C1,D1,E1,L1),'denotes_>='(C1,F1,K1),denotes_p(M1,C1,N1,E1,I1),'denotes_.'(F1,D1,N1),'denotes_.'(F1,B1,M1),denotes_up(A).
ex(A,B,C):-denotes_true(C),'denotes_.'(D,E,B),'denotes_[]'(E),'denotes_:-'(F,G,D),'denotes_,'(H,I,G),'denotes_;'(J,K,I),denotes_b(L,K),denotes_nonvar(L,J),denotes_var(L,H),denotes_a(L,F),denotes_dis(A).
ex(A,B,C):-denotes_true(C),'denotes_.'(D,E,B),'denotes_.'(F,G,E),'denotes_.'(H,I,G),'denotes_[]'(I),denotes_a(J,H),denotes_a(J),denotes_a(K,F),denotes_b(K),denotes_a(L,D),denotes_a(L),denotes_aba(A).
ex(A,B,C):-denotes_true(C),'denotes_.'(D,E,B),'denotes_.'(F,G,E),'denotes_[]'(G),denotes_a(H,F),denotes_b(H),denotes_a(I,D),denotes_a(I),denotes_ab(A).
ex(A,B,C):-'denotes_:-'(D,E,C),denotes_nonvar(F,E),denotes_a(F,D),'denotes_.'(G,H,B),'denotes_.'(I,J,H),'denotes_.'(K,L,J),'denotes_.'(M,N,L),'denotes_.'(O,P,N),'denotes_.'(Q,R,P),'denotes_[]'(R),denotes_a(S,Q),denotes_2(S),denotes_a(T,O),denotes_1(T),denotes_a(U,M),denotes_d(U),denotes_a(V,K),denotes_c(V),denotes_a(W,I),denotes_b(W),denotes_a(X,G),denotes_a(X),denotes_h1(A).
ex(A,B,C):-'denotes_:-'(D,E,C),denotes_nonvar(F,E),denotes_a(F,D),'denotes_.'(G,H,B),'denotes_.'(I,J,H),'denotes_[]'(J),'denotes_:-'(K,L,I),denotes_t(M,L),denotes_a(N,K),denotes_t(M,N),'denotes_:-'(O,P,G),denotes_s(M,P),denotes_a(Q,O),denotes_s(M,Q),denotes_h2(A).
ex(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_:-'(H,I,F),'denotes_,'(J,K,I),'denotes_,'(L,M,K),denotes_uninit(N,M),denotes_list(O,L),denotes_list(P,J),denotes_concatenate(P,O,N,H),'denotes_:-'(Q,R,D),'denotes_,'(S,T,R),denotes_uninit(O,T),denotes_list(P,S),denotes_nreverse(P,O,Q),'denotes_.'(U,V,B),'denotes_.'(W,X,V),'denotes_[]'(X),denotes_nreverse(Y,Z,W),'denotes_[]'(Z),'denotes_[]'(Y),'denotes_:-'(A1,B1,U),'denotes_,'(C1,D1,B1),denotes_concatenate(E1,F1,G1,D1),'denotes_.'(H1,I1,F1),'denotes_[]'(I1),denotes_nreverse(J1,E1,C1),denotes_nreverse(K1,G1,A1),'denotes_.'(H1,J1,K1),denotes_nrev(A).
ex(A,B,C):-'denotes_:-'(D,E,C),'denotes_,'(F,G,E),'denotes_,'(H,I,G),denotes_uninit(J,I),denotes_list(K,H),denotes_list(L,F),denotes_concatenate(L,K,J,D),'denotes_.'(M,N,B),'denotes_.'(O,P,N),'denotes_[]'(P),denotes_concatenate(Q,R,R,O),'denotes_[]'(Q),'denotes_:-'(S,T,M),denotes_concatenate(U,V,W,T),denotes_concatenate(X,V,Y,S),'denotes_.'(Z,W,Y),'denotes_.'(Z,U,X),denotes_ncon(A).
compex(A,B):-tell(B),compex(A),told.
compex(A):-'denotes_[]'(A).
compex(A):-ex(B),fail,'denotes_.'(B,C,A).
compex(A):-compex(B),'denotes_.'(C,B,A).
internal_comp(A,B,C):-cont_cls(B,D),cls_to_ptrees(D,E),dynamic_ptrees(E,F,G,H),dynamic_nodef(G),init_ptrees(E,F,I),comp_steps(A,I,C),'denotes_[]'(H).
init_stats:-abolish(A,B),get_cputime(C),cut,assert(D),denotes_compile_cputime(E,F,C,D),denotes_none(F),denotes_start(E),denotes_3(B),denotes_compile_cputime(A).
init_stats:-true.
cont_cls(A,A):-compile_option(B),cut,denotes_contiguous(B).
cont_cls(A,B):-keylist_cls(A,C),keysort(C,D),merge_cls(D,B).
cls_to_ptrees(A,B):-expand_clauses(A,C),translate_clauses(C,D),cls_to_ptrees_loop(D,B),add_modes(B),cut.
dynamic_ptrees(A,B,C,D):-dynamic_ptree(E,F),cut,constC(C,F,G),dynamic_ptrees(H,B,G,D),'denotes_.'(E,H,A).
dynamic_ptrees(A,B,C,D):-dynamic_ptrees(E,F,C,D),'denotes_.'(G,F,B),'denotes_.'(G,E,A).
dynamic_ptrees(A,B,C,C):-'denotes_[]'(B),'denotes_[]'(A).
dynamic_nodef(A):-dyn_pred(B),functor(B,C,D),neg(E),add_init(F),fail,'denotes_$ declare_dynamic'(G,F),'denotes_/'(C,D,G),denotes_member(H,A,E),'denotes_/'(C,D,H).
dynamic_nodef(A):-true.
init_ptrees(A,B,C):-init_ptree(A,D),cut,append(B,D,C).
comp_steps(A,B,C):-transform_cut_ptrees(B,D),factor_ptrees(D,E),ptrees_to_strees(E,F),flatten_strees(F,G),inline_strees(G,H),analyze_strees(H,I),compile_strees(A,I,C),cut.
stats(A,B):-get_cputime(C),compile_option(D),(E;F),cut,retract(G),w(H),w(I),write_num(J),w(K),w(A),write_num(B),w(L),exprEval(M,N),wn(M),ttyflush_quintus,get_cputime(O),assert(P),cut,denotes_compile_cputime(A,B,O,P),'denotes_-'(C,Q,N),'denotes_ is '(L),'denotes_ and '(K),'denotes_% Cputime between '(H),denotes_compile_cputime(I,J,Q,G),'denotes_='(R,A,F),denotes_member(A,R,E),denotes_stats(R,D).
stats(A,B):-true.
transform_cut_ptrees(A,B):-'denotes_[]'(B),'denotes_[]'(A).
transform_cut_ptrees(A,B):-transform_cut_ptree(C,D),transform_cut_ptrees(E,F),'denotes_.'(D,F,B),'denotes_.'(C,E,A).
factor_ptrees(A,A):-fail,cut.
factor_ptrees(A,B):-cut,'denotes_[]'(B),'denotes_[]'(A).
factor_ptrees(A,B):-directive(C),cut,factor_ptrees(D,E),'denotes_.'(C,E,B),'denotes_.'(C,D,A).
factor_ptrees(A,B):-cut,factor_dlist(C,D),get_factor_args(C,E),factor_args_ptree(E,D,F),factor_ptrees(G,H),'denotes_.'(F,H,B),'denotes_.'(C,G,A).
ptrees_to_strees(A,B):-'denotes_[]'(B),'denotes_[]'(A).
ptrees_to_strees(A,B):-ptree_to_stree(C,D),ptrees_to_strees(E,F),'denotes_.'(D,F,B),'denotes_.'(C,E,A).
flatten_strees(A,B):-'denotes_[]'(B),'denotes_[]'(A).
flatten_strees(A,B):-flatten_stree(C,D),flatten_strees(E,F),'denotes_.'(D,F,B),'denotes_.'(C,E,A).
inline_strees(A,B):-fail,cut,gather_single(A,C),inline_replace_strees(A,B,C).
inline_strees(A,A):-true,cut.
analyze_strees(A,B):-compile_option(C),cut,comment(D),analyze(A,B),'denotes_.'(E,F,D),'denotes_[]'(F),'denotes_Starting dataflow analysis'(E),denotes_analyze(C).
analyze_strees(A,A):-true.
compile_strees(A,B,C):-compile_strees(B,D,E,F,A,C,G),'denotes_[]'(G),denotes_header(F),denotes_return(E),denotes_peep(D).
done_stats:-get_cputime(A),cut,retract(B),nl,w(C),w(D),write_num(E),w(F),exprEval(G,H),wn(G),ttyflush_quintus,'denotes_-'(A,I,H),'denotes_ and finish is '(F),'denotes_% Cputime between '(C),denotes_compile_cputime(D,E,I,B).
done_stats:-true.
compile_strees(A,B,C,D,E,F,F):-cut,'denotes_[]'(A).
compile_strees(A,B,C,D,E,F,G):-cut,compile_comment(H),print_stree(I),init_gensym,compile_stree(J,B,C,D,E,F,K),compile_strees(L,B,C,D,E,K,G),denotes_stree(H,M,N,O,P,Q,J),denotes_stree(H,M,N,O,P,Q,I),'denotes_.'(R,L,A),denotes_stree(H,M,N,O,P,Q,R).
compile_strees(A,B,C,D,E,F,G):-cut,handle_dir(H),compile_strees(I,B,C,D,E,F,G),'denotes_.'(J,I,A),'denotes_:-'(H,J).
compile_comment(A):-compile_option(B),cut,nl,comment(C),'denotes_.'(D,E,C),'denotes_.'(A,F,E),'denotes_.'(G,H,F),'denotes_[]'(H),'denotes_ ...'(G),'denotes_Compiling '(D),denotes_compile(B).
compile_comment(A):-true.
print_stree(A):-compile_option(B),cut,write(C),q_inst_writeq(A),wn(D),'denotes_.'(D),'denotes_% '(C),denotes_print_stree(B).
print_stree(A):-true.
init_gensym:-abolish(A,B),asserta(C),denotes_gensym_integer(D,C),denotes_1(D),denotes_1(B),denotes_gensym_integer(A).
compile_stree(A,B,C,D,E,F,G):-compile_stree(A,B,C,D,H),lbl_sets(H,I),map_external_lbls(H,I,J,K),(L;M),'denotes_,'(N,O,M),'denotes_='(G,K,O),'denotes_='(F,J,N),'denotes_->'(P,Q,L),'denotes_,'(R,S,Q),'denotes_,'(T,U,S),'denotes_='(F,G,U),denotes_write_code(J,T),'denotes_='(K,V,R),'denotes_[]'(V),'denotes_='(E,W,P),denotes_write(W).
q_inst_writeq(A):-compile_option(B),cut,copy(A,C),numbervars(C,D,E),writeq(C),denotes_0(D),denotes_system(F,B),denotes_quintus(F).
q_inst_writeq(A):-compile_option(B),cut,copy(A,C),numbervars(C,D,E),writeq(C),denotes_0(D),denotes_system(F,B),denotes_aquarius(F).
q_inst_writeq(A):-inst_writeq(A).
compile_stree(A,B,C,D,E):-compile_option(F),builtin_recompile_error(A),cut,calc_select_depth(A),trim_stree(A,G),select_stree(G,H,I),segment_disj(J,K,L,M,N,I),selection_disj(J,L,M,O),proc_header(D,P,Q,R),proc_code(J,O,M,S,C,R,T),clause_code_list(N,S,T,U),end_label(C,U,V),peephole(P,Q,E,B),cut,'denotes_[]'(V),denotes_stree(P,W,M,X,S,Y,H),'denotes_:-'(J,K,W),denotes_compile(F).
compile_stree(A,B,C,D,E):-'denotes_[]'(E).
lbl_sets(A,B):-lbl_sets(A,B,C).
map_external_lbls(A,B,C,D):-map_external_lbls(A,B,E,C,D).
compile_stree(A,B,C,D,E,F):-compile_stree(A,B,C,D,G),difflist(G,E,F).
difflist(A,B,B):-'denotes_[]'(A).
difflist(A,B,C):-constC(B,D,E),difflist(F,E,C),'denotes_.'(D,F,A).
builtin_recompile_error(A):-compile_option(B),functor(C,D,E),builtin(C),cut,warning(F),fail,'denotes_.'(G,H,F),'denotes_.'(I,J,H),'denotes_.'(K,L,J),'denotes_[]'(L),'denotes_ is a builtin.  It is not compiled.'(K),'denotes_/'(D,E,I),'denotes_The predicate '(G),denotes_protect_builtins(B),denotes_stree(M,N,O,P,Q,R,A),'denotes_/'(D,E,M).
builtin_recompile_error(A):-true.
calc_select_depth(A):-var(B),cut,select_limit(B),denotes_stree(C,D,E,F,G,B,A).
calc_select_depth(A):-nonvar(B),denotes_stree(C,D,E,F,G,B,A).
trim_stree(A,B):-trim_mode(C,D),denotes_stree(E,F,D,G,H,I,B),denotes_stree(E,F,C,G,H,I,A).
select_stree(A,B,C):-gt(D,E),gt(F,G),length_disj(H,I),gt(I,J),segment_all_disj(H,K,L,M,C,N),not_nonvar(N,L,O,P),select_limit(Q),(R;S),range_option(T,U,F),arg(U,K,V),memberv(V,O),cut,comment(W),asserta(X),subsume(Y,M,Z),standard_disj(Z,A1),subsume(B1,M,C1),standard_disj(C1,D1),new_head(E1,K,F1,G1),functor(G1,H1,I1),new_head(J1,K,K1,L1),functor(L1,M1,N1),exprEval(O1,P1),after(Q1,R1),after(S1,T1),combine_formula(R1,L,U1),combine_formula(T1,L,V1),add_mode_option(K,G1,W1,R1,X1),add_mode_option(K,L1,Y1,T1,Z1),standard_disj(A2,B2),cut,'denotes_;'(C2,D2,A2),'denotes_,'(E2,L1,D2),denotes_nonvar(V,E2),'denotes_,'(F2,G1,C2),denotes_var(V,F2),denotes_yes(Z1),denotes_true(Y1),denotes_yes(X1),denotes_true(W1),denotes_nonvar(V,S1),denotes_var(V,Q1),'denotes_-'(D,G2,P1),denotes_1(G2),'denotes_[]'(K1),'denotes_.'(H2,I2,J1),'denotes_.'(J2,K2,I2),'denotes_.'(L2,M2,K2),'denotes_.'(N2,O2,M2),'denotes_[]'(O2),denotes_95(N2),denotes_118(L2),denotes_110(J2),denotes_36(H2),'denotes_[]'(F1),'denotes_.'(P2,Q2,E1),'denotes_.'(R2,S2,Q2),'denotes_.'(T2,U2,S2),'denotes_[]'(U2),denotes_95(T2),denotes_118(R2),denotes_36(P2),denotes_nonvar(V,B1),denotes_var(V,Y),denotes_select_option(K,U,X),'denotes_.'(V2,W2,W),'denotes_.'(U,X2,W2),'denotes_.'(Y2,Z2,X2),'denotes_.'(A3,B3,Z2),'denotes_[]'(B3),'denotes_/'(C3,F,A3),'denotes_ of '(Y2),'denotes_Doing selection on argument '(V2),denotes_1(T),'denotes_,'(D3,E3,S),denotes_inv(F3,O,E3),denotes_arg(G3,K,F3,D3),denotes_1(G3),'denotes_<'(P,Q,R),denotes_1(J),denotes_0(G),denotes_0(E),denotes_stree(H3,I3,J3,K3,L3,D,B),'denotes_.'(M3,N3,L3),'denotes_.'(O3,P3,N3),denotes_stree(Q3,R3,S3,T3,P3,O1,O3),'denotes_[]'(T3),'denotes_:-'(L1,V1,S3),'denotes_:-'(L1,D1,R3),'denotes_/'(M1,N1,Q3),denotes_stree(U3,V3,W3,X3,P3,O1,M3),'denotes_[]'(X3),'denotes_:-'(G1,U1,W3),'denotes_:-'(G1,A1,V3),'denotes_/'(H1,I1,U3),'denotes_[]'(K3),'denotes_:-'(K,L,J3),'denotes_:-'(K,B2,I3),'denotes_/'(C3,F,H3),denotes_stree(Y3,Z3,A4,B4,P3,D,A),'denotes_:-'(K,L,A4),'denotes_:-'(K,H,Z3),'denotes_/'(C3,F,Y3).
select_stree(A,A,B):-'denotes_[]'(B).
segment_disj(A,B,C,D,E,F):-varset(A,G),create_bodies(B,H,I,J,K,G,L,E,F),create_heads(I,A,G,J,K),standard_disj(H,C),'denotes_:-'(A,L,D).
selection_disj(A,B,C,D):-copy(C,E),varset(A,F),subsume(G,B,H),selection_3(H,A,I,F,G,D),cut,'denotes_[]'(I),'denotes_:-'(A,G,E).
proc_header(A,B,C,C):-cut,denotes_noheader(A).
proc_header(A,B,C,D):-constC(C,E,D),denotes_procedure(B,E),denotes_header(A).
proc_code(A,B,C,D,E,F,G):-copy(C,H),code(A,I,D,E,B,F,G),cut,'denotes_:-'(A,I,H).
clause_code_list(A,B,C,C):-cut,'denotes_[]'(A).
clause_code_list(A,B,C,D):-nonvar(E),cut,entry_comment(F,G,E),split_uninit_list(E,H,I,J,K),intersectv_list(H,L),intersectv_list(I,M),functor(F,N,O),insert_uninit(H,F,L,E,P,C,Q),intersect_formula_list(K,R),uninit_origins(J,S),make_uninit_mem_formula(L,S,T,R),make_uninit_reg_formula(M,U,T),constC(Q,V,W),clause_code(X,B,Y,U,W,Z),clause_code_list(A1,B,Z,D),denotes_return(Y),'denotes_:-'(F,G,X),denotes_label(B1,V),'denotes_/'(N,O,B1),'denotes_/'(N,O,P),'denotes_.'(C1,A1,A),denotes_body(D1,E,C1),'denotes_:-'(F,G,D1).
clause_code_list(A,B,C,D):-var(E),cut,clause_code_list(F,B,C,D),'denotes_.'(G,F,A),denotes_body(H,E,G),'denotes_:-'(I,J,H).
end_label(A,B,C):-constC(B,D,C),denotes_return(D),denotes_return(A).
end_label(A,B,C):-constC(B,D,C),denotes_label(E,D),denotes_jump(E,A).
peephole(A,B,B,C):-cut,denotes_nopeep(C).
peephole(A,B,C,D):-neg(E),cut,peep_flat(B,F),inst_labl(A,F,C),denotes_compile_option(G,E),denotes_peep(G),denotes_peep(D).
peephole(A,B,C,D):-compile_option(E),cut,write_debug(F),nl_debug,xpeephole(A,B,C),(G;H),write_debug(I),'denotes_After peephole optimization:'(I),denotes_true(H),'denotes_->'(J,K,G),'denotes_,'(L,M,K),denotes_nl(M),denotes_write_code(B,L),denotes_fail(J),'denotes_Before peephole optimization:'(F),denotes_peep(E),denotes_peep(D).
builtin(A):-info(A,B,C,D,E),cut,denotes_y(D).
trim_mode(A,B):-keep_uninit(C,D,E),'denotes_:-'(C,E,B),'denotes_:-'(C,D,A).
length_disj(A,B):-length_disj(A,C,B),denotes_0(C).
segment_all_disj(A,B,C,D,E,F):-varset(B,G),unbound_set(C,H),segment_all_disj(A,B,G,H,D,I,J,E),sort(I,K),intersectv(K,G,F),'denotes_[]'(J).
not_nonvar(A,B,C,D):-not_nonvar(A,B,C,E,D),denotes_0(E).
inv(A,B):-compare(C,A,D),inv_2(C,A,E),'denotes_.'(D,E,B).
range_option(A,B,C):-fail,cut,denotes_1(B).
range_option(A,B,C):-range(A,B,C).
memberv(A,B):-(C;D),denotes_memberv(A,E,D),'denotes_->'(F,G,C),denotes_true(G),'denotes_=='(A,H,F),'denotes_.'(H,E,B).
subsume(A,B,C):-cut,simplify(B,C),denotes_true(A).
subsume(A,B,C):-sub(A,B,D,E,F),simplify(D,C),denotes_prolog(E).
standard_disj(A,B):-disj(A,B,C),denotes_fail(C).
new_head(A,B,C,D):-functor(B,E,F),univ(B,G),append(H,C,I),gensym(A,J,K),univ(D,L),'denotes_.'(K,I,L),'denotes_/'(E,F,J),'denotes_.'(E,H,G).
after(A,B):-info(A,C,D,E,F,G,H,I),cut,logical_simplify(I,B).
after(A,B):-neg(C),test(A),cut,logical_simplify(A,B),denotes_info(A,C).
after(A,B):-neg(C),neg(D),cut,denotes_test(A,D),denotes_info(A,C),denotes_true(B).
combine_formula(A,B,C):-unionv_conj(A,B,C).
add_mode_option(A,B,C,D,E):-mode_option(A,F,G,H,I),cut,split_deref(F,J,K),split_deref(C,L,M),flat_conj(N,O),flat_conj(P,Q),make_after(E,H,R),add_mode_option(S),denotes_mode(B,O,Q,R,I,S),'denotes_,'(L,T,P),'denotes_,'(J,U,T),'denotes_,'(D,G,U),'denotes_,'(M,K,N).
add_mode_option(A,B,C,D,E):-split_deref(C,F,G),flat_conj(H,I),add_mode_option(J),denotes_mode(B,G,I,K,L,J),denotes_n(L),denotes_true(K),'denotes_,'(F,D,H).
not_nonvar(A,B,C,D,D):-'denotes_[]'(C),'denotes_[]'(A).
not_nonvar(A,B,C,D,E):-implies(B,F),cut,exprEval(G,H),not_nonvar(I,B,C,G,E),'denotes_+'(D,J,H),denotes_1(J),denotes_nonvar(K,F),'denotes_.'(K,I,A).
not_nonvar(A,B,C,D,E):-not_nonvar(F,B,G,D,E),'denotes_.'(H,G,C),'denotes_.'(H,F,A).
implies(A,B):-logical_simplify(C,D),mutex(A,D,E),cut,denotes_left(E),denotes_not(B,C).
range(A,A,B):-true.
range(A,B,C):-lt(A,C),exprEval(D,E),range(D,B,C),'denotes_+'(A,F,E),denotes_1(F).
check_modal_entry(A,B):-nonvar(A),nonvar(B),check_tree_entry(B),cut.
check_modal_entry(A,B):-error(C),fail,'denotes_.'(D,E,C),'denotes_.'(A,F,E),'denotes_.'(G,H,F),'denotes_[]'(H),'denotes_ has incorrect syntax.'(G),'denotes_Modal entry '(D).
clr_modal_entry:-my_retractall(A),denotes_modal_entry(B,C,A).
check_tree_entry(A):-nonvar(B),denotes_entry(B,A).
check_tree_entry(A):-nonvar(B),nonvar(C),nonvar(D),check_tree_entry(C),check_tree_entry(D),denotes_mode(B,C,D,A).
error(A):-make_msg(A,B),e,msg_list(B,C),denotes_e(C).
nox(A):-nox(A,B).
translate(A,B):-var(A),cut,denotes_call(A,B).
translate(A,B):-cut,translate(C,B),'denotes_^'(D,C,A).
translate(A,B):-compile_option(C),cut,denotes_system(D,C),denotes_cprolog(D),'denotes_='(E,F,B),'denotes_.'(G,H,F),denotes_c(E,G,H,A).
translate(A,B):-compile_option(C),cut,denotes_system(D,C),denotes_quintus(D),'denotes_='(E,F,B),'denotes_.'(G,H,F),denotes_constC(E,G,H,A).
translate(A,B):-compile_option(C),cut,denotes_system(D,C),denotes_aquarius(D),'denotes_='(E,F,B),'denotes_.'(G,H,F),denotes_constC(E,G,H,A).
translate(A,B):-number(C),cut,top_expr(D,E,B,F),'denotes_=:='(E,C,F),denotes_is(C,D,A).
translate(A,B):-var(C),cut,top_expr(D,E,B,F),'denotes_='(E,C,F),denotes_is(C,D,A).
translate(A,B):-number(C),cut,top_expr(D,E,B,F),'denotes_=\\='(E,C,F),'denotes_\\+'(G,A),denotes_is(C,D,G).
translate(A,B):-cut,expr(C,D,B,E),denotes_put(D,E),denotes_put(C,A).
translate(A,B):-arith_test(A,C,D,E),cut,expr(C,F,B,G),expr(D,H,G,I),arith_test(I,F,H,E).
translate(A,B):-cut,translate_unify(C,D,B),'denotes_='(C,D,A).
translate(A,B):-cut,translate(C,D),translate(E,F),'denotes_,'(D,F,B),'denotes_,'(C,E,A).
translate(A,B):-cut,translate(C,D),translate(E,F),'denotes_;'(D,F,B),'denotes_;'(C,E,A).
translate(A,B):-cut,translate(C,D),translate(E,F),'denotes_->'(D,F,B),'denotes_->'(C,E,A).
translate(A,B):-cut,translate(C,D),denotes_not(D,B),denotes_not(C,A).
translate(A,B):-cut,translate(C,D),'denotes_\\+'(D,B),'denotes_\\+'(C,A).
translate(A,B):-cut,denotes_fail(B),denotes_false(A).
translate(A,B):-cut,denotes_true(B),denotes_otherwise(A).
translate(A,B):-dyn_pred(A),cut,'denotes_$ call_dynamic'(A,B).
translate(A,A):-true.
flat_conj(A,B):-flat_conj(A,B,C),denotes_true(C).
logical_simplify(A,B):-simp_upv(A,B,C),cut,denotes_logical(C).
nonnegative(A):-integer(A),ge(A,B),denotes_0(B).
clr_entry:-my_retractall(A),denotes_compile_option(B,A),denotes_entry(C,D,B).
check_non_builtin(A):-nonvar(A),functor(A,B,C),check_nb(A,D),'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_.'(I,J,H),'denotes_[]'(J),'denotes_ is ignored.'(I),'denotes_/'(B,C,G),'denotes_Attempt to give modes for builtin '(E).
make_req_bef(A,B,C):-translate(A,D),flat_conj(D,E),split_uninit_deref(E,F,G),logical_simplify(F,B),logical_simplify(G,C).
keep_uninit(A,B,C):-varbag(A,D),keep_uninit(D,B,E,F),squeeze_conj(E,C),denotes_true(F).
survive(A,B):-survive(A),cut,denotes_y(B).
survive(A,B):-neg(C),cut,denotes_survive(A,C),denotes_n(B).
split_deref(A,B,C):-cut,split_deref(D,E,F),split_deref(G,H,I),'denotes_,'(F,I,C),'denotes_,'(E,H,B),'denotes_,'(D,G,A).
split_deref(A,B,C):-cut,denotes_true(C),denotes_deref(D,B),denotes_deref(D,A).
split_deref(A,B,C):-cut,denotes_true(C),denotes_rderef(D,B),denotes_rderef(D,A).
split_deref(A,B,A):-denotes_true(B).
check_req_bef(A,B,C,D,E):-split_uninit_deref(A,C,F),squeeze_conj(F,G),warning_req(G,E),squeeze_conj(H,D),'denotes_,'(G,B,H).
split_uninit_deref(A,B,C):-cut,split_uninit_deref(D,E,F),split_uninit_deref(G,H,I),'denotes_,'(F,I,C),'denotes_,'(E,H,B),'denotes_,'(D,G,A).
split_uninit_deref(A,B,C):-cut,denotes_true(C),denotes_deref(D,B),denotes_deref(D,A).
split_uninit_deref(A,A,B):-an_uninit_mode(A),cut,denotes_true(B).
split_uninit_deref(A,B,A):-denotes_true(B).
squeeze_conj(A,B):-neg(C),cut,squeeze_conj(D,E),flat_conj(F,B,E),denotes_all_true(D,C),'denotes_,'(F,D,A).
squeeze_conj(A,B):-neg(C),cut,squeeze_conj(D,E),flat_conj(F,B,E),denotes_all_true(D,C),'denotes_,'(D,F,A).
squeeze_conj(A,B):-all_true(A),cut,denotes_true(B).
squeeze_conj(A,A):-true.
warning_req(A,B):-cut,denotes_true(A).
warning_req(A,B):-functor(B,C,D),warning(E),'denotes_.'(F,G,E),'denotes_.'(H,I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_Require modes can only be uninit(X), uninit_reg(X) or deref(X).'(N),denotes_nl(L),'denotes_.'(J),'denotes_/'(C,D,H),'denotes_Illegal Require modes converted to Before in '(F).
make_after(A,B,B):-denotes_yes(A).
make_after(A,B,C):-denotes_true(C),denotes_no(A).
check_nb(A,B):-builtin(A),cut,warning(B),fail.
check_nb(A,B):-true.
o(A):-nonvar(A),cox(A,B),po,cut.
cox(A,B):-atomic(A),compile_option(A),cut,denotes_true(B).
cox(A,B):-functor(A,C,D),functor(E,C,D),nox(E,B),cut,ox(A,F).
cox(A,B):-ox(A).
no(A):-nonvar(A),nox(A,B),po,cut.
nox(A,B):-copy(A,C),compile_option(C),cut,pragma_no_write_once(A),my_retractall(D),denotes_compile_option(A,D),denotes_true(B).
nox(A,B):-neg(C),denotes_compile_option(A,C),denotes_false(B).
co(A):-nonvar(A),cox(A,B),po,cut,denotes_true(B).
pox(A):-setof(B,C,A),denotes_compile_option(B,C).
pmodes:-mode_option(A,B,C,D,E),w(F),inst_writeq(G),nl,fail,denotes_mode(A,B,C,D,E,G),'denotes_% '(F).
pmodes:-modal_entry(A,B),w(C),inst_writeq(D),nl,fail,denotes_modal_entry(A,B,D),'denotes_% '(C).
pmodes:-true.
inst_writeq(A):-copy(A,B),varset(B,C),inst_vars_names_list(D,C,E),inst_writeq(B,C,E),denotes_0(D).
ox(A):-ox(A,B).
ox(A,B):-compile_option(A),cut,denotes_true(B).
ox(A,B):-neg(C),pragma_write_once(A),asserta(D),denotes_compile_option(A,D),denotes_compile_option(A,C),denotes_false(B).
list(A):-(B;C),denotes_cons(A,C),denotes_nil(A,B).
cox(A):-cox(A,B),denotes_true(B).
cdefault:-qdefault,cox(A),denotes_system(B,A),denotes_cprolog(B).
qdefault:-my_retractall(A),my_retractall(B),my_retractall(C),default_option(D),asserta(E),fail,denotes_compile_option(D,E),denotes_modal_entry(F,G,C),denotes_mode_option(H,I,J,K,L,B),denotes_compile_option(M,A).
qdefault:-true.
adefault:-qdefault,cox(A),denotes_system(B,A),denotes_aquarius(B).
interactive_default(A):-cdefault,nox(B),po,denotes_flat(B),denotes_cprolog(A).
interactive_default(A):-qdefault,nox(B),po,denotes_flat(B),denotes_quintus(A).
interactive_default(A):-adefault,nox(B),po,denotes_flat(B),denotes_aquarius(A).
check_macro_def(A):-nonvar(A),functor(A,B,C),check_nb(A,D),'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_.'(I,J,H),'denotes_[]'(J),'denotes_ is ignored.'(I),'denotes_/'(B,C,G),'denotes_Attempt to give macro definition for builtin '(E).
conjlist(A,B,C):-cut,conjlist(D,B,E),conjlist(F,E,C),'denotes_,'(D,F,A).
conjlist(A,B,C):-constC(B,A,C).
remove_double_indirect(A,B,C,D):-functor(A,E,F),functor(B,E,F),require(A,G),uninit_set_type(H,G,I),match_heads(J,F,A,B,I,C,D),denotes_1(J),denotes_reg(H).
varset(A,B):-varbag(A,C),sort(C,B).
macro_varlist(A,B,C):-var(D),var(E),cut,constC(B,F,G),constC(G,D,H),constC(H,E,I),macro_varlist(J,I,C),denotes_pref(F),'denotes_.'(K,J,A),denotes_move(D,E,K).
macro_varlist(A,B,C):-cut,macro_varlist(D,B,C),'denotes_.'(E,D,A),denotes_label(F,E).
macro_varlist(A,B,C):-branch(D,E),cut,varbag(D,F),diffbag(F,E,G),difflist(G,B,H),macro_varlist(I,H,C),'denotes_.'(D,I,A).
macro_varlist(A,B,C):-varbag(D,B,E),macro_varlist(F,E,C),'denotes_.'(D,F,A).
macro_varlist(A,B,B):-'denotes_[]'(A).
require(A,B):-info(A,C,D,E,F,G,H,I),cut,logical_simplify(H,B).
require(A,B):-neg(C),cut,denotes_info(A,C),denotes_true(B).
uninit_set_type(A,B,C):-uninit_bag_type(A,B,D),sort(D,C).
match_heads(A,B,C,D,E,F,F):-gt(A,B),cut.
match_heads(A,B,C,D,E,F,G):-le(A,B),arg(A,C,H),inv(H,E),cut,arg(A,D,H),exprEval(I,J),match_heads(I,B,C,D,E,F,G),'denotes_+'(A,K,J),denotes_1(K).
match_heads(A,B,C,D,E,F,G):-le(A,B),arg(A,D,H),arg(A,C,I),constC(F,J,K),exprEval(L,M),match_heads(L,B,C,D,E,K,G),'denotes_+'(A,N,M),denotes_1(N),denotes_move(H,I,J).
branch(A,B):-branch(A,B,C),'denotes_[]'(C).
varbag(A,B):-varbag(A,B,C),'denotes_[]'(C).
diffbag(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
diffbag(A,B,C):-memberv(D,B),cut,diffbag(E,B,C),'denotes_.'(D,E,A).
diffbag(A,B,C):-diffbag(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
varbag(A,B,C):-var(A),cut,constC(B,A,C).
varbag(A,B,C):-nonvar(A),cut,functor(A,D,E),varbag(A,F,E,B,C),denotes_1(F).
lbl_sets(A,B,C):-cut,seal(C),get(B,D,E),get(E,D,F),lbl_sets(G,B,E),denotes_dummy(F),'denotes_.'(H,G,A),denotes_procedure(D,H).
lbl_sets(A,B,C):-cut,get(C,D,E),lbl_sets(F,B,C),denotes_dummy(E),'denotes_/'(G,H,D),'denotes_.'(I,F,A),denotes_label(J,I),'denotes_/'(G,H,J).
lbl_sets(A,B,C):-lbl_sets(D,B,C),'denotes_.'(E,D,A).
lbl_sets(A,B,C):-seal(B),seal(C),'denotes_[]'(A).
seal(A):-cut,denotes_leaf(A).
seal(A):-seal(B),seal(C),denotes_node(D,E,B,C,A).
get(A,B,C):-get(D,E,F,G,B,C),denotes_node(D,E,F,G,A).
map_external_lbls(A,B,C,D,E):-cut,fget(B,F,G),constC(D,H,I),map_external_lbls(J,B,G,I,E),denotes_procedure(F,H),'denotes_.'(K,J,A),denotes_procedure(F,K).
map_external_lbls(A,B,C,D,E):-map_external_lbls_i(F,G,C),constC(D,G,H),map_external_lbls(I,B,C,H,E),'denotes_.'(F,I,A).
map_external_lbls(A,B,C,D,D):-'denotes_[]'(A).
fget(A,B,C):-compare(D,B,E),fget_2(D,B,C,F,G,H),denotes_node(E,F,G,H,A).
map_external_lbls_i(A,B,C):-map_branches(A,D,B,E),cut,map_the_lbls(D,E,C).
map_external_lbls_i(A,A,B):-true.
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_jump(E,C),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_jump(G,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_jump(G,H,I,E,C),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_jump(G,H,I,J,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_jump_nt(G,H,I,E,C),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_jump_nt(G,H,I,J,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_call(E,C),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_call(G,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_test(G,H,I,E,C),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_test(G,H,I,J,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_equal(G,H,E,C),'denotes_.'(I,J,B),'denotes_[]'(J),denotes_equal(G,H,I,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_unify(G,H,I,J,E,C),'denotes_.'(K,L,B),'denotes_[]'(L),denotes_unify(G,H,I,J,K,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_unify_atomic(G,H,E,C),'denotes_.'(I,J,B),'denotes_[]'(J),denotes_unify_atomic(G,H,I,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_choice(G,H,E,C),'denotes_.'(I,J,B),'denotes_[]'(J),denotes_choice(G,H,I,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_hash(G,H,I,E,C),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_hash(G,H,I,J,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_pair(G,E,C),'denotes_.'(H,I,B),'denotes_[]'(I),denotes_pair(G,H,A).
map_branches(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_.'(I,J,H),'denotes_[]'(J),denotes_switch(K,L,E,G,I,C),'denotes_.'(M,N,B),'denotes_.'(O,P,N),'denotes_.'(Q,R,P),'denotes_[]'(R),denotes_switch(K,L,M,O,Q,A).
map_the_lbls(A,B,C):-neg(D),cut,map_the_lbls(E,F,C),denotes_fget(C,G,H,D),'denotes_/'(I,J,G),'denotes_.'(K,F,B),denotes_e(L,K),'denotes_/'(I,J,L),'denotes_.'(M,E,A),'denotes_/'(I,J,M).
map_the_lbls(A,B,C):-map_the_lbls(D,E,C),'denotes_.'(F,E,B),'denotes_.'(F,D,A).
map_the_lbls(A,B,C):-'denotes_[]'(B),'denotes_[]'(A).
init_directives(A):-cut,init_directives(B),init_directives(C),'denotes_,'(B,C,A).
init_directives(A):-init_directive A.
add_init(A):-assertz(B),denotes_init_clause(A,B).
dynamic_ptree(A,B):-functor(C,D,E),dyn_pred(C),cut,add_pred(F),'denotes_/'(D,E,B),denotes_ptree(G,F,H,I,A),'denotes_/'(D,E,G).
add_pred(A):-'denotes_[]'(A).
add_pred(A):-add_init(B),add_pred(C),'denotes_$ assertz'(D,B),'denotes_.'(D,C,A).
init_ptree(A,B):-(C;D),(E;F),list_to_conj(G,H),cls_to_ptrees(I,B),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_:-'(L,H,J),'denotes_='(L,M,F),'denotes_$ init'(M),'denotes_->'(N,O,E),denotes_genatom(P,Q,L,O),'denotes_.'(R,S,P),'denotes_.'(T,U,S),'denotes_.'(V,W,U),'denotes_.'(X,Y,W),'denotes_.'(Z,A1,Y),'denotes_.'(B1,C1,A1),'denotes_.'(D1,E1,C1),'denotes_[]'(E1),denotes_95(D1),denotes_116(B1),denotes_105(Z),denotes_110(X),denotes_105(V),denotes_32(T),denotes_36(R),denotes_first_name(A,Q,N),'denotes_='(G,F1,D),'denotes_[]'(F1),'denotes_->'(G1,H1,C),denotes_true(H1),denotes_bagof(I1,J1,G,G1),denotes_init_clause(I1,J1).
append(A,B,C):-difflist(A,C,B).
first_name(A,B):-cut,'denotes_.'(C,D,A),denotes_ptree(B,E,F,G,C).
first_name(A,B):-first_name(C,B),'denotes_.'(D,C,A).
genatom(A,B,C):-atomic(D),atomic(E),cut,name(D,F),name(E,G),append(A,F,H,G,I),name(C,I),'denotes_.'(J,K,H),'denotes_[]'(K),denotes_47(J),'denotes_/'(D,E,B).
list_to_conj(A,B):-denotes_true(B),'denotes_[]'(A).
list_to_conj(A,B):-flat_conj(C,B,D),list_to_conj(E,D),'denotes_.'(C,E,A).
list_ex:-list_ex(A),nl,fail.
list_ex:-true.
list_ex(A):-ex(A,B,C),w(D),w(A),wn(E),inst_writeqs(B),(F;G),denotes_true(G),'denotes_->'(H,I,F),'denotes_,'(J,K,I),denotes_inst_writeqs(C,K),denotes_wn(L,J),'denotes_% Modes:'(L),'denotes_\\+'(M,H),'denotes_='(C,N,M),denotes_true(N),'denotes_:'(E),'denotes_% Example '(D).
inst_writeqs(A):-cons(A),cut,inst_writeq_list(A).
inst_writeqs(A):-neg(B),cut,inst_writeq(A),wn(C),'denotes_.'(C),denotes_cons(A,B).
gensym_integer(A):-denotes_1(A).
max_int(A):-denotes_32767(A).
min_int(A):-'denotes_-32768'(A).
directive(A):-'denotes_:-'(B,A).
stree(A):-denotes_stree(B,C,D,E,F,G,A).
find_arg(A,B,C):-functor(B,D,E),find_arg(F,E,A,B,C),denotes_1(F).
find_arg(A,B,A,C,D):-le(A,B),arg(A,C,E),ident(E,D),cut,true.
find_arg(A,B,C,D,E):-le(A,B),arg(A,D,F),nonident(F,E),cut,exprEval(G,H),find_arg(G,B,C,D,E),'denotes_+'(A,I,H),denotes_1(I).
outfilename(A,B,C):-name(A,D),(E;F),name(C,G),denotes_append(D,H,B,G,F),'denotes_.'(I,J,H),'denotes_[]'(J),denotes_46(I),'denotes_->'(K,L,E),denotes_append(M,N,B,G,L),'denotes_.'(O,P,N),'denotes_[]'(P),denotes_46(O),denotes_append(M,Q,R,D,K),'denotes_.'(S,T,Q),'denotes_[]'(T),denotes_46(S).
append(A,B,C,D):-append(B,C,D),'denotes_[]'(A).
append(A,B,C,D):-append(E,B,C,F),'denotes_.'(G,F,D),'denotes_.'(G,E,A).
newfilename(A,B,C):-name(A,D),append(D,B,E),name(C,E).
grounds_in_form(A,B):-ground_set(A,C),vars_in_unify(C,A,B).
ground_set(A,B):-ground_bag(A,C,D),sort(C,E),filter_vars(E,B),'denotes_[]'(D).
vars_in_unify(A,B,C):-make_graph(D,E,F),warshall(E,G),member_w(H,G),'denotes_-'(I,C,H),'denotes_[]'(F),'denotes_,'(J,B,D),'denotes_='(I,A,J).
make_graph(A,B,C):-cut,make_graph(D,B,E),make_graph(F,E,C),'denotes_,'(D,F,A).
make_graph(A,B,C):-graph_node(A,B,C).
warshall(A,B):-warshall(A,A,B).
member_w(A,B):-ident(C,D),cut,'denotes_.'(E,F,B),'denotes_-'(D,G,E),'denotes_-'(C,G,A).
member_w(A,B):-member_w(C,D),'denotes_-'(E,F,C),'denotes_.'(G,D,B),'denotes_-'(E,F,A).
warshall(A,B,B):-cut,'denotes_[]'(A).
warshall(A,B,C):-member_w(D,B),warshall(B,E,F,G),warshall(H,G,C),'denotes_-'(E,F,D),'denotes_.'(I,H,A),'denotes_-'(E,J,I).
warshall(A,B,C,D):-cut,'denotes_[]'(D),'denotes_[]'(A).
warshall(A,B,C,D):-inv(B,E),cut,unionv(E,C,F),warshall(G,B,C,H),'denotes_.'(I,H,D),'denotes_-'(J,F,I),'denotes_.'(K,G,A),'denotes_-'(J,E,K).
warshall(A,B,C,D):-warshall(E,B,C,F),'denotes_.'(G,F,D),'denotes_-'(H,I,G),'denotes_.'(J,E,A),'denotes_-'(H,I,J).
unionv(A,B,B):-'denotes_[]'(A).
unionv(A,B,C):-unionv_2(B,D,E,C),'denotes_.'(D,E,A).
graph_node(A,B,C):-cut,varset(D,E),constC(B,F,C),'denotes_-'(G,E,F),'denotes_='(G,D,A).
graph_node(A,B,C):-cut,varset(D,E),constC(B,F,C),'denotes_-'(G,E,F),'denotes_=='(G,D,A).
graph_node(A,B,B):-true.
intersectv(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
intersectv(A,B,C):-intersectv_2(B,D,E,C),'denotes_.'(D,E,A).
intersectv_2(A,B,C,D):-'denotes_[]'(D),'denotes_[]'(A).
intersectv_2(A,B,C,D):-compare(E,B,F),intersectv_3(E,B,C,F,G,D),'denotes_.'(F,G,A).
intersectv_3(A,B,C,D,E,F):-intersectv_2(C,D,E,F),'denotes_<'(A).
intersectv_3(A,B,C,D,E,F):-intersectv(C,E,G),'denotes_.'(B,G,F),'denotes_='(A).
intersectv_3(A,B,C,D,E,F):-intersectv_2(E,B,C,F),'denotes_>'(A).
intersectv_list(A,B):-'denotes_[]'(B),'denotes_[]'(A).
intersectv_list(A,B):-intersectv_list(C,D,B),'denotes_.'(D,C,A).
intersectv_list(A,B,B):-'denotes_[]'(A).
intersectv_list(A,B,C):-intersectv(D,B,E),intersectv_list(F,E,C),'denotes_.'(D,F,A).
disjointv(A,B):-'denotes_[]'(A).
disjointv(A,B):-disjointv_2(B,C,D),'denotes_.'(C,D,A).
disjointv_2(A,B,C):-'denotes_[]'(A).
disjointv_2(A,B,C):-compare(D,B,E),disjointv_3(D,B,C,E,F),'denotes_.'(E,F,A).
disjointv_3(A,B,C,D,E):-disjointv_2(C,D,E),'denotes_<'(A).
disjointv_3(A,B,C,D,E):-disjointv_2(E,B,C),'denotes_>'(A).
diffv(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
diffv(A,B,C):-diffv_2(B,D,E,C),'denotes_.'(D,E,A).
diffv_2(A,B,C,D):-'denotes_.'(B,C,D),'denotes_[]'(A).
diffv_2(A,B,C,D):-compare(E,B,F),diffv_3(E,B,C,F,G,D),'denotes_.'(F,G,A).
diffv_3(A,B,C,D,E,F):-diffv(C,G,H),'denotes_.'(D,E,G),'denotes_.'(B,H,F),'denotes_<'(A).
diffv_3(A,B,C,D,E,F):-diffv(C,E,F),'denotes_='(A).
diffv_3(A,B,C,D,E,F):-diffv_2(E,B,C,F),'denotes_>'(A).
unionv_2(A,B,C,D):-'denotes_.'(B,C,D),'denotes_[]'(A).
unionv_2(A,B,C,D):-compare(E,B,F),unionv_3(E,B,C,F,G,D),'denotes_.'(F,G,A).
unionv_3(A,B,C,D,E,F):-unionv_2(C,D,E,G),'denotes_.'(B,G,F),'denotes_<'(A).
unionv_3(A,B,C,D,E,F):-unionv(C,E,G),'denotes_.'(B,G,F),'denotes_='(A).
unionv_3(A,B,C,D,E,F):-unionv_2(E,B,C,G),'denotes_.'(D,G,F),'denotes_>'(A).
includev(A,B,C):-includev_2(B,A,C).
includev_2(A,B,C):-'denotes_.'(B,D,C),'denotes_[]'(D),'denotes_[]'(A).
includev_2(A,B,C):-compare(D,B,E),includev_3(D,B,E,F,C),'denotes_.'(E,F,A).
includev_3(A,B,C,D,E):-'denotes_.'(B,F,E),'denotes_.'(C,D,F),'denotes_<'(A).
includev_3(A,B,C,D,E):-'denotes_.'(C,D,E),'denotes_='(A).
includev_3(A,B,C,D,E):-includev_2(D,B,F),'denotes_.'(C,F,E),'denotes_>'(A).
excludev(A,B,C):-excludev_2(B,A,C,B).
excludev_2(A,B,C,D):-'denotes_[]'(C),'denotes_[]'(A).
excludev_2(A,B,C,D):-compare(E,B,F),excludev_3(E,B,F,G,C,D),'denotes_.'(F,G,A).
excludev_3(A,B,C,D,E,E):-'denotes_<'(A).
excludev_3(A,B,C,D,D,E):-'denotes_='(A).
excludev_3(A,B,C,D,E,F):-excludev_2(D,B,G,D),'denotes_.'(C,G,E),'denotes_>'(A).
subsetv(A,B):-'denotes_[]'(A).
subsetv(A,B):-compare(C,D,E),subsetv_2(C,D,F,G),'denotes_.'(E,G,B),'denotes_.'(D,F,A).
subsetv_2(A,B,C,D):-subsetv(C,D),'denotes_='(A).
subsetv_2(A,B,C,D):-subsetv(E,D),'denotes_.'(B,C,E),'denotes_>'(A).
small_subsetv(A,B):-'denotes_[]'(A).
small_subsetv(A,B):-inv(C,B),small_subsetv(D,B),'denotes_.'(C,D,A).
inv_2(A,B,C):-'denotes_='(A).
inv_2(A,B,C):-inv(B,C),'denotes_>'(A).
uniqvar(A,B):-'denotes_[]'(B),'denotes_[]'(A).
uniqvar(A,B):-uniqvar(C,D,B,E),'denotes_[]'(E),'denotes_.'(C,D,A).
uniqvar(A,B,C,D):-cut,constC(C,A,D),'denotes_[]'(B).
uniqvar(A,B,C,D):-one_uniqvar(A,E,C,F),uniqvar(E,G,F,D),'denotes_.'(E,G,B).
one_uniqvar(A,B,C,C):-ident(A,B),cut.
one_uniqvar(A,B,C,D):-nonident(A,B),constC(C,A,D),cut.
filter_vars(A,B):-filter_vars(A,B,C),'denotes_[]'(C).
filter_vars(A,B,B):-'denotes_[]'(A).
filter_vars(A,B,C):-var(D),cut,constC(B,D,E),filter_vars(F,E,C),'denotes_.'(D,F,A).
filter_vars(A,B,C):-nonvar(D),cut,filter_vars(E,B,C),'denotes_.'(D,E,A).
filter_vars(A,B,C,D):-'denotes_[]'(D),'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
filter_vars(A,B,C,D):-var(E),cut,filter_vars(F,G,H,I),'denotes_.'(J,I,D),'denotes_.'(E,H,C),'denotes_.'(J,G,B),'denotes_.'(E,F,A).
filter_vars(A,B,C,D):-nonvar(E),cut,filter_vars(F,G,C,D),'denotes_.'(H,G,B),'denotes_.'(E,F,A).
varbag(A,B,C,D,D):-gt(B,C),cut.
varbag(A,B,C,D,E):-le(B,C),cut,arg(B,A,F),varbag(F,D,G),exprEval(H,I),varbag(A,H,C,G,E),'denotes_+'(B,J,I),denotes_1(J).
union(A,B,C):-termlt(D,E),cut,union(F,G,H),'denotes_.'(E,I,G),'denotes_.'(D,H,C),'denotes_.'(E,I,B),'denotes_.'(D,F,A).
union(A,B,C):-cut,union(D,E,F),'denotes_.'(G,F,C),'denotes_.'(G,E,B),'denotes_.'(G,D,A).
union(A,B,C):-termlt(D,E),cut,union(F,G,H),'denotes_.'(E,I,F),'denotes_.'(D,H,C),'denotes_.'(D,G,B),'denotes_.'(E,I,A).
union(A,B,B):-cut,'denotes_[]'(A).
union(A,B,A):-'denotes_[]'(B).
intersect(A,B,C):-termlt(D,E),cut,intersect(F,G,C),'denotes_.'(E,H,G),'denotes_.'(E,H,B),'denotes_.'(D,F,A).
intersect(A,B,C):-cut,intersect(D,E,F),'denotes_.'(G,F,C),'denotes_.'(G,E,B),'denotes_.'(G,D,A).
intersect(A,B,C):-termlt(D,E),cut,intersect(F,G,C),'denotes_.'(E,H,F),'denotes_.'(D,G,B),'denotes_.'(E,H,A).
intersect(A,B,C):-cut,'denotes_[]'(C),'denotes_[]'(A).
intersect(A,B,C):-'denotes_[]'(C),'denotes_[]'(B).
diff(A,B,C):-termlt(D,E),cut,diff(F,G,H),'denotes_.'(E,I,G),'denotes_.'(D,H,C),'denotes_.'(E,I,B),'denotes_.'(D,F,A).
diff(A,B,C):-cut,diff(D,E,C),'denotes_.'(F,E,B),'denotes_.'(F,D,A).
diff(A,B,C):-termlt(D,E),cut,diff(F,G,C),'denotes_.'(E,H,F),'denotes_.'(D,G,B),'denotes_.'(E,H,A).
diff(A,B,C):-cut,'denotes_[]'(C),'denotes_[]'(A).
diff(A,B,A):-'denotes_[]'(B).
in(A,B):-cut,'denotes_.'(A,C,B).
in(A,B):-termgt(A,C),in(A,D),'denotes_.'(C,D,B).
include(A,B,C):-termlt(A,D),cut,'denotes_.'(A,E,C),'denotes_.'(D,F,E),'denotes_.'(D,F,B).
include(A,B,C):-ident(A,D),cut,'denotes_.'(D,E,C),'denotes_.'(D,E,B).
include(A,B,C):-termgt(A,D),cut,include(A,E,F),'denotes_.'(D,F,C),'denotes_.'(D,E,B).
include(A,B,C):-'denotes_.'(A,D,C),'denotes_[]'(D),'denotes_[]'(B).
subset(A,B):-cut,subset(C,D),'denotes_.'(E,D,B),'denotes_.'(E,C,A).
subset(A,B):-termgt(C,D),cut,subset(E,F),'denotes_.'(C,G,E),'denotes_.'(D,F,B),'denotes_.'(C,G,A).
subset(A,B):-'denotes_[]'(A).
not_disjoint(A,B):-cut,'denotes_.'(C,D,B),'denotes_.'(C,E,A).
not_disjoint(A,B):-termgt(C,D),cut,not_disjoint(E,F),'denotes_.'(C,G,E),'denotes_.'(D,F,B),'denotes_.'(C,G,A).
not_disjoint(A,B):-termlt(C,D),cut,not_disjoint(E,F),'denotes_.'(D,G,F),'denotes_.'(D,G,B),'denotes_.'(C,E,A).
filter_dups(A,B):-list_to_key(A,C),keysort(C,D),filter_dups(D,E,F,G,B,H),'denotes_[]'(H),denotes_f(F),denotes_f(E).
list_to_key(A,B):-'denotes_[]'(B),'denotes_[]'(A).
list_to_key(A,B):-list_to_key(C,D),'denotes_.'(E,D,B),'denotes_-'(F,F,E),'denotes_.'(F,C,A).
filter_dups(A,B,C,D,E,F):-dups_state_last(B,C,D,E,F),'denotes_[]'(A).
filter_dups(A,B,C,D,E,F):-dups_state(B,C,G,H,D,I,E,J),filter_dups(K,G,H,I,J,F),'denotes_.'(L,K,A),'denotes_-'(I,M,L).
dups_state_last(A,B,C,D,D):-cut,denotes_f(B).
dups_state_last(A,B,C,D,E):-out_if_true(A,C,D,E),denotes_t(B).
dups_state(A,B,C,D,E,F,G,G):-cut,denotes_t(D),denotes_f(C),denotes_f(B),denotes_f(A).
dups_state(A,B,C,D,E,F,G,G):-ident(E,F),cut,denotes_t(D),denotes_t(C),denotes_t(B).
dups_state(A,B,C,D,E,F,G,H):-out_if_true(A,E,G,H),denotes_t(D),denotes_f(C),denotes_t(B).
out_if_true(A,B,C,D):-constC(C,B,D),denotes_t(A).
out_if_true(A,B,C,C):-denotes_f(A).
filter_uniq(A,B):-list_to_key(A,C),keysort(C,D),filter_uniq(D,E,F,G,B,H),'denotes_[]'(H),denotes_f(F),denotes_f(E).
filter_uniq(A,B,C,D,E,F):-uniq_state_last(B,C,D,E,F),'denotes_[]'(A).
filter_uniq(A,B,C,D,E,F):-uniq_state(B,C,G,H,D,I,E,J),filter_uniq(K,G,H,I,J,F),'denotes_.'(L,K,A),'denotes_-'(I,M,L).
uniq_state_last(A,B,C,D,D):-cut,denotes_f(B).
uniq_state_last(A,B,C,D,E):-out_if_false(A,C,D,E),denotes_t(B).
uniq_state(A,B,C,D,E,F,G,G):-cut,denotes_t(D),denotes_f(C),denotes_f(B),denotes_f(A).
uniq_state(A,B,C,D,E,F,G,G):-ident(E,F),cut,denotes_t(D),denotes_t(C),denotes_t(B).
uniq_state(A,B,C,D,E,F,G,H):-out_if_false(A,E,G,H),denotes_t(D),denotes_f(C),denotes_t(B).
out_if_false(A,B,C,D):-constC(C,B,D),denotes_f(A).
out_if_false(A,B,C,C):-denotes_t(A).
get(A,B,C,D,A,B):-cut.
get(A,B,C,D,E,F):-compare(G,E,A),get(G,E,F,C,D).
get(A,B,C,D,E):-get(D,B,C),'denotes_<'(A).
get(A,B,C,D,E):-get(E,B,C),'denotes_>'(A).
fget_2(A,B,C,D,E,F):-fget(E,B,C),'denotes_<'(A).
fget_2(A,B,C,C,D,E):-'denotes_='(A).
fget_2(A,B,C,D,E,F):-fget(F,B,C),'denotes_>'(A).
set(A,B,C,D):-cut,denotes_node(B,C,E,F,D),denotes_node(B,G,E,F,A).
set(A,B,C,D):-termlt(B,E),cut,set(F,B,C,G),denotes_node(E,H,G,I,D),denotes_node(E,H,F,I,A).
set(A,B,C,D):-termgt(B,E),cut,set(F,B,C,G),denotes_node(E,H,I,G,D),denotes_node(E,H,I,F,A).
set(A,B,C,D):-denotes_node(B,C,E,F,D),denotes_leaf(F),denotes_leaf(E),denotes_leaf(A).
fset(A,B,C,D):-denotes_node(B,C,E,F,D),denotes_leaf(F),denotes_leaf(E),denotes_leaf(A).
fset(A,B,C,D):-compare(E,B,F),fset_2(E,B,C,G,H,I,J,K,L),denotes_node(F,J,K,L,D),denotes_node(F,G,H,I,A).
fset_2(A,B,C,D,E,F,D,G,F):-fset(E,B,C,G),'denotes_<'(A).
fset_2(A,B,C,D,E,F,C,E,F):-'denotes_='(A).
fset_2(A,B,C,D,E,F,D,E,G):-fset(F,B,C,G),'denotes_>'(A).
create_array(A,B):-(C;D),random_permute(E,F),list_to_tree(F,B),denotes_list_to_key(A,E,D),'denotes_->'(G,H,C),'denotes_='(E,A,H),denotes_key_list(A,G).
key_list(A):-'denotes_[]'(A).
key_list(A):-'denotes_.'(B,C,A),'denotes_-'(D,E,B).
random_permute(A,B):-ran_keys(A,C,D),keysort(D,E),key_to_list(E,B),denotes_23141(C).
list_to_tree(A,B):-seal(B),'denotes_[]'(A).
list_to_tree(A,B):-get(B,C,D),list_to_tree(E,B),'denotes_.'(F,E,A),'denotes_-'(C,D,F).
non_empty_array(A):-denotes_node(B,C,D,E,A).
gensym(A):-gensym(B,A),'denotes_.'(C,D,B),'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_.'(I,J,H),'denotes_.'(K,L,J),'denotes_.'(M,N,L),'denotes_.'(O,P,N),'denotes_.'(Q,R,P),'denotes_.'(S,T,R),'denotes_.'(U,V,T),'denotes_.'(W,X,V),'denotes_.'(Y,Z,X),'denotes_.'(A1,B1,Z),'denotes_.'(C1,D1,B1),'denotes_[]'(D1),denotes_95(C1),denotes_109(A1),denotes_121(Y),denotes_115(W),denotes_95(U),denotes_108(S),denotes_97(Q),denotes_110(O),denotes_114(M),denotes_101(K),denotes_116(I),denotes_110(G),denotes_105(E),denotes_36(C).
gensym(A,B):-gennum(C),name(C,D),append(A,D,E),name(B,E),cut,true.
gennum(A):-gensym_integer(A),abolish(B,C),exprEval(D,E),asserta(F),denotes_gensym_integer(D,F),'denotes_+'(A,G,E),denotes_1(G),denotes_1(C),denotes_gensym_integer(B).
gensym(A,B,C):-atomic(D),atomic(E),cut,name(D,F),name(E,G),append(A,F,H,G,I,J),gensym(J,C),'denotes_.'(K,L,I),'denotes_[]'(L),denotes_95(K),'denotes_.'(M,N,H),'denotes_[]'(N),denotes_47(M),'denotes_/'(D,E,B).
gensym(A,B,C):-atomic(B),cut,name(B,D),append(A,D,E),gensym(E,C).
gensym(A,B,C):-warning(D),gensym(A,C),'denotes_.'(E,F,D),'denotes_.'(B,G,F),'denotes_[]'(G),'denotes_Erroneous second argument to gensym/3: '(E).
append(A,B,C,D,E,F):-append(B,C,D,E,F),'denotes_[]'(A).
append(A,B,C,D,E,F):-append(G,B,C,D,E,H),'denotes_.'(I,H,F),'denotes_.'(I,G,A).
append(A,B,C,D,E):-append(B,C,D,E),'denotes_[]'(A).
append(A,B,C,D,E):-append(F,B,C,D,G),'denotes_.'(H,G,E),'denotes_.'(H,F,A).
inst_vars(A,B):-copy(A,B),inst_vars(B).
inst_vars(A):-varset(A,B),inst_vars_list(C,B),denotes_0(C).
inst_vars_list(A,B):-cut,'denotes_[]'(B).
inst_vars_list(A,B):-cut,var_name(A,C),exprEval(D,E),inst_vars_list(D,F),'denotes_+'(A,G,E),denotes_1(G),'denotes_.'(C,F,B).
cons(A):-nonvar(B),'denotes_.'(C,D,B),'denotes_.'(C,D,A).
inst_writeq_list(A):-'denotes_[]'(A).
inst_writeq_list(A):-inst_writeq(B),wn(C),inst_writeq_list(D),'denotes_.'(C),'denotes_.'(B,D,A).
inst_vars_names_list(A,B,C):-cut,'denotes_[]'(C),'denotes_[]'(B).
inst_vars_names_list(A,B,C):-cut,var_name(A,D),exprEval(E,F),inst_vars_names_list(E,G,H),'denotes_+'(A,I,F),denotes_1(I),'denotes_.'(D,H,C),'denotes_.'(J,G,B).
inst_writeq(A,B,C):-var(A),cut,memberv2(A,B,D,C),write(D).
inst_writeq(A,B,C):-atomic(A),cut,writeq(A).
inst_writeq(A,B,C):-cons(A),cut,write(D),inst_writeq_listterm(A,B,C),'denotes_['(D).
inst_writeq(A,B,C):-binary_op(A,D,E,F),paren_op(E),cut,list_op(A,E,G,H),length(G,I),(J;K),inst_writeq_oplist(G,E,B,C),(L;M),denotes_true(M),'denotes_->'(N,O,L),denotes_write(P,O),'denotes_)'(P),'denotes_>'(I,Q,N),denotes_1(Q),denotes_true(K),'denotes_->'(R,S,J),denotes_write(T,S),'denotes_('(T),'denotes_>'(I,U,R),denotes_1(U),'denotes_[]'(H).
inst_writeq(A,B,C):-binary_op(A,D,E,F),cut,inst_writeq(D,B,C),write(G),write(E),write(H),inst_writeq(F,B,C),'denotes_ '(H),'denotes_ '(G).
inst_writeq(A,B,C):-structure(A),cut,functor(A,D,E),writeq(D),write(F),inst_writeq(G,E,A,B,C),write(H),'denotes_)'(H),denotes_1(G),'denotes_('(F).
memberv2(A,B,C,D):-ident(A,E),cut,'denotes_.'(C,F,D),'denotes_.'(E,G,B).
memberv2(A,B,C,D):-memberv2(A,E,C,F),'denotes_.'(G,F,D),'denotes_.'(H,E,B).
inst_writeq_listterm(A,B,C):-neg(D),cut,write(E),inst_writeq(A,B,C),write(F),'denotes_]'(F),'denotes_|'(E),denotes_list(A,D).
inst_writeq_listterm(A,B,C):-cut,write(D),'denotes_]'(D),'denotes_[]'(A).
inst_writeq_listterm(A,B,C):-cons(D),cut,inst_writeq(E,B,C),write(F),inst_writeq_listterm(D,B,C),'denotes_,'(F),'denotes_.'(E,D,A).
inst_writeq_listterm(A,B,C):-neg(D),cut,inst_writeq(E,B,C),inst_writeq_listterm(F,B,C),denotes_cons(F,D),'denotes_.'(E,F,A).
binary_op(A,B,C,D):-'denotes_-->'(C),'denotes_-->'(B,D,A).
binary_op(A,B,C,D):-'denotes_,'(C),'denotes_,'(B,D,A).
binary_op(A,B,C,D):-'denotes_;'(C),'denotes_;'(B,D,A).
binary_op(A,B,C,D):-'denotes_^'(C),'denotes_^'(B,D,A).
binary_op(A,B,C,D):-'denotes_='(C),'denotes_='(B,D,A).
binary_op(A,B,C,D):-'denotes_\\='(C),'denotes_\\='(B,D,A).
binary_op(A,B,C,D):-'denotes_:-'(C),'denotes_:-'(B,D,A).
binary_op(A,B,C,D):-'denotes_->'(C),'denotes_->'(B,D,A).
binary_op(A,B,C,D):-'denotes_=..'(C),'denotes_=..'(B,D,A).
binary_op(A,B,C,D):-'denotes_@<'(C),'denotes_@<'(B,D,A).
binary_op(A,B,C,D):-'denotes_@=<'(C),'denotes_@=<'(B,D,A).
binary_op(A,B,C,D):-'denotes_@>'(C),'denotes_@>'(B,D,A).
binary_op(A,B,C,D):-'denotes_@>='(C),'denotes_@>='(B,D,A).
binary_op(A,B,C,D):-'denotes_<'(C),'denotes_<'(B,D,A).
binary_op(A,B,C,D):-'denotes_=<'(C),'denotes_=<'(B,D,A).
binary_op(A,B,C,D):-'denotes_>'(C),'denotes_>'(B,D,A).
binary_op(A,B,C,D):-'denotes_>='(C),'denotes_>='(B,D,A).
binary_op(A,B,C,D):-'denotes_=:='(C),'denotes_=:='(B,D,A).
binary_op(A,B,C,D):-'denotes_=\\='(C),'denotes_=\\='(B,D,A).
binary_op(A,B,C,D):-'denotes_\\=='(C),'denotes_\\=='(B,D,A).
binary_op(A,B,C,D):-'denotes_=='(C),'denotes_=='(B,D,A).
binary_op(A,B,C,D):-'denotes_+'(C),'denotes_+'(B,D,A).
binary_op(A,B,C,D):-'denotes_-'(C),'denotes_-'(B,D,A).
binary_op(A,B,C,D):-'denotes_/'(C),'denotes_/'(B,D,A).
binary_op(A,B,C,D):-'denotes_*'(C),'denotes_*'(B,D,A).
binary_op(A,B,C,D):-'denotes_//'(C),'denotes_//'(B,D,A).
binary_op(A,B,C,D):-'denotes_/\\'(C),'denotes_/\\'(B,D,A).
binary_op(A,B,C,D):-'denotes_\\/'(C),'denotes_\\/'(B,D,A).
binary_op(A,B,C,D):-'denotes_ mod '(C),denotes_mod(B,D,A).
binary_op(A,B,C,D):-'denotes_ is '(C),denotes_is(B,D,A).
paren_op(A):-'denotes_,'(A).
paren_op(A):-'denotes_;'(A).
paren_op(A):-'denotes_:-'(A).
list_op(A,B,C,D):-nonvar(A),binary_op(A,E,B,F),cut,list_op(E,B,C,G),list_op(F,B,G,D).
list_op(A,B,C,D):-constC(C,A,D).
inst_writeq_oplist(A,B,C,D):-'denotes_[]'(A).
inst_writeq_oplist(A,B,C,D):-cons(E),cut,inst_writeq(F,C,D),write(B),inst_writeq_oplist(E,B,C,D),'denotes_.'(F,E,A).
inst_writeq_oplist(A,B,C,D):-nil(E),cut,inst_writeq(F,C,D),'denotes_.'(F,E,A).
structure(A):-nonvar(A),neg(B),neg(C),'denotes_='(A,D,C),'denotes_.'(E,F,D),denotes_atomic(A,B).
inst_writeq(A,B,C,D,E):-gt(A,B),cut.
inst_writeq(A,B,C,D,E):-eq(A,B),cut,arg(A,C,F),inst_writeq(F,D,E).
inst_writeq(A,B,C,D,E):-lt(A,B),cut,arg(A,C,F),inst_writeq(F,D,E),write(G),exprEval(H,I),inst_writeq(H,B,C,D,E),'denotes_+'(A,J,I),denotes_1(J),'denotes_,'(G).
nil(A):-atom(B),'denotes_[]'(B),'denotes_[]'(A).
var_name(A,B):-le(C,A),lt(A,D),cut,exprEval(E,F),name(B,G),'denotes_.'(E,H,G),'denotes_[]'(H),'denotes_+'(A,I,F),'denotes_.'(J,K,I),'denotes_[]'(K),denotes_65(J),denotes_26(D),denotes_0(C).
var_name(A,B):-ge(A,C),cut,exprEval(D,E),exprEval(F,G),name(F,H),name(B,I),'denotes_.'(D,H,I),'denotes_//'(A,J,G),denotes_26(J),'denotes_+'(K,L,E),'denotes_.'(M,N,L),'denotes_[]'(N),denotes_65(M),denotes_mod(A,O,K),denotes_26(O),denotes_26(C).
copyB(A,B):-bagof(A,C,D),'denotes_.'(B,E,D),'denotes_[]'(E),denotes_true(C).
copy1(A,B):-assert(C),global_copy(B),abolish(D,E),cut,denotes_1(E),denotes_global_copy(D),denotes_global_copy(A,C).
copy2(A,B):-varset(A,C),make_sym(C,D),copy2(A,B,D),cut.
make_sym(A,B):-'denotes_[]'(B),'denotes_[]'(A).
make_sym(A,B):-make_sym(C,D),'denotes_.'(E,D,B),denotes_p(F,G,E),'denotes_.'(F,C,A).
copy2(A,B,C):-var(A),cut,retrieve_sym(A,C,B).
copy2(A,B,C):-nonvar(A),cut,functor(A,D,E),functor(B,D,E),copy2(A,B,C,F,E),denotes_1(F).
copy3(A,B):-varbag(A,C),make_sym(C,D),copy2(A,B,D),cut.
retrieve_sym(A,B,C):-ident(A,D),cut,'denotes_.'(E,F,B),denotes_p(D,C,E).
retrieve_sym(A,B,C):-retrieve_sym(A,D,C),'denotes_.'(E,D,B).
copy2(A,B,C,D,E):-gt(D,E),cut.
copy2(A,B,C,D,E):-le(D,E),cut,arg(D,A,F),arg(D,B,G),copy2(F,G,C),exprEval(H,I),copy2(A,B,C,H,E),'denotes_+'(D,J,I),denotes_1(J).
map_vars(A,B,C,D):-filter_vars(A,B,E,F),map_terms(E,F,C,D).
map_terms(A,B,C,D):-memberv2(C,A,D,B),cut.
map_terms(A,B,C,C):-var(C),cut,true.
map_terms(A,B,C,D):-nonvar(C),cut,functor(C,E,F),functor(D,E,F),map_terms_seq(G,F,A,B,C,D),denotes_1(G).
map_terms_seq(A,B,C,D,E,F):-gt(A,B),cut.
map_terms_seq(A,B,C,D,E,F):-le(A,B),cut,arg(A,E,G),arg(A,F,H),map_terms(C,D,G,H),exprEval(I,J),map_terms_seq(I,B,C,D,E,F),'denotes_+'(A,K,J),denotes_1(K).
map_terms(A,B,C,D,E,F):-memberv2(C,A,D,B),cut,constC(E,C,F).
map_terms(A,B,C,C,D,D):-var(C),cut,true.
map_terms(A,B,C,D,E,F):-nonvar(C),cut,functor(C,G,H),functor(D,G,H),map_terms_seq(I,H,A,B,C,D,E,F),denotes_1(I).
map_terms_seq(A,B,C,D,E,F,G,G):-gt(A,B),cut.
map_terms_seq(A,B,C,D,E,F,G,H):-le(A,B),cut,arg(A,E,I),arg(A,F,J),map_terms(C,D,I,J,G,K),exprEval(L,M),map_terms_seq(L,B,C,D,E,F,K,H),'denotes_+'(A,N,M),denotes_1(N).
map_instr_list(A,B,C,D,D):-'denotes_[]'(A).
map_instr_list(A,B,C,D,E):-map_terms(B,C,F,G,H,I),pragma_tag_list(H,D,J),constC(J,G,K),map_instr_list(L,B,C,K,E),'denotes_[]'(I),'denotes_.'(F,L,A).
pragma_tag_list(A,B,B):-'denotes_[]'(A).
pragma_tag_list(A,B,C):-pragma_tag(D,E,B,F),pragma_tag_list(G,F,C),denotes_var(E),'denotes_.'(D,G,A).
pragma_tag(A,B,C,D):-tag(B,E),'denotes_.'(F,D,C),denotes_pragma(G,F),denotes_tag(A,E,G).
c_append(A,B,B):-denotes_true(A).
c_append(A,B,C):-c_append(D,B,E),'denotes_,'(F,E,C),'denotes_,'(F,D,A).
d_append(A,B,B):-denotes_fail(A).
d_append(A,B,C):-d_append(D,B,E),'denotes_;'(F,E,C),'denotes_;'(F,D,A).
insert(A,B,C):-difflist(A,B,C).
insertlist(A,B,C):-difflist(A,B,C).
insert(A,B,A,B):-true.
add(A,B,C):-exprEval(C,D),'denotes_+'(B,A,D).
sub(A,B,C):-exprEval(C,D),'denotes_-'(B,A,D).
delete(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
delete(A,B,C):-cut,delete(D,B,C),'denotes_.'(B,D,A).
delete(A,B,C):-delete(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
reverse(A,B):-reverse(A,C,B),'denotes_[]'(C).
reverse(A,B,C):-reverse(D,E,C),'denotes_.'(F,B,E),'denotes_.'(F,D,A).
reverse(A,B,B):-'denotes_[]'(A).
last(A,B):-'denotes_.'(B,C,A),'denotes_[]'(C).
last(A,B):-last(C,B),'denotes_.'(D,C,A).
same(A):-'denotes_[]'(A).
same(A):-same(B,C),'denotes_.'(C,B,A).
same(A,B):-'denotes_[]'(A).
same(A,B):-same(C,B),'denotes_.'(B,C,A).
range_list(A,B,C):-gt(A,B),cut,'denotes_[]'(C).
range_list(A,A,B):-cut,'denotes_.'(A,C,B),'denotes_[]'(C).
range_list(A,B,C):-lt(A,B),cut,exprEval(D,E),range_list(D,B,F),'denotes_+'(A,G,E),denotes_1(G),'denotes_.'(A,F,C).
downrange_list(A,B,C):-lt(A,B),cut,'denotes_[]'(C).
downrange_list(A,A,B):-cut,'denotes_.'(A,C,B),'denotes_[]'(C).
downrange_list(A,B,C):-gt(A,B),cut,exprEval(D,E),downrange_list(D,B,F),'denotes_-'(A,G,E),denotes_1(G),'denotes_.'(A,F,C).
ran_keys(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
ran_keys(A,B,C):-random_step(B,D),ran_keys(E,D,F),'denotes_.'(G,F,C),'denotes_-'(B,H,G),'denotes_.'(H,E,A).
key_to_list(A,B):-'denotes_[]'(B),'denotes_[]'(A).
key_to_list(A,B):-key_to_list(C,D),'denotes_.'(E,D,B),'denotes_.'(F,C,A),'denotes_-'(G,E,F).
random_step(A,B):-exprEval(B,C),denotes_mod(D,E,C),denotes_44449(E),'denotes_+'(F,G,D),denotes_2116(G),'denotes_*'(A,H,F),denotes_1237(H).
member_conj(A,B):-member_conj(A,C),cut,'denotes_,'(C,D,B).
member_conj(A,B):-member_conj(A,C),cut,'denotes_,'(D,C,B).
member_conj(A,A):-true.
memberv_conj(A,B):-memberv_conj(A,C),cut,'denotes_,'(C,D,B).
memberv_conj(A,B):-memberv_conj(A,C),cut,'denotes_,'(D,C,B).
memberv_conj(A,B):-neg(C),ident(A,B),cut,'denotes_='(B,D,C),'denotes_,'(E,F,D).
reverse_conj(A,B):-reverse_conj(A,C,B),denotes_true(C).
reverse_conj(A,B,C):-reverse_conj(D,E,C),'denotes_,'(F,B,E),'denotes_,'(F,D,A).
reverse_conj(A,B,B):-denotes_true(A).
append_conj(A,B,B):-denotes_true(A).
append_conj(A,B,C):-append_conj(D,B,E),'denotes_,'(F,E,C),'denotes_,'(F,D,A).
append_conj(A,B,C,D):-append_conj(B,C,D),denotes_true(A).
append_conj(A,B,C,D):-append_conj(E,B,C,F),'denotes_,'(G,F,D),'denotes_,'(G,E,A).
append_conj(A,B,C,D,E):-append_conj(B,C,D,E),denotes_true(A).
append_conj(A,B,C,D,E):-append_conj(F,B,C,D,G),'denotes_,'(H,G,E),'denotes_,'(H,F,A).
last_conj(A,B):-all_true(C),cut,'denotes_,'(B,C,A).
last_conj(A,B):-last_conj(C,B),'denotes_,'(D,C,A).
all_true(A):-denotes_true(A).
all_true(A):-all_true(B),all_true(C),'denotes_,'(B,C,A).
intersectv_conj(A,B,C):-intersectv_conj(A,B,C,D),denotes_true(D).
intersectv_conj(A,B,C,D):-cut,intersectv_conj(E,B,C,F),intersectv_conj(G,B,F,D),'denotes_,'(E,G,A).
intersectv_conj(A,B,C,D):-neg(E),memberv_conj(A,B),cut,co(A,C,D),'denotes_='(A,F,E),'denotes_,'(G,H,F).
intersectv_conj(A,B,C,C):-neg(D),cut,'denotes_='(A,E,D),'denotes_,'(F,G,E).
co(A,B,C):-'denotes_,'(A,C,B).
unionv_conj(A,B,C):-memberv_conj(D,A),cut,denotes_fail(D),denotes_fail(C).
unionv_conj(A,B,C):-memberv_conj(D,B),cut,denotes_fail(D),denotes_fail(C).
unionv_conj(A,B,C):-unionv_conj(A,B,C,B).
unionv_conj(A,B,C,D):-cut,unionv_conj(E,B,C,F),unionv_conj(G,B,F,D),'denotes_,'(E,G,A).
unionv_conj(A,B,C,C):-cut,denotes_true(A).
unionv_conj(A,B,C,C):-succeeds(A),cut.
unionv_conj(A,B,C,D):-neg(E),neg(F),neg(G),cut,conj_if_nomember(A,B,C,D),'denotes_='(A,H,G),denotes_true(H),'denotes_='(A,I,F),'denotes_,'(J,K,I),denotes_succeeds(A,E).
succeeds(A):-denotes_true(A).
succeeds(A):-succeeds(B),succeeds(C),'denotes_,'(B,C,A).
succeeds(A):-succeeds(B),'denotes_;'(B,C,A).
succeeds(A):-succeeds(B),'denotes_;'(C,B,A).
succeeds(A):-nonvar(B),nonvar(C),nonvar(D),neg(E),functor(B,C,D),denotes_errs(F,E),denotes_functor(B,C,D,F),denotes_functor(B,C,D,A).
succeeds(A):-nonvar(B),nonvar(C),nonvar(D),neg(E),functor(B,C,D),denotes_errs(F,E),denotes_functor(B,C,D,F),'denotes_$name_arity'(B,C,D,A).
succeeds(A):-nonvar(B),denotes_nonvar(B,A).
succeeds(A):-ground(B),denotes_ground(B,A).
succeeds(A):-atom(B),denotes_atom(B,A).
succeeds(A):-nil(B),denotes_nil(B,A).
succeeds(A):-integer(B),denotes_integer(B,A).
succeeds(A):-negative(B),denotes_negative(B,A).
succeeds(A):-nonnegative(B),denotes_nonnegative(B,A).
succeeds(A):-float(B),denotes_float(B,A).
succeeds(A):-number(B),denotes_number(B,A).
succeeds(A):-atomic(B),denotes_atomic(B,A).
succeeds(A):-list(B),denotes_list(B,A).
succeeds(A):-cons(B),denotes_cons(B,A).
succeeds(A):-structure(B),denotes_structure(B,A).
succeeds(A):-compound(B),denotes_compound(B,A).
succeeds(A):-nonvar(B),simple(B),denotes_simple(B,A).
succeeds(A):-encode_relop(A,B,C,D),test_relop(B,C,D),neg(E),denotes_errs(A,E).
conj_if_nomember(A,B,C,C):-memberv_conj(A,B),cut.
conj_if_nomember(A,B,C,D):-neg(E),cut,co(A,C,D),denotes_memberv_conj(A,B,E).
flat_conj(A,B,B):-cut,denotes_true(A).
flat_conj(A,B,C):-cut,flat_conj(D,B,E),flat_conj(F,E,C),'denotes_,'(D,F,A).
flat_conj(A,B,C):-co(A,B,C).
replace_start_conj(A,B,B):-denotes_true(A).
replace_start_conj(A,B,C):-replace_start_conj(D,E,F),'denotes_,'(G,F,C),'denotes_,'(H,E,B),'denotes_,'(G,D,A).
split_disj(A,B,C):-cut,'denotes_;'(B,C,A).
split_disj(A,A,B):-denotes_fail(B).
ground(A,B):-cut,denotes_0(A).
ground(A,B):-gt(A,C),cut,arg(A,B,D),ground(D),exprEval(E,F),ground(E,B),'denotes_-'(A,G,F),denotes_1(G),denotes_0(C).
compound(A):-nonvar(A),neg(B),denotes_atomic(A,B).
simple(A):-var(A),cut.
simple(A):-atomic(A),cut.
denumerable(A):-atom(A),cut.
denumerable(A):-integer(A),cut.
negative(A):-integer(A),lt(A,B),denotes_0(B).
positive(A):-integer(A),gt(A,B),denotes_0(B).
nonpositive(A):-integer(A),le(A,B),denotes_0(B).
full_list(A):-'denotes_[]'(A).
full_list(A):-full_list(B),'denotes_.'(C,B,A).
conj_p(A):-nonvar(A),(B;C),cut,'denotes_='(A,D,C),denotes_true(D),'denotes_='(A,E,B),'denotes_,'(F,G,E).
disj_p(A):-nonvar(A),(B;C),cut,'denotes_='(A,D,C),denotes_fail(D),'denotes_='(A,E,B),'denotes_;'(F,G,E).
strong_disj_p(A):-nonvar(B),'denotes_;'(C,D,B),'denotes_;'(C,D,A).
conj_p(A,B,C):-'denotes_,'(B,C,A).
disj_p(A,B,C):-'denotes_;'(B,C,A).
di(A,B,C):-'denotes_;'(A,C,B).
unify_p(A):-'denotes_='(B,C,A).
call_p(A):-neg(B),denotes_unify_p(A,B).
split_unify(A,B,C):-'denotes_='(B,C,A).
split_unify(A,B,C):-'denotes_='(C,B,A).
split_unify(A,B,A,B):-true.
split_unify(A,B,B,A):-true.
split_unify_v(A,B,C):-var(B),'denotes_='(B,C,A).
split_unify_v(A,B,C):-var(B),'denotes_='(C,B,A).
split_unify_v(A,B,A,B):-var(A).
split_unify_v(A,B,B,A):-var(B).
split_unify_v_nv(A,B,C):-var(B),nonvar(C),'denotes_='(B,C,A).
split_unify_v_nv(A,B,C):-var(B),nonvar(C),'denotes_='(C,B,A).
split_unify_v_nv(A,B,A,B):-var(A),nonvar(B).
split_unify_v_nv(A,B,B,A):-var(B),nonvar(A).
downrange(A,B,B):-true.
downrange(A,B,C):-lt(A,C),exprEval(D,E),downrange(A,B,D),'denotes_-'(C,F,E),denotes_1(F).
crange(A,A,A):-true.
crange(A,B,C):-lt(A,C),exprEval(D,E),crange(A,B,D),'denotes_//'(F,G,E),denotes_2(G),'denotes_+'(A,C,F).
crange(A,B,C):-lt(A,C),exprEval(D,E),crange(D,B,C),'denotes_+'(F,G,E),denotes_1(G),'denotes_//'(H,I,F),denotes_2(I),'denotes_+'(A,C,H).
gen_integer(A):-range(B,A,C),denotes_10000(C),denotes_1(B).
max(A,B,A):-termge(A,B),cut.
max(A,B,B):-termgt(B,A).
maximum(A,B,C):-max(A,B,C).
min(A,B,A):-termle(A,B),cut.
min(A,B,B):-termlt(B,A).
minimum(A,B,C):-min(A,B,C).
min_integer(A,B,A):-lt(A,B),cut.
min_integer(A,B,B):-ge(A,B),cut.
maxlist(A,B):-maxlist(C,D,B),cut,'denotes_.'(D,C,A).
maxlist(A,B,B):-'denotes_[]'(A).
maxlist(A,B,C):-max(D,B,E),maxlist(F,E,C),'denotes_.'(D,F,A).
minlist(A,B):-minlist(C,D,B),cut,'denotes_.'(D,C,A).
minlist(A,B,B):-'denotes_[]'(A).
minlist(A,B,C):-min(D,B,E),minlist(F,E,C),'denotes_.'(D,F,A).
shorter_than(A,B):-gt(B,C),denotes_0(C),'denotes_[]'(A).
shorter_than(A,B):-gt(B,C),exprEval(D,E),shorter_than(F,D),'denotes_-'(B,G,E),denotes_1(G),denotes_0(C),'denotes_.'(H,F,A).
longer_than(A,B):-le(B,C),denotes_0(C),'denotes_.'(D,E,A).
longer_than(A,B):-gt(B,C),exprEval(D,E),longer_than(F,D),'denotes_-'(B,G,E),denotes_1(G),denotes_0(C),'denotes_.'(H,F,A).
length_disj(A,B,B):-cut,denotes_fail(A).
length_disj(A,B,C):-cut,length_disj(D,B,E),length_disj(F,E,C),'denotes_;'(D,F,A).
length_disj(A,B,C):-neg(D),cut,add(E,B,C),denotes_1(E),denotes_disj_p(A,D).
length_conj(A,B):-length_conj(A,C,B),denotes_0(C).
length_conj(A,B,B):-cut,denotes_true(A).
length_conj(A,B,C):-cut,length_conj(D,B,E),length_conj(F,E,C),'denotes_,'(D,F,A).
length_conj(A,B,B):-cut_p(A),cut.
length_conj(A,B,C):-neg(D),cut,add(E,B,C),denotes_1(E),denotes_conj_p(A,D).
cut_p(A):-'denotes_$cut_deep'(B,A).
cut_p(A):-'denotes_$cut_shallow'(B,A).
length_test_user(A,B,C):-length_test(A,D,E,B),length_conj(D,C),denotes_0(E).
length_test(A,B,C,C):-cut,denotes_true(B),denotes_true(A).
length_test(A,B,C,D):-test(E),cut,add(F,C,G),length_test(H,B,G,D),denotes_1(F),'denotes_,'(E,H,A).
length_test(A,B,C,D):-test(A),cut,add(E,C,D),denotes_1(E),denotes_true(B).
length_test(A,A,B,B):-true.
test(A):-encode_relop(A,B,C,D),cut.
test(A):-encode_test(A,B,C,D),cut.
test(A):-encode_name_arity(A,B,C,D,E),cut.
or(A,B,C):-denotes_true(C),denotes_true(B),denotes_true(A).
or(A,B,C):-denotes_true(C),denotes_false(B),denotes_true(A).
or(A,B,C):-denotes_true(C),denotes_true(B),denotes_false(A).
or(A,B,C):-denotes_false(C),denotes_false(B),denotes_false(A).
or(A,B,C,D):-or(A,B,E),or(E,C,D).
and(A,B,C):-denotes_true(C),denotes_true(B),denotes_true(A).
and(A,B,C):-denotes_false(C),denotes_false(B),denotes_true(A).
and(A,B,C):-denotes_false(C),denotes_true(B),denotes_false(A).
and(A,B,C):-denotes_false(C),denotes_false(B),denotes_false(A).
and(A,B,C,D):-and(A,B,E),and(E,C,D).
write_code(A,B):-'denotes_[]'(A).
write_code(A,B):-write_code(C,D,B),'denotes_.'(C,D,A).
write_output(A):-'denotes_[]'(A).
write_output(A):-nl_if_procedure(B),tab_if_nonlbl(B),wq(B),wn(C),write_output(D),'denotes_.'(C),'denotes_.'(B,D,A).
write_code(A,B,C):-cut,exprEval(D,E),tab(C),w(F),w(G),wn(H),tab(C),tag(I,J),w(J),wn(K),write_code(L,D),tab(C),w(M),wn(N),write_code(O,D),tab(C),w(P),wn(Q),tab(C),wn(R),write_code(B,C),'denotes_}'(R),'denotes_else: '(P),'denotes_:'(N),'denotes_:'(K),denotes_var(I),'denotes_) {'(H),'denotes_switch('(F),'denotes_+'(C,S,E),denotes_4(S),denotes_switch(T,M,G,L,O,Q,A),denotes_unify(T).
write_code(A,B,C):-exprEval(D,E),tab(D),wq(F),wn(G),write_code(B,C),'denotes_:'(G),'denotes_-'(C,H,E),denotes_4(H),denotes_label(F,A).
write_code(A,B,C):-exprEval(D,E),tab(D),nl,wqn(F),nl,write_code(B,C),denotes_procedure(G,F),'denotes_-'(C,H,E),denotes_4(H),denotes_procedure(G,A).
write_code(A,B,C):-neg(D),neg(E),neg(F),tab(C),wqn(A),write_code(B,C),'denotes_='(A,G,F),denotes_switch(H,I,J,K,L,M,G),denotes_unify(H),'denotes_='(A,N,E),denotes_procedure(O,N),'denotes_='(A,P,D),denotes_label(Q,P).
tag(A,B):-tag_type_test(B,A,C,D).
tag(A,B):-tag_type_test(B,C,D,A).
wq(A):-writeq(A).
wqn(A):-writeq(A),nl.
nl_if_procedure(A):-cut,nl,denotes_procedure(B,A).
nl_if_procedure(A):-true.
tab_if_nonlbl(A):-cut,denotes_label(B,A).
tab_if_nonlbl(A):-cut,denotes_procedure(B,A).
tab_if_nonlbl(A):-neg(B),neg(C),cut,put(D),denotes_9(D),'denotes_='(A,E,C),denotes_procedure(F,E),'denotes_='(A,G,B),denotes_label(H,G).
xwrite_modes(A):-cut,'denotes_[]'(A).
xwrite_modes(A):-cons(A),cut,nl,write(B),nl,xwrite_clauses(A),nl,write(C),'denotes_% Source:'(C),'denotes_% Modes:'(B).
xwrite_modes(A):-neg(B),cut,xwrite_modes(C),'denotes_.'(A,D,C),'denotes_[]'(D),denotes_cons(A,B).
xwrite_source(A):-cut,'denotes_[]'(A).
xwrite_source(A):-cons(A),nl,xwrite_clauses(A).
xwrite_clauses(A):-'denotes_[]'(A).
xwrite_clauses(A):-write(B),write(C),write(D),nl,xwrite_clauses(E),'denotes_.'(D),'denotes_%    '(B),'denotes_.'(C,E,A).
make_msg(A,B):-inst_vars(A,C),make_list(C,B).
cm:-w(A),'denotes_% *** '(A).
msg_list(A,B):-cut,nl,'denotes_[]'(A).
msg_list(A,B):-msg_one(C,B),msg_list(D,B),'denotes_.'(C,D,A).
aesthetic(A):-make_msg(A,B),ae,msg_list(B,C),denotes_ae(C).
ae:-w(A),'denotes_% *** Aesthetic: '(A).
w:-w(A),'denotes_% *** Warning: '(A).
e:-w(A),'denotes_% *** Error: '(A).
comment(A,B):-true.
make_msg(A,B,C):-inst_vars(D,E),make_list(F,C),denotes_s(G,F,E),denotes_s(A,B,D).
aesthetic(A,B):-make_msg(A,B,C),ae,msg_list(C,D),denotes_ae(D).
warning(A,B):-make_msg(A,B,C),w,msg_list(C,D),denotes_w(D).
error(A,B):-make_msg(A,B,C),e,msg_list(C,D),denotes_e(D).
msg_one(A,B):-cut,put(C),denotes_9(C),denotes_tab(A).
msg_one(A,B):-cut,nl,cms,denotes_cm(B),denotes_nl(A).
msg_one(A,B):-cut,nl,aes,denotes_ae(B),denotes_nl(A).
msg_one(A,B):-cut,nl,ws,denotes_w(B),denotes_nl(A).
msg_one(A,B):-cut,nl,es,denotes_e(B),denotes_nl(A).
msg_one(A,B):-cut,w(A).
cms:-w(A),'denotes_% *** '(A).
aes:-w(A),'denotes_% ***            '(A).
ws:-w(A),'denotes_% ***          '(A).
es:-w(A),'denotes_% ***        '(A).
f:-wn(A),'denotes_ ***'(A).
wd(A,B,B):-wd(A).
wd(A):-fail,cut,w(A).
wd(A):-true.
write_debug(A,B,B):-write_debug(A).
write_debug(A):-wd(A),nl_debug.
nl_debug:-(A;B),denotes_true(B),'denotes_->'(C,D,A),denotes_nl(D),denotes_fail(C).
write_list(A):-'denotes_[]'(A).
write_list(A):-w(B),nl,write_list(C),'denotes_.'(B,C,A).
not_used(A):-w(A),wn(B),'denotes_- not used!'(B).
not_used(A,B,B):-not_used(A).
get_cputime(A):-the_system(B),cut,denotes_cprolog(B),denotes_0(A).
get_cputime(A):-the_system(B),cut,denotes_quintus(B),denotes_0(A).
get_cputime(A):-the_system(B),cut,denotes_aquarius(B),denotes_0(A).
get_cputime(A):-denotes_0(A).
write_num(A):-cut,denotes_none(A).
write_num(A):-w(B),w(A),'denotes_-'(B).
ttyflush_quintus:-the_system(A),cut,ttyflush,denotes_quintus(A).
ttyflush_quintus:-true.
stats(A,B,C,C):-stats(A,B).
survive(A):-info(A,B,C,D,E),cut,denotes_y(B).
survive(A):-info(B,C,D,E,F),cut,denotes_y(C),denotes_not(B,A).
survive_form(A,B):-cut,implies(B,C),'denotes_;'(D,E,C),denotes_simple(F,E),denotes_simple(G,D),'denotes_=='(G,F,A).
survive_form(A,B):-cut,implies(B,C),'denotes_;'(D,E,C),denotes_simple(F,E),denotes_simple(G,D),'denotes_\\=='(G,F,A).
survive_form(A,B):-survive(A).
anyregs(A,B):-anyregs(A),cut,denotes_y(B).
anyregs(A,B):-neg(C),cut,denotes_anyregs(A,C),denotes_n(B).
anyregs(A):-info(A,B,C,D,E),cut,denotes_y(C).
builtin(A,B):-builtin(A),cut,denotes_y(B).
builtin(A,B):-neg(C),cut,denotes_builtin(A,C),denotes_n(B).
expanded(A,B):-expanded(A),cut,denotes_y(B).
expanded(A,B):-neg(C),cut,denotes_expanded(A,C),denotes_n(B).
expanded(A):-info(A,B,C,D,E),cut,denotes_y(E).
fixregs(A):-neg(B),denotes_anyregs(A,B).
fixregs(A):-neg(B),denotes_builtin(A,B).
info(A,B,C,D,E):-info(A,B,C,D,E,F,G,H).
compmodes(A,B):-info(A,C,D,E,F,G,H,B),cut.
info(A,B,C,D,E,F,G,H):-mode_option(A,G,I,H,B),cut,univ(A,J),'denotes_.'(K,F,J),denotes_n(E),denotes_n(D),denotes_n(C).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_uninit_reg(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$cut_load'(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$cut_deep'(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$cut_shallow'(I,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,G,H),'denotes_.'(J,K,F),'denotes_[]'(K),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$if2f'(I,J,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,G,H),'denotes_.'(J,K,F),'denotes_[]'(K),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$if2i'(I,J,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$add'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$sub'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$mul'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$fdiv'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$idiv'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_mf(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$mod'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_m(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$and'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_m(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$or'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_m(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$xor'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_m(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$sll'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_m(I,J,K,G,H),'denotes_.'(K,L,F),'denotes_[]'(L),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$sra'(I,J,K,A).
info(A,B,C,D,E,F,G,H):-ar_m(I,J,G,H),'denotes_.'(J,K,F),'denotes_[]'(K),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$not'(I,J,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_@<'(J,L,H),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_@<'(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_@>'(J,L,H),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_@>'(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_@=<'(J,L,H),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_@=<'(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_@>='(J,L,H),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_@>='(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_=='(J,L,H),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_=='(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_\\=='(J,L,H),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_\\=='(J,L,A).
info(A,B,C,D,E,F,G,H):-rel_mf(I,J,G,K),'denotes_,'(K,L,H),'denotes_<'(I,J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_<'(I,J,A).
info(A,B,C,D,E,F,G,H):-rel_mf(I,J,G,K),'denotes_,'(K,L,H),'denotes_>'(I,J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_>'(I,J,A).
info(A,B,C,D,E,F,G,H):-rel_mf(I,J,G,K),'denotes_,'(K,L,H),'denotes_=<'(I,J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_=<'(I,J,A).
info(A,B,C,D,E,F,G,H):-rel_mf(I,J,G,K),'denotes_,'(K,L,H),'denotes_>='(I,J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_>='(I,J,A).
info(A,B,C,D,E,F,G,H):-rel_mf(I,J,G,K),'denotes_,'(K,L,H),'denotes_=\\='(I,J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_=\\='(I,J,A).
info(A,B,C,D,E,F,G,H):-rel_mf(I,J,G,K),'denotes_,'(K,L,H),'denotes_=:='(I,J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_=:='(I,J,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_=='(J,L,H),'denotes_.'(J,N,F),'denotes_.'(L,O,N),'denotes_[]'(O),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_='(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_=='(J,L,H),'denotes_.'(J,N,F),'denotes_.'(L,O,N),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$unify'(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_\\='(J,L,H),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_\\='(J,L,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),'denotes_$test'(J,M,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$test'(J,M,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_.'(M,N,L),'denotes_[]'(N),'denotes_,'(O,J,H),'denotes_=='(K,M,O),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$equal'(K,M,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_var(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_var(K,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),denotes_nonvar(J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_nonvar(J,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_atom(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_atom(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),'denotes_$atom_nonnil'(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$atom_nonnil'(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_atomic(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_atomic(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_denumerable(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_denumerable(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_nil(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_nil(K,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),denotes_cons(J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_cons(J,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),denotes_list(J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_list(J,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),denotes_structure(J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_structure(J,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),denotes_compound(J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_compound(J,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_simple(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_simple(K,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),denotes_ground(J,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_ground(J,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_number(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_number(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_float(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_float(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_integer(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_integer(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_negative(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_negative(K,A).
info(A,B,C,D,E,F,G,H):-rd_m(I,G,J),'denotes_.'(K,L,I),'denotes_[]'(L),'denotes_,'(M,J,H),denotes_nonnegative(K,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_nonnegative(K,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_,'(P,Q,H),'denotes_,'(R,S,Q),denotes_integer(N,S),denotes_atomic(L,R),'denotes_$name_arity'(J,L,N,P),'denotes_.'(J,T,F),'denotes_.'(L,U,T),'denotes_.'(N,V,U),'denotes_[]'(V),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_functor(J,L,N,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_,'(L,G,H),'denotes_$name_arity'(J,M,N,L),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_$name_arity'(J,M,N,A).
info(A,B,C,D,E,F,G,H):-d_m(I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_,'(P,Q,H),denotes_nonvar(L,Q),denotes_integer(J,P),'denotes_.'(J,R,F),'denotes_.'(L,S,R),'denotes_.'(N,T,S),'denotes_[]'(T),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_arg(J,L,N,A).
info(A,B,C,D,E,F,G,H):-denotes_integer(I,H),'denotes_,'(J,K,G),denotes_deref(L,K),denotes_deref(I,J),'denotes_.'(I,M,F),'denotes_[]'(M),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_is(I,L,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_cons(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_=..'(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),'denotes_!'(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_true(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_otherwise(A).
info(A,B,C,D,E,F,G,H):-denotes_fail(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_fail(A).
info(A,B,C,D,E,F,G,H):-denotes_fail(H),denotes_true(G),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_y(C),denotes_y(B),denotes_false(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),'denotes_,'(I,J,G),denotes_deref(K,J),denotes_deref(L,I),'denotes_.'(K,M,F),'denotes_[]'(M),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_copy_term(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_nonvar(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_call(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_integer(K,J),denotes_list(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_length(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_atom(I,H),'denotes_,'(J,K,G),'denotes_,'(L,M,K),denotes_deref(N,M),denotes_deref(O,L),denotes_deref(I,J),'denotes_.'(I,P,F),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_compare(I,O,N,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),'denotes_,'(I,J,G),denotes_deref(K,J),denotes_deref(L,I),'denotes_.'(L,M,F),'denotes_.'(K,N,M),'denotes_[]'(N),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_expand_term(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_list(K,J),denotes_list(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(K,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_sort(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_list(K,J),denotes_list(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(K,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_keysort(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_list(K,J),denotes_list(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(K,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_msort(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_list(K,J),denotes_atomic(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_name(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_list(K,J),denotes_atom(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_atom_chars(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_list(K,J),denotes_number(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_number_chars(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_integer(K,J),denotes_integer(L,I),'denotes_,'(M,N,G),'denotes_,'(O,P,N),denotes_deref(K,P),denotes_deref(L,O),denotes_deref(Q,M),'denotes_.'(Q,R,F),'denotes_.'(K,S,R),'denotes_[]'(S),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_numbervars(Q,L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_repeat(A).
info(A,B,C,D,E,F,G,H):-'denotes_;'(I,J,H),denotes_list(K,J),denotes_var(K,I),denotes_deref(K,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_is_list(K,A).
info(A,B,C,D,E,F,G,H):-denotes_list(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_is_proper_list(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_;'(I,J,H),denotes_cons(K,J),denotes_var(K,I),denotes_deref(K,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_is_partial_list(K,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_abolish(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_integer(K,J),denotes_atomic(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_abolish(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_nonvar(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_assert(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_ground(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(K,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_assert(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_nonvar(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_asserta(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_ground(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(K,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_asserta(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_nonvar(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_assertz(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_ground(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(K,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_assertz(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_nonvar(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_retract(I,A).
info(A,B,C,D,E,F,G,H):-denotes_nonvar(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_retractall(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),'denotes_,'(I,J,G),denotes_deref(K,J),denotes_deref(L,I),'denotes_.'(L,M,F),'denotes_.'(K,N,M),'denotes_[]'(N),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_^'(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_cons(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),'denotes_,'(O,P,N),denotes_deref(K,P),denotes_deref(L,O),denotes_deref(Q,M),'denotes_.'(K,R,F),'denotes_[]'(R),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_bagof(Q,L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_cons(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),'denotes_,'(O,P,N),denotes_deref(K,P),denotes_deref(L,O),denotes_deref(Q,M),'denotes_.'(K,R,F),'denotes_[]'(R),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_setof(Q,L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_cons(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),'denotes_,'(O,P,N),denotes_deref(K,P),denotes_deref(L,O),denotes_deref(Q,M),'denotes_.'(K,R,F),'denotes_[]'(R),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_findall(Q,L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_nonvar(K,J),denotes_nonvar(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_clause(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),'denotes_,'(K,L,J),denotes_ground(M,L),denotes_nonvar(N,K),denotes_nonvar(O,I),'denotes_,'(P,Q,G),'denotes_,'(R,S,Q),denotes_deref(M,S),denotes_deref(N,R),denotes_deref(O,P),'denotes_.'(O,T,F),'denotes_.'(N,U,T),'denotes_.'(M,V,U),'denotes_[]'(V),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_clause(O,N,M,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_abort(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_break(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_halt(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_trace(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),'denotes_,'(I,J,G),'denotes_,'(K,L,J),'denotes_,'(M,N,L),denotes_deref(O,N),denotes_deref(P,M),denotes_deref(Q,K),denotes_deref(R,I),'denotes_.'(R,S,F),'denotes_.'(Q,T,S),'denotes_.'(P,U,T),'denotes_.'(O,V,U),'denotes_[]'(V),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_error_data(R,Q,P,O,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_file_error_condition(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_type_failure_condition(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_unknown_predicate_condition(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_atom(K,J),denotes_atom(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_unknown(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_nodebug(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_debug(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_leash(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_debugging(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_nofileerrors(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_fileerrors(A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),'denotes_,'(I,J,G),'denotes_,'(K,L,J),denotes_deref(M,L),denotes_deref(N,K),denotes_deref(O,I),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_op(O,N,M,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_atom(K,J),denotes_atom(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_[]'(O),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_prompt(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_listing(A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_listing(I,A).
info(A,B,C,D,E,F,G,H):-denotes_atom(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_current_atom(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_nonvar(K,J),denotes_atomic(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_current_functor(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_nonvar(K,J),denotes_atomic(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_current_predicate(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),'denotes_,'(K,L,J),denotes_atom(M,L),denotes_atom(N,K),denotes_integer(O,I),'denotes_,'(P,Q,G),'denotes_,'(R,S,Q),denotes_deref(M,S),denotes_deref(N,R),denotes_deref(O,P),'denotes_.'(O,T,F),'denotes_.'(N,U,T),'denotes_.'(M,V,U),'denotes_[]'(V),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_current_op(O,N,M,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_nonvar(K,J),denotes_atomic(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_current_key(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),'denotes_,'(I,J,G),denotes_deref(K,J),denotes_deref(L,I),'denotes_.'(L,M,F),'denotes_.'(K,N,M),'denotes_[]'(N),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_predicate_property(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),'denotes_,'(K,L,J),denotes_ground(M,L),denotes_ground(N,K),denotes_atom(O,I),'denotes_,'(P,Q,G),'denotes_,'(R,S,Q),denotes_deref(M,S),denotes_deref(N,R),denotes_deref(O,P),'denotes_.'(N,T,F),'denotes_[]'(T),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_prolog_flag(O,N,M,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_ground(K,J),denotes_atom(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_prolog_flag(L,K,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_ground(K,J),denotes_ground(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_[]'(F),denotes_y(E),denotes_y(D),denotes_n(C),denotes_n(B),'denotes_.'(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_consult(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_ensure_loaded(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_close(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_exists(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_reconsult(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_ground(K,J),denotes_ground(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_rename(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_save(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_see(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_seeing(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_seen(A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_tell(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_telling(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_told(A).
info(A,B,C,D,E,F,G,H):-denotes_integer(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_get(I,A).
info(A,B,C,D,E,F,G,H):-denotes_integer(I,H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_get0(I,A).
info(A,B,C,D,E,F,G,H):-denotes_integer(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_skip(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_.'(I,J,F),'denotes_[]'(J),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_read(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_true(G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_nl(A).
info(A,B,C,D,E,F,G,H):-denotes_integer(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_tab(I,A).
info(A,B,C,D,E,F,G,H):-denotes_integer(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_put(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_print(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_write(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_writeq(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_write_canonical(I,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_display(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),'denotes_,'(J,K,G),denotes_deref(L,K),denotes_deref(I,J),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_format(I,L,A).
info(A,B,C,D,E,F,G,H):-denotes_true(H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_portray_clause(I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),'denotes_,'(J,K,G),'denotes_,'(L,M,K),denotes_deref(I,M),denotes_deref(N,L),denotes_deref(O,J),'denotes_.'(N,P,F),'denotes_.'(I,Q,P),'denotes_[]'(Q),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_recorda(O,N,I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),'denotes_,'(J,K,G),'denotes_,'(L,M,K),denotes_deref(I,M),denotes_deref(N,L),denotes_deref(O,J),'denotes_.'(N,P,F),'denotes_.'(I,Q,P),'denotes_[]'(Q),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_recordz(O,N,I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),'denotes_,'(J,K,G),'denotes_,'(L,M,K),denotes_deref(I,M),denotes_deref(N,L),denotes_deref(O,J),'denotes_.'(O,P,F),'denotes_.'(N,Q,P),'denotes_.'(I,R,Q),'denotes_[]'(R),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_recorded(O,N,I,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),denotes_deref(I,G),'denotes_[]'(F),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_erase(I,A).
info(A,B,C,D,E,F,G,H):-'denotes_,'(I,J,H),denotes_nonvar(K,J),denotes_atomic(L,I),'denotes_,'(M,N,G),denotes_deref(K,N),denotes_deref(L,M),'denotes_.'(L,O,F),'denotes_.'(K,P,O),'denotes_[]'(P),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_current_key(L,K,A).
info(A,B,C,D,E,F,G,H):-denotes_ground(I,H),'denotes_,'(J,K,G),denotes_deref(L,K),denotes_deref(I,J),'denotes_.'(L,M,F),'denotes_[]'(M),denotes_n(E),denotes_y(D),denotes_n(C),denotes_n(B),denotes_instance(I,L,A).
bindset(A,B):-bindbag(A,C),sort(C,B).
bindbag(A,B):-info(A,C,D,E,F,G,H,I),cut,varbag(G,B).
bindbag(A,B):-varbag(A,B),cut.
binds(A):-bindbag(A,B),cons(B).
info(A):-info(A,B,C,D,E).
before(A,B):-mode_option(A,C,D,E,F),cut,logical_simplify(D,B).
before(A,B):-neg(C),cut,denotes_mode_option(A,D,E,F,G,C),denotes_true(B).
ar_mf(A,B,C,D):-'denotes_,'(E,F,D),'denotes_,'(G,H,F),'denotes_,'(I,J,H),denotes_rderef(B,J),denotes_rderef(A,I),denotes_number(B,G),denotes_number(A,E),'denotes_,'(K,L,C),denotes_uninit_reg(B,L),denotes_deref(A,K).
ar_mf(A,B,C,D,E):-'denotes_,'(F,G,E),'denotes_,'(H,I,G),'denotes_,'(J,K,I),'denotes_,'(L,M,K),'denotes_,'(N,O,M),denotes_rderef(C,O),denotes_rderef(B,N),denotes_rderef(A,L),denotes_number(C,J),denotes_number(B,H),denotes_number(A,F),'denotes_,'(P,Q,D),'denotes_,'(R,S,Q),denotes_uninit_reg(C,S),denotes_deref(B,R),denotes_deref(A,P).
ar_m(A,B,C,D,E):-'denotes_,'(F,G,E),'denotes_,'(H,I,G),'denotes_,'(J,K,I),'denotes_,'(L,M,K),'denotes_,'(N,O,M),denotes_rderef(C,O),denotes_rderef(B,N),denotes_rderef(A,L),denotes_integer(C,J),denotes_integer(B,H),denotes_integer(A,F),'denotes_,'(P,Q,D),'denotes_,'(R,S,Q),denotes_uninit_reg(C,S),denotes_deref(B,R),denotes_deref(A,P).
ar_m(A,B,C,D):-'denotes_,'(E,F,D),'denotes_,'(G,H,F),'denotes_,'(I,J,H),denotes_rderef(B,J),denotes_rderef(A,I),denotes_integer(B,G),denotes_integer(A,E),'denotes_,'(K,L,C),denotes_uninit_reg(B,L),denotes_deref(A,K).
d_m(A,B):-denotes_deref(C,B),'denotes_.'(C,D,A),'denotes_[]'(D).
d_m(A,B):-d_m(C,D),'denotes_,'(E,D,B),denotes_deref(F,E),'denotes_.'(F,C,A).
rel_mf(A,B,C,D):-'denotes_,'(E,F,D),'denotes_,'(G,H,F),'denotes_,'(I,J,H),denotes_rderef(B,J),denotes_rderef(A,I),denotes_number(B,G),denotes_number(A,E),'denotes_,'(K,L,C),denotes_deref(B,L),denotes_deref(A,K).
rd_m(A,B,C):-denotes_rderef(D,C),denotes_deref(D,B),'denotes_.'(D,E,A),'denotes_[]'(E).
rd_m(A,B,C):-rd_m(D,E,F),'denotes_,'(G,F,C),denotes_rderef(H,G),'denotes_,'(I,E,B),denotes_deref(H,I),'denotes_.'(H,D,A).
ar_ff(A,B,C,D,E):-'denotes_,'(F,G,E),'denotes_,'(H,I,G),'denotes_,'(J,K,I),'denotes_,'(L,M,K),'denotes_,'(N,O,M),denotes_rderef(C,O),denotes_rderef(B,N),denotes_rderef(A,L),denotes_float(C,J),denotes_float(B,H),denotes_float(A,F),'denotes_,'(P,Q,D),'denotes_,'(R,S,Q),denotes_uninit_reg(C,S),denotes_deref(B,R),denotes_deref(A,P).
rel_m(A,B,C,D):-'denotes_,'(E,F,D),'denotes_,'(G,H,F),'denotes_,'(I,J,H),denotes_rderef(B,J),denotes_rderef(A,I),denotes_integer(B,G),denotes_integer(A,E),'denotes_,'(K,L,C),denotes_deref(B,L),denotes_deref(A,K).
control(A):-'denotes_,'(B,C,A).
control(A):-'denotes_;'(B,C,A).
control(A):-'denotes_->'(B,C,A).
control(A):-'denotes_\\+'(B,A).
control(A):-denotes_not(B,A).
branch(A):-branch(A,B,C).
branch(A,B,B):-denotes_fail(A).
branch(A,B,B):-denotes_return(A).
branch(A,B,C):-constC(B,D,C),denotes_jump(D,A).
branch(A,B,C):-constC(B,D,C),denotes_jump(E,F,G,D,A).
branch(A,B,C):-constC(B,D,C),denotes_jump_nt(E,F,G,D,A).
branch(A,B,C):-constC(B,D,C),denotes_call(D,A).
branch(A,B,C):-constC(B,D,C),denotes_test(E,F,G,D,A).
branch(A,B,C):-constC(B,D,C),denotes_equal(E,F,D,A).
branch(A,B,C):-constC(B,D,C),denotes_unify(E,F,G,H,D,A).
branch(A,B,C):-constC(B,D,C),denotes_unify_atomic(E,F,D,A).
branch(A,B,C):-constC(B,D,C),denotes_choice(E,F,D,A).
branch(A,B,C):-constC(B,D,C),denotes_hash(E,F,G,D,A).
branch(A,B,C):-constC(B,D,C),denotes_pair(E,D,A).
branch(A,B,C):-constC(B,D,E),constC(E,F,G),constC(G,H,C),denotes_switch(I,J,D,F,H,A).
branch(A,B,C):-constC(B,D,C),denotes_switch(E,F,G,H,I,D,A),denotes_unify(E).
map_branch(A,B,C,D):-denotes_jump(D,C),denotes_jump(B,A).
map_branch(A,B,C,D):-denotes_jump(E,F,G,D,C),denotes_jump(E,F,G,B,A).
map_branch(A,B,C,D):-denotes_jump_nt(E,F,G,D,C),denotes_jump_nt(E,F,G,B,A).
map_branch(A,B,C,D):-denotes_call(D,C),denotes_call(B,A).
map_branch(A,B,C,D):-denotes_test(E,F,G,D,C),denotes_test(E,F,G,B,A).
map_branch(A,B,C,D):-denotes_equal(E,F,D,C),denotes_equal(E,F,B,A).
map_branch(A,B,C,D):-denotes_unify(E,F,G,H,D,C),denotes_unify(E,F,G,H,B,A).
map_branch(A,B,C,D):-denotes_unify_atomic(E,F,D,C),denotes_unify_atomic(E,F,B,A).
map_branch(A,B,C,D):-denotes_choice(E,F,D,C),denotes_choice(E,F,B,A).
map_branch(A,B,C,D):-denotes_hash(E,F,G,D,C),denotes_hash(E,F,G,B,A).
map_branch(A,B,C,D):-denotes_pair(E,D,C),denotes_pair(E,B,A).
map_branch(A,B,C,D):-denotes_switch(E,F,D,G,H,C),denotes_switch(E,F,B,G,H,A).
map_branch(A,B,C,D):-denotes_switch(E,F,G,D,H,C),denotes_switch(E,F,G,B,H,A).
map_branch(A,B,C,D):-denotes_switch(E,F,G,H,D,C),denotes_switch(E,F,G,H,B,A).
pure_branch(A):-pure_branch(A,B,C).
pure_branch(A,B,C):-constC(B,D,C),denotes_jump(D,A).
pure_branch(A,B,C):-constC(B,D,C),denotes_jump(E,F,G,D,A).
pure_branch(A,B,C):-constC(B,D,C),denotes_jump_nt(E,F,G,D,A).
pure_branch(A,B,C):-constC(B,D,C),denotes_test(E,F,G,D,A).
pure_branch(A,B,C):-constC(B,D,C),denotes_equal(E,F,D,A).
pure_branch(A,B,C):-constC(B,D,C),denotes_unify(E,F,G,H,D,A).
pure_branch(A,B,C):-constC(B,D,E),constC(E,F,G),constC(G,H,C),denotes_switch(I,J,D,F,H,A).
pure_branch(A,B,C):-constC(B,D,C),denotes_switch(E,F,G,H,I,D,A),denotes_unify(E).
pure_branch(A,B,C):-constC(B,D,C),denotes_unify_atomic(E,F,D,A).
pure_branch(A,B):-pure_branch(A,B,C),'denotes_[]'(C).
distant_branch(A):-denotes_fail(A).
distant_branch(A):-denotes_return(A).
distant_branch(A):-denotes_jump(B,A).
distant_branch(A):-denotes_switch(B,C,D,E,F,A).
local_instr(A):-local_instr(A,B,C).
local_instr(A,B,B):-denotes_pragma(C,A).
local_instr(A,B,C):-constC(B,D,C),denotes_deref(D,A).
local_instr(A,B,C):-constC(B,D,C),denotes_deref(D,E,A).
local_instr(A,B,C):-constC(B,D,C),denotes_trail(D,A).
local_instr(A,B,C):-constC(B,D,C),denotes_move(D,E,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_push(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_adda(D,F,G,A).
local_instr(A,B,C):-constC(B,D,C),denotes_r(E,D),denotes_h(E),denotes_pad(F,A).
local_instr(A,B,B):-denotes_allocate(C,A).
local_instr(A,B,B):-denotes_deallocate(C,A).
local_instr(A,B,C):-constC(B,D,C),denotes_f2i(D,E,A).
local_instr(A,B,C):-constC(B,D,C),denotes_i2f(D,E,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_fadd(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_fsub(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_fmul(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_fdiv(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_add(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_sub(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_mul(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_div(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_and(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_or(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_xor(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_sll(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_sra(D,F,G,A).
local_instr(A,B,C):-constC(B,D,C),denotes_not(D,E,A).
local_instr(A,B,C):-constC(B,D,C),denotes_ord(D,E,A).
local_instr(A,B,C):-constC(B,D,C),denotes_val(E,D,F,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_add_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_sub_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_and_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_or_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_xor_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_sll_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_sra_nt(D,F,G,A).
local_instr(A,B,C):-constC(B,D,C),denotes_not_nt(D,E,A).
local_instr(A,B,C):-constC(B,D,C),denotes_trail_bda(D,A).
tag_type_test(A,B,C,D):-denotes_float(C,D),denotes_float(B),denotes_tflt(A).
tag_type_test(A,B,C,D):-denotes_integer(C,D),denotes_integer(B),denotes_tint(A).
tag_type_test(A,B,C,D):-fail,denotes_nonnegative(C,D),denotes_nonnegative(B),denotes_tpos(A).
tag_type_test(A,B,C,D):-fail,denotes_negative(C,D),denotes_negative(B),denotes_tneg(A).
tag_type_test(A,B,C,D):-denotes_atom(C,D),denotes_atom(B),denotes_tatm(A).
tag_type_test(A,B,C,D):-denotes_structure(C,D),denotes_structure(B),denotes_tstr(A).
tag_type_test(A,B,C,D):-denotes_cons(C,D),denotes_cons(B),denotes_tlst(A).
tag_type_test(A,B,C,D):-denotes_var(C,D),denotes_var(B),denotes_tvar(A).
term_tag(A,B):-float(A),denotes_tflt(B).
term_tag(A,B):-integer(A),denotes_tint(B).
term_tag(A,B):-nonnegative(A),fail,denotes_tpos(B).
term_tag(A,B):-negative(A),fail,denotes_tneg(B).
term_tag(A,B):-atom(A),denotes_tatm(B).
term_tag(A,B):-structure(A),denotes_tstr(B).
term_tag(A,B):-cons(A),denotes_tlst(B).
pointer_tag(A):-denotes_tstr(A).
pointer_tag(A):-denotes_tlst(A).
pointer_tag(A):-denotes_tvar(A).
tag_always(A,B):-denotes_tint(B),denotes_integer(A).
tag_always(A,B):-denotes_tpos(B),denotes_nonnegative(A).
tag_always(A,B):-denotes_tneg(B),denotes_negative(A).
tag_always(A,B):-denotes_tflt(B),denotes_float(A).
tag_always(A,B):-denotes_tint(B),denotes_integer(C,A).
tag_always(A,B):-denotes_tpos(B),denotes_nonnegative(C,A).
tag_always(A,B):-denotes_tneg(B),denotes_negative(C,A).
tag_always(A,B):-denotes_tflt(B),denotes_float(C,A).
tag(A,B,B):-tag(A).
tag(A):-tag_type_test(A,B,C,D),cut.
tag(A,B,C,C):-tag_type_test(B,A,D,E).
tag(A,B,C,C):-tag_type_test(B,D,E,A).
test_tag(A,B):-tag_type_test(B,C,D,A).
test_tag(A,B,C):-tag_type_test(C,D,B,A).
term_tag(A,B,C,C):-term_tag(A,B).
atomic_type(A):-tag_type_test(B,A,C,D),neg(E),cut,denotes_pointer_tag(B,E).
atomic_type(A):-denotes_number(A).
atomic_type(A):-denotes_atomic(A).
denumerable_type(A):-tag_type_test(B,A,C,D),neg(E),nonident(B,F),cut,denotes_float(F),denotes_pointer_tag(B,E).
tag_type(A):-tag_type_test(B,A,C,D).
type(A):-type_test(A,B,C).
type_test(A,B,C):-tag_type_test(D,A,B,C),cut.
type_test(A,B,C):-denotes_denumerable(B,C),denotes_denumerable(A).
type_test(A,B,C):-denotes_number(B,C),denotes_number(A).
type_test(A,B,C):-denotes_float(B,C),denotes_float(A).
type_test(A,B,C):-denotes_atomic(B,C),denotes_atomic(A).
type_test(A,B,C):-denotes_simple(B,C),denotes_simple(A).
type_test(A,B,C):-denotes_compound(B,C),denotes_compound(A).
term_type(A,B):-term_tag(A,C),tag_type_test(C,B,D,E).
term_test(A,B,C,D,D):-term_test(A,B,C).
term_test(A,B,C):-term_tag(A,D),tag_type_test(D,E,B,C).
arith_test(A):-arith_test(A,B).
arith_test(A,B):-arith_test(A,C,D,B).
arith_test(A,B,C,D):-denotes_eq(D),'denotes_=:='(B,C,A).
arith_test(A,B,C,D):-denotes_ne(D),'denotes_=\\='(B,C,A).
arith_test(A,B,C,D):-denotes_lts(D),'denotes_<'(B,C,A).
arith_test(A,B,C,D):-denotes_les(D),'denotes_=<'(B,C,A).
arith_test(A,B,C,D):-denotes_ges(D),'denotes_>='(B,C,A).
arith_test(A,B,C,D):-denotes_gts(D),'denotes_>'(B,C,A).
arith_test(A,B,C):-arith_test(A,B,C,D).
special_cond(A):-denotes_eq(A).
special_cond(A):-denotes_lts(A).
special_cond(A):-denotes_gts(A).
special_cond(A):-denotes_feq(A).
special_cond(A):-denotes_flts(A).
special_cond(A):-denotes_fgts(A).
cond(A):-cond(A,B).
cond(A,B):-denotes_ges(B),denotes_lts(A).
cond(A,B):-denotes_gts(B),denotes_les(A).
cond(A,B):-denotes_les(B),denotes_gts(A).
cond(A,B):-denotes_lts(B),denotes_ges(A).
cond(A,B):-denotes_ne(B),denotes_eq(A).
cond(A,B):-denotes_eq(B),denotes_ne(A).
cond(A,B):-denotes_fges(B),denotes_flts(A).
cond(A,B):-denotes_fgts(B),denotes_fles(A).
cond(A,B):-denotes_fles(B),denotes_fgts(A).
cond(A,B):-denotes_flts(B),denotes_fges(A).
cond(A,B):-denotes_fne(B),denotes_feq(A).
cond(A,B):-denotes_feq(B),denotes_fne(A).
cond_to_float(A,B):-denotes_flts(B),denotes_lts(A).
cond_to_float(A,B):-denotes_fles(B),denotes_les(A).
cond_to_float(A,B):-denotes_fgts(B),denotes_gts(A).
cond_to_float(A,B):-denotes_fges(B),denotes_ges(A).
cond_to_float(A,B):-denotes_feq(B),denotes_eq(A).
cond_to_float(A,B):-denotes_fne(B),denotes_ne(A).
mutex(A,B,C):-mutex(A,B,C,D),denotes_logical(D).
implies(A,B,C):-logical_simplify(D,E),mutex(A,E,C),cut,denotes_not(B,D).
prolog_implies(A,B):-simplify(C,D),prolog_mutex(A,D,E),cut,denotes_left(E),denotes_not(B,C).
simplify(A,B):-simp_upv(A,B,C),cut,denotes_prolog(C).
prolog_mutex(A,B,C):-mutex(A,B,C,D),denotes_prolog(D).
prolog_implies(A,B,C):-simplify(D,E),prolog_mutex(A,E,C),cut,denotes_not(B,D).
mutex(A,B,C,D):-mutex2(A,B,C,D),cut.
mutex2(A,B,C,D):-denotes_fail(A).
mutex2(A,B,C,D):-denotes_fail(B).
mutex2(A,B,C,D):-'denotes_$test'(E,F,A),denotes_0(F).
mutex2(A,B,C,D):-'denotes_$test'(E,F,B),denotes_0(F).
mutex2(A,B,C,D):-mutex2(E,B,C,D),mutex2(F,B,C,D),'denotes_,'(G,H,F),'denotes_\\+'(I,G),'denotes_,'(I,J,E),'denotes_;'(K,H,A),'denotes_->'(I,J,K).
mutex2(A,B,C,D):-mutex2(A,E,C,D),mutex2(A,F,C,D),'denotes_,'(G,H,F),'denotes_\\+'(I,G),'denotes_,'(I,J,E),'denotes_;'(K,H,B),'denotes_->'(I,J,K).
mutex2(A,B,C,D):-mutex2(E,B,C,D),'denotes_->'(E,F,A).
mutex2(A,B,C,D):-mutex2(E,B,C,D),'denotes_->'(F,E,A).
mutex2(A,B,C,D):-mutex2(A,E,C,D),'denotes_->'(E,F,B).
mutex2(A,B,C,D):-mutex2(A,E,C,D),'denotes_->'(F,E,B).
mutex2(A,B,C,D):-mutex2(E,B,C,D),'denotes_,'(E,F,A).
mutex2(A,B,C,D):-mutex2(E,B,C,D),'denotes_,'(F,E,A).
mutex2(A,B,C,D):-mutex2(A,E,C,D),'denotes_,'(E,F,B).
mutex2(A,B,C,D):-mutex2(A,E,C,D),'denotes_,'(F,E,B).
mutex2(A,B,C,D):-mutex2(E,B,C,D),mutex2(F,B,C,D),'denotes_;'(E,F,A).
mutex2(A,B,C,D):-mutex2(A,E,C,D),mutex2(A,F,C,D),'denotes_;'(E,F,B).
mutex2(A,B,C,D):-logical_simplify(A,E),logical_simplify(B,F),(G;H),'denotes_=='(F,I,H),denotes_not(E,I),'denotes_=='(E,J,G),denotes_not(F,J),denotes_logical(D).
mutex2(A,B,C,D):-simplify(A,E),simplify(B,F),(G;H),'denotes_=='(F,I,H),denotes_not(E,I),'denotes_=='(E,J,G),denotes_not(F,J),denotes_prolog(D).
mutex2(A,B,C,D):-mutex2(E,B,C,D),denotes_not(F,E),denotes_not(G,A),'denotes_;'(F,H,G).
mutex2(A,B,C,D):-mutex2(E,B,C,D),denotes_not(F,E),denotes_not(G,A),'denotes_;'(H,F,G).
mutex2(A,B,C,D):-mutex2(A,E,C,D),denotes_not(F,E),denotes_not(G,B),'denotes_;'(F,H,G).
mutex2(A,B,C,D):-mutex2(A,E,C,D),denotes_not(F,E),denotes_not(G,B),'denotes_;'(H,F,G).
mutex2(A,B,C,D):-mutex2(E,B,C,D),mutex2(F,B,C,D),denotes_not(G,F),denotes_not(H,E),denotes_not(I,A),'denotes_,'(H,G,I).
mutex2(A,B,C,D):-mutex2(A,E,C,D),mutex2(A,F,C,D),denotes_not(G,F),denotes_not(H,E),denotes_not(I,B),'denotes_,'(H,G,I).
mutex2(A,B,C,D):-mutex2(E,B,C,D),'denotes_\\+'(F,E),'denotes_\\+'(G,A),'denotes_;'(F,H,G).
mutex2(A,B,C,D):-mutex2(E,B,C,D),'denotes_\\+'(F,E),'denotes_\\+'(G,A),'denotes_;'(H,F,G).
mutex2(A,B,C,D):-mutex2(A,E,C,D),'denotes_\\+'(F,E),'denotes_\\+'(G,B),'denotes_;'(F,H,G).
mutex2(A,B,C,D):-mutex2(A,E,C,D),'denotes_\\+'(F,E),'denotes_\\+'(G,B),'denotes_;'(H,F,G).
mutex2(A,B,C,D):-mutex2(E,B,C,D),mutex2(F,B,C,D),'denotes_\\+'(G,F),'denotes_\\+'(H,E),'denotes_\\+'(I,A),'denotes_,'(H,G,I).
mutex2(A,B,C,D):-mutex2(A,E,C,D),mutex2(A,F,C,D),'denotes_\\+'(G,F),'denotes_\\+'(H,E),'denotes_\\+'(I,B),'denotes_,'(H,G,I).
mutex2(A,B,C,D):-u_match(A,E),denotes_not(E,B).
mutex2(A,B,C,D):-u_match(E,A),denotes_not(E,B).
mutex2(A,B,C,D):-u_implies(A,E),denotes_not(E,B).
mutex2(A,B,C,D):-u_match(E,B),denotes_not(E,A).
mutex2(A,B,C,D):-u_match(B,E),denotes_not(E,A).
mutex2(A,B,C,D):-u_implies(B,E),denotes_not(E,A).
mutex2(A,B,C,D):-encode_relop(A,E,F,G),encode_relop(B,H,I,J),check_relops(E,F,G,H,I,J).
mutex2(A,B,C,D):-encode_test(A,E,F,G,H),encode_test(B,I,J,K,L),ident(G,K),neg(M),denotes_can_overlap(C,E,F,I,J,H,L,M).
mutex2(A,B,C,D):-encode_name_arity(A,E,F,G,H),encode_name_arity(B,I,J,K,L),ident(E,I),check_name_arity(H,L,F,G,J,K).
u_match(A,B):-ident(C,D),denotes_trail_if_var(D,B),denotes_trail(C,A).
u_match(A,B):-ident(C,D),denotes_uninit(E,D,B),denotes_mem(E),denotes_uninit(C,A).
u_match(A,B):-ident(C,D),denotes_uninit(E,D,F,B),denotes_mem(E),denotes_uninit(C,A).
u_match(A,B):-ident(C,D),denotes_uninit(E,D,F,B),denotes_mem(E),denotes_uninit(G,C,A),denotes_mem(G).
u_match(A,B):-ident(C,D),denotes_uninit_reg(D,B),denotes_uninit(E,C,A),denotes_reg(E).
u_implies(A,B):-ident(C,D),denotes_unbound(D,B),denotes_var(C,A).
u_implies(A,B):-ident(C,D),denotes_deref(D,B),denotes_rderef(C,A).
u_implies(A,B):-an_uninit_mode(B,C,D),ident(E,D),denotes_uninit(F,E,A),denotes_either(F).
u_implies(A,B):-an_uninit_mode(A,C,D),u_implies_goal(B,E),ident(D,E).
encode_relop(A,B,C,D):-encode_relop(A,B,C,D,E).
check_relops(A,B,C,D,E,F):-ident(A,F),flip(E,G),get_relop(B,G,H),test_relop(C,H,D).
check_relops(A,B,C,D,E,F):-ident(A,D),get_relop(B,E,G),test_relop(C,G,F).
check_relops(A,B,C,D,E,F):-ident(C,F),flip(B,G),flip(E,H),get_relop(G,H,I),test_relop(A,I,D).
check_relops(A,B,C,D,E,F):-ident(C,D),flip(B,G),get_relop(G,E,H),test_relop(A,H,F).
encode_test(A,B,C,D,E):-exprEval(C,F),'denotes_/\\'(G,H,F),denotes_511(H),'denotes_\\'(B,G),denotes_n(E),'denotes_$test'(D,B,A).
encode_test(A,B,C,D,E):-atom(F),nonident(F,G),ident(H,I),denotes_0(I),'denotes_[]'(G),denotes_n(E),denotes_511(C),denotes_128(B),'denotes_$name_arity'(D,F,H,A).
encode_test(A,B,C,D,E):-ident(F,G),ident(H,I),denotes_0(I),'denotes_[]'(G),denotes_n(E),denotes_447(C),denotes_64(B),'denotes_$name_arity'(D,F,H,A).
encode_test(A,B,C,D,E):-nonnegative(F),ident(G,H),denotes_0(H),denotes_n(E),denotes_511(C),denotes_32(B),'denotes_$name_arity'(D,F,G,A).
encode_test(A,B,C,D,E):-negative(F),ident(G,H),denotes_0(H),denotes_n(E),denotes_511(C),denotes_16(B),'denotes_$name_arity'(D,F,G,A).
encode_test(A,B,C,D,E):-number(F),neg(G),ident(H,I),ge(F,J),denotes_0(J),denotes_0(I),denotes_integer(F,G),denotes_n(E),denotes_511(C),denotes_8(B),'denotes_$name_arity'(D,F,H,A).
encode_test(A,B,C,D,E):-number(F),neg(G),ident(H,I),lt(F,J),denotes_0(J),denotes_0(I),denotes_integer(F,G),denotes_n(E),denotes_511(C),denotes_4(B),'denotes_$name_arity'(D,F,H,A).
encode_test(A,B,C,D,E):-atom(F),integer(G),eq(G,H),denotes_2(H),'denotes_.'(F),denotes_n(E),denotes_509(C),denotes_2(B),'denotes_$name_arity'(D,I,G,A),'denotes_.'(I).
encode_test(A,B,C,D,E):-atom(F),integer(G),gt(G,H),(I;J),'denotes_=\\='(G,K,J),denotes_2(K),'denotes_\\=='(F,L,I),'denotes_.'(L),denotes_0(H),denotes_n(E),denotes_511(C),denotes_1(B),'denotes_$name_arity'(D,F,G,A).
encode_test(A,B,C,D,E):-atom(F),nonident(F,G),ident(H,I),denotes_0(I),'denotes_[]'(G),denotes_y(E),denotes_511(C),denotes_128(B),denotes_functor(D,F,H,A).
encode_test(A,B,C,D,E):-ident(F,G),ident(H,I),denotes_0(I),'denotes_[]'(G),denotes_y(E),denotes_447(C),denotes_64(B),denotes_functor(D,F,H,A).
encode_test(A,B,C,D,E):-nonnegative(F),ident(G,H),denotes_0(H),denotes_y(E),denotes_511(C),denotes_32(B),denotes_functor(D,F,G,A).
encode_test(A,B,C,D,E):-negative(F),ident(G,H),denotes_0(H),denotes_y(E),denotes_511(C),denotes_16(B),denotes_functor(D,F,G,A).
encode_test(A,B,C,D,E):-number(F),neg(G),ident(H,I),ge(F,J),denotes_0(J),denotes_0(I),denotes_integer(F,G),denotes_y(E),denotes_511(C),denotes_8(B),denotes_functor(D,F,H,A).
encode_test(A,B,C,D,E):-number(F),neg(G),ident(H,I),lt(F,J),denotes_0(J),denotes_0(I),denotes_integer(F,G),denotes_y(E),denotes_511(C),denotes_4(B),denotes_functor(D,F,H,A).
encode_test(A,B,C,D,E):-atom(F),integer(G),eq(G,H),denotes_2(H),'denotes_.'(F),denotes_y(E),denotes_509(C),denotes_2(B),denotes_functor(D,I,G,A),'denotes_.'(I).
encode_test(A,B,C,D,E):-atom(F),integer(G),gt(G,H),(I;J),'denotes_=\\='(G,K,J),denotes_2(K),'denotes_\\=='(F,L,I),'denotes_.'(L),denotes_0(H),denotes_y(E),denotes_511(C),denotes_1(B),denotes_functor(D,F,G,A).
encode_test(A,B,C,D,E):-atomic(F),denotes_y(E),denotes_511(C),denotes_32(B),denotes_functor(F,G,D,A).
encode_test(A,B,C,D,E):-compound(F),denotes_y(E),denotes_511(C),denotes_32(B),denotes_functor(F,G,D,A).
encode_test(A,B,C,D,E):-atom(F),nonident(F,G),'denotes_[]'(G),denotes_y(E),denotes_511(C),denotes_128(B),denotes_functor(F,D,H,A).
encode_test(A,B,C,D,E):-ident(F,G),'denotes_[]'(G),denotes_y(E),denotes_447(C),denotes_64(B),denotes_functor(F,D,H,A).
encode_test(A,B,C,D,E):-nonnegative(F),denotes_y(E),denotes_511(C),denotes_32(B),denotes_functor(F,D,G,A).
encode_test(A,B,C,D,E):-negative(F),denotes_y(E),denotes_511(C),denotes_16(B),denotes_functor(F,D,G,A).
encode_test(A,B,C,D,E):-compound(F),denotes_y(E),denotes_511(C),denotes_192(B),denotes_functor(F,D,G,A).
encode_test(A,B,C,D,E):-denotes_y(E),denotes_511(C),denotes_252(B),denotes_functor(F,D,G,A).
encode_test(A,B,C,D,E):-denotes_y(E),denotes_511(C),denotes_32(B),denotes_functor(F,G,D,A).
encode_test(A,B,C,D,E):-denotes_y(E),denotes_511(C),denotes_255(B),'denotes_=..'(D,F,A).
encode_test(A,B,C,D,E):-denotes_y(E),denotes_511(C),denotes_2(B),'denotes_=..'(F,D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_255(C),denotes_256(B),denotes_var(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_256(C),denotes_255(B),denotes_nonvar(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_259(C),denotes_255(B),denotes_ground(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_319(C),denotes_192(B),denotes_atom(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_383(C),denotes_128(B),'denotes_$atom_nonnil'(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_447(C),denotes_64(B),denotes_nil(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_463(C),denotes_48(B),denotes_integer(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_495(C),denotes_16(B),denotes_negative(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_479(C),denotes_32(B),denotes_nonnegative(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_451(C),denotes_60(B),denotes_number(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_271(C),denotes_240(B),denotes_denumerable(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_499(C),denotes_12(B),denotes_float(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_259(C),denotes_252(B),denotes_atomic(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_445(C),denotes_66(B),denotes_list(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_509(C),denotes_2(B),denotes_cons(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_510(C),denotes_1(B),denotes_structure(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_508(C),denotes_3(B),denotes_compound(D,A).
encode_test(A,B,C,D,E):-denotes_n(E),denotes_3(C),denotes_508(B),denotes_simple(D,A).
encode_test(A,B,C,D,E):-denotes_y(E),denotes_255(C),denotes_60(B),denotes_is(D,F,A).
encode_test(A,B,C,D,E):-sign_flags(A,B,C,D),denotes_n(E).
encode_test(A,B,C,D,E):-fail,neg(F),arith_test(A,D,G),denotes_sign_flags(A,H,I,J,F),denotes_n(E),denotes_48(C),denotes_48(B).
encode_test(A,B,C,D,E):-neg(F),arith_test(A,D,G),denotes_sign_flags(A,H,I,J,F),denotes_n(E),denotes_60(C),denotes_60(B).
encode_test(A,B,C,D,E):-fail,neg(F),arith_test(A,G,D),denotes_sign_flags(A,H,I,J,F),denotes_n(E),denotes_48(C),denotes_48(B).
encode_test(A,B,C,D,E):-neg(F),arith_test(A,G,D),denotes_sign_flags(A,H,I,J,F),denotes_n(E),denotes_60(C),denotes_60(B).
encode_test(A,B,C,D,E):-type_flags(F,G,C),exprEval(B,H),'denotes_\\/'(I,G,H),denotes_0(I),denotes_y(E),'denotes_='(D,F,A).
encode_test(A,B,C,D,E):-type_flags(F,G,C),exprEval(B,H),'denotes_\\/'(I,G,H),denotes_0(I),denotes_y(E),'denotes_='(F,D,A).
encode_test(A,B,C,D,E):-type_flags(F,G,B),exprEval(C,H),'denotes_\\/'(I,G,H),denotes_256(I),denotes_n(E),'denotes_\\='(D,F,A).
encode_test(A,B,C,D,E):-type_flags(F,G,B),exprEval(C,H),'denotes_\\/'(I,G,H),denotes_256(I),denotes_n(E),'denotes_\\='(F,D,A).
encode_test(A,B,C,D,E):-type_flags(F,B,G),exprEval(C,H),'denotes_\\/'(I,G,H),denotes_256(I),denotes_n(E),'denotes_=='(D,F,A).
encode_test(A,B,C,D,E):-type_flags(F,B,G),exprEval(C,H),'denotes_\\/'(I,G,H),denotes_256(I),denotes_n(E),'denotes_=='(F,D,A).
encode_test(A,B,C,D,E):-type_flags(F,C,G),exprEval(B,H),'denotes_\\/'(I,G,H),denotes_256(I),denotes_n(E),'denotes_\\=='(D,F,A).
encode_test(A,B,C,D,E):-type_flags(F,C,G),exprEval(B,H),'denotes_\\/'(I,G,H),denotes_256(I),denotes_n(E),'denotes_\\=='(F,D,A).
encode_test(A,B,C,D,E):-nonvar(F),encode_test(F,C,B,D,E),denotes_not(F,A).
encode_test(A,B,C,D,E):-nonvar(F),encode_test(F,C,B,D,G),denotes_n(E),'denotes_\\+'(F,A).
can_overlap(A,B,C,D,E,F,G):-noteq(H,I),'denotes_/\\'(B,D,I),denotes_0(H).
can_overlap(A,B,C,D,E,F,G):-noteq(H,I),'denotes_/\\'(J,B,I),denotes_256(J),denotes_0(H),denotes_y(G),denotes_left(A).
can_overlap(A,B,C,D,E,F,G):-noteq(H,I),'denotes_/\\'(J,D,I),denotes_256(J),denotes_0(H),denotes_y(F),denotes_right(A).
can_overlap(A,B,C,D,E,F,G):-noteq(H,I),'denotes_/\\'(J,B,I),denotes_256(J),denotes_0(H),denotes_y(G),denotes_before(A).
can_overlap(A,B,C,D,E,F,G):-noteq(H,I),'denotes_/\\'(J,D,I),denotes_256(J),denotes_0(H),denotes_y(F),denotes_before(A).
encode_name_arity(A,B,C,D,E):-bitmap_name_arity(F,B,C,D),denotes_true(E),'denotes_$test'(G,F,A).
encode_name_arity(A,B,C,D,E):-denotes_true(E),denotes_2(D),'denotes_.'(C),'denotes_=..'(F,B,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),functor(F,C,D),denotes_true(E),'denotes_='(B,F,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),functor(F,C,D),denotes_true(E),'denotes_='(F,B,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),functor(F,C,D),denotes_true(E),'denotes_=='(B,F,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),functor(F,C,D),denotes_true(E),'denotes_=='(F,B,A).
encode_name_arity(A,B,C,D,E):-number(F),functor(F,C,D),denotes_true(E),'denotes_=:='(B,F,A).
encode_name_arity(A,B,C,D,E):-number(F),functor(F,C,D),denotes_true(E),'denotes_=:='(F,B,A).
encode_name_arity(A,B,C,D,E):-number(F),functor(F,G,H),denotes_false(E),denotes_not(H,D),denotes_not(G,C),'denotes_=\\='(B,F,A).
encode_name_arity(A,B,C,D,E):-number(F),functor(F,G,H),denotes_false(E),denotes_not(H,D),denotes_not(G,C),'denotes_=\\='(F,B,A).
encode_name_arity(A,B,C,D,E):-atomic(F),functor(F,G,H),denotes_false(E),denotes_not(H,D),denotes_not(G,C),'denotes_\\=='(B,F,A).
encode_name_arity(A,B,C,D,E):-atomic(F),functor(F,G,H),denotes_false(E),denotes_not(H,D),denotes_not(G,C),'denotes_\\=='(F,B,A).
encode_name_arity(A,B,C,D,E):-denotes_true(E),denotes_functor(B,C,D,A).
encode_name_arity(A,B,B,C,D):-var(E),denotes_true(D),denotes_0(C),denotes_functor(E,B,F,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),functor(F,C,G),denotes_true(E),denotes_0(D),denotes_functor(F,B,H,A).
encode_name_arity(A,B,B,C,D):-var(E),denotes_true(D),denotes_0(C),denotes_functor(E,F,B,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),functor(F,G,C),denotes_true(E),denotes_0(D),denotes_functor(F,H,B,A).
encode_name_arity(A,B,C,D,E):-denotes_true(E),'denotes_$name_arity'(B,C,D,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_atom(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),'denotes_$atom_nonnil'(B,A).
encode_name_arity(A,B,C,D,E):-denotes_true(E),denotes_0(D),'denotes_[]'(C),denotes_nil(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_integer(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_negative(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_nonnegative(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_float(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_number(B,A).
encode_name_arity(A,B,B,C,D):-denotes_true(D),denotes_0(C),denotes_atomic(B,A).
encode_name_arity(A,B,C,D,E):-denotes_true(E),denotes_2(D),'denotes_.'(C),denotes_cons(B,A).
encode_name_arity(A,B,C,D,E):-nonvar(F),neg(G),encode_name_arity(F,B,H,I,J),negate(H,C),negate(I,D),negate_boolean(J,E),denotes_invalid_negation(F,G),denotes_not(F,A).
check_name_arity(A,B,C,D,E,F):-(G;H),cut,denotes_check_different(D,F,H),denotes_check_different(C,E,G),denotes_true(B),denotes_true(A).
check_name_arity(A,B,C,D,E,F):-check_different(C,E),check_different(D,F),denotes_false(B),denotes_true(A).
check_name_arity(A,B,C,D,E,F):-check_different(C,E),check_different(D,F),denotes_true(B),denotes_false(A).
an_uninit_mode(A,B,C):-denotes_mem(B),denotes_uninit(C,A).
an_uninit_mode(A,B,C):-denotes_reg(B),denotes_uninit_reg(C,A).
an_uninit_mode(A,B,C):-mem_reg(B),denotes_uninit(B,C,A).
an_uninit_mode(A,B,C):-mem_reg(B),denotes_uninit(B,C,D,A).
u_implies_goal(A,B):-denotes_unbound(B,A).
u_implies_goal(A,B):-denotes_uninit(C,B,A),denotes_any(C).
u_implies_goal(A,B):-denotes_deref(B,A).
u_implies_goal(A,B):-denotes_rderef(B,A).
u_implies_goal(A,B):-denotes_trail(B,A).
u_implies_goal(A,B):-denotes_trail_if_var(B,A).
encode_test(A,B,C,D):-encode_test(A,B,C,D,E).
test_nobind(A):-test(A),neg(B),denotes_bind_test(A,B).
bind_test(A):-'denotes_='(B,C,A).
bind_test(A):-denotes_is(B,C,A).
bind_test(A):-denotes_functor(B,C,D,A).
bind_test(A):-'denotes_=..'(B,C,A).
test_varset(A,B):-test_varbag(A,C),sort(C,B).
test_varbag(A,B):-test_varbag(A,B,C),'denotes_[]'(C).
test_varbag(A,B,C):-encode_relop(A,D,E,F,G),filter_vars(H,B,C),cut,'denotes_.'(D,I,H),'denotes_.'(F,J,I),'denotes_[]'(J).
test_varbag(A,B,C):-encode_test(A,D,E,F,G),filter_vars(H,B,C),cut,'denotes_.'(F,I,H),'denotes_[]'(I).
test_varbag(A,B,C):-encode_name_arity(A,D,E,F,G),filter_vars(H,B,C),cut,'denotes_.'(D,I,H),'denotes_[]'(I).
encode_relop(A,B,C,D,E):-atomic(D),ident(F,G),denotes_0(G),denotes_unify(E),denotes_2(C),'denotes_$name_arity'(B,D,F,A).
encode_relop(A,B,C,D,E):-number(D),ident(F,G),denotes_0(G),denotes_unify(E),denotes_2(C),denotes_functor(B,D,F,A).
encode_relop(A,B,C,D,E):-atom(D),ident(F,G),denotes_0(G),denotes_unify(E),denotes_2(C),denotes_functor(B,D,F,A).
encode_relop(A,B,C,D,E):-var(D),ident(F,G),denotes_0(G),denotes_unify(E),denotes_2(C),denotes_functor(B,D,F,A).
encode_relop(A,B,C,D,E):-nonvar(F),functor(F,G,D),denotes_unify(E),denotes_2(C),denotes_functor(F,H,B,A).
encode_relop(A,B,C,D,E):-nonvar(F),functor(F,D,G),denotes_unify(E),denotes_2(C),denotes_functor(F,B,H,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_1(C),'denotes_>'(B,D,A).
encode_relop(A,B,C,D,E):-denotes_stand(E),denotes_1(C),'denotes_@>'(B,D,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_2(C),'denotes_=:='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_stand(E),denotes_2(C),'denotes_=='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_unify(E),denotes_2(C),'denotes_='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_2(C),denotes_is(B,D,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_3(C),'denotes_>='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_stand(E),denotes_3(C),'denotes_@>='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_4(C),'denotes_<'(B,D,A).
encode_relop(A,B,C,D,E):-denotes_stand(E),denotes_4(C),'denotes_@<'(B,D,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_5(C),'denotes_=\\='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_stand(E),denotes_5(C),'denotes_\\=='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_unify(E),denotes_5(C),'denotes_\\='(B,D,A).
encode_relop(A,B,C,D,E):-denotes_arith(E),denotes_6(C),'denotes_=<'(B,D,A).
encode_relop(A,B,C,D,E):-denotes_stand(E),denotes_6(C),'denotes_@=<'(B,D,A).
encode_relop(A,B,C,D,E):-nonvar(F),encode_relop(F,B,G,D,E),negate_relop(G,C),denotes_not(F,A).
encode_relop(A,B,C,D,E):-nonvar(F),encode_relop(F,B,G,D,E),negate_relop(G,C),'denotes_\\+'(F,A).
relational_test(A,B,C):-encode_relop(A,B,D,C,E),cut,denotes_arith(E).
atomic_value(A,B,C):-atomic_value(D,B,C),'denotes_,'(D,E,A).
atomic_value(A,B,C):-atomic_value(D,B,C),'denotes_,'(E,D,A).
atomic_value(A,B,C):-encode_name_arity(A,D,C,E,F),ident(B,D),atomic(C),denotes_true(F),denotes_0(E).
standard_order(A):-encode_relop(A,B,C,D,E),denotes_stand(E).
negate_relop(A,B):-exprEval(B,C),'denotes_/\\'(D,E,C),denotes_7(E),'denotes_\\'(A,D).
flip(A,B):-exprEval(B,C),'denotes_\\/'(D,E,C),'denotes_>>'(F,G,E),denotes_2(G),'denotes_/\\'(A,H,F),denotes_4(H),'denotes_\\/'(I,J,D),'denotes_/\\'(A,K,J),denotes_2(K),'denotes_<<'(L,M,I),denotes_2(M),'denotes_/\\'(A,N,L),denotes_1(N).
get_relop(A,B,C):-denotes_0(C),denotes_1(B),denotes_1(A).
get_relop(A,B,C):-denotes_3(C),denotes_2(B),denotes_1(A).
get_relop(A,B,C):-denotes_0(C),denotes_3(B),denotes_1(A).
get_relop(A,B,C):-denotes_3(C),denotes_4(B),denotes_1(A).
get_relop(A,B,C):-denotes_0(C),denotes_5(B),denotes_1(A).
get_relop(A,B,C):-denotes_3(C),denotes_6(B),denotes_1(A).
get_relop(A,B,C):-denotes_6(C),denotes_1(B),denotes_2(A).
get_relop(A,B,C):-denotes_5(C),denotes_2(B),denotes_2(A).
get_relop(A,B,C):-denotes_4(C),denotes_3(B),denotes_2(A).
get_relop(A,B,C):-denotes_3(C),denotes_4(B),denotes_2(A).
get_relop(A,B,C):-denotes_2(C),denotes_5(B),denotes_2(A).
get_relop(A,B,C):-denotes_1(C),denotes_6(B),denotes_2(A).
get_relop(A,B,C):-denotes_0(C),denotes_1(B),denotes_3(A).
get_relop(A,B,C):-denotes_1(C),denotes_2(B),denotes_3(A).
get_relop(A,B,C):-denotes_0(C),denotes_3(B),denotes_3(A).
get_relop(A,B,C):-denotes_3(C),denotes_4(B),denotes_3(A).
get_relop(A,B,C):-denotes_0(C),denotes_5(B),denotes_3(A).
get_relop(A,B,C):-denotes_1(C),denotes_6(B),denotes_3(A).
get_relop(A,B,C):-denotes_6(C),denotes_1(B),denotes_4(A).
get_relop(A,B,C):-denotes_6(C),denotes_2(B),denotes_4(A).
get_relop(A,B,C):-denotes_6(C),denotes_3(B),denotes_4(A).
get_relop(A,B,C):-denotes_0(C),denotes_4(B),denotes_4(A).
get_relop(A,B,C):-denotes_0(C),denotes_5(B),denotes_4(A).
get_relop(A,B,C):-denotes_0(C),denotes_6(B),denotes_4(A).
get_relop(A,B,C):-denotes_0(C),denotes_1(B),denotes_5(A).
get_relop(A,B,C):-denotes_2(C),denotes_2(B),denotes_5(A).
get_relop(A,B,C):-denotes_0(C),denotes_3(B),denotes_5(A).
get_relop(A,B,C):-denotes_0(C),denotes_4(B),denotes_5(A).
get_relop(A,B,C):-denotes_0(C),denotes_5(B),denotes_5(A).
get_relop(A,B,C):-denotes_0(C),denotes_6(B),denotes_5(A).
get_relop(A,B,C):-denotes_6(C),denotes_1(B),denotes_6(A).
get_relop(A,B,C):-denotes_4(C),denotes_2(B),denotes_6(A).
get_relop(A,B,C):-denotes_4(C),denotes_3(B),denotes_6(A).
get_relop(A,B,C):-denotes_0(C),denotes_4(B),denotes_6(A).
get_relop(A,B,C):-denotes_0(C),denotes_5(B),denotes_6(A).
get_relop(A,B,C):-denotes_0(C),denotes_6(B),denotes_6(A).
test_relop(A,B,C):-strong_compare(A,D,C),exprEval(E,F),'denotes_/\\'(G,D,F),'denotes_/\\'(H,I,G),denotes_7(I),'denotes_\\'(B,H),denotes_0(E).
bagof_get_relop(A,B,C):-bagof(D,E,F),cut,and_list(F,G,C),denotes_7(G),denotes_op_table(A,B,D,E).
bagof_get_relop(A,B,C):-denotes_0(C).
and_list(A,B,B):-'denotes_[]'(A).
and_list(A,B,C):-exprEval(D,E),and_list(F,D,C),'denotes_/\\'(G,B,E),'denotes_.'(G,F,A).
op_table(A,B,C):-lt(A),lt(B),denotes_0(C).
op_table(A,B,C):-lt(A),eq(B),denotes_6(C).
op_table(A,B,C):-lt(A),gt(B),denotes_6(C).
op_table(A,B,C):-eq(A),lt(B),denotes_3(C).
op_table(A,B,C):-eq(A),eq(B),denotes_5(C).
op_table(A,B,C):-eq(A),gt(B),denotes_6(C).
op_table(A,B,C):-gt(A),lt(B),denotes_3(C).
op_table(A,B,C):-gt(A),eq(B),denotes_3(C).
op_table(A,B,C):-gt(A),gt(B),denotes_0(C).
lt(A):-exprEval(B,C),'denotes_/\\'(D,A,C),denotes_4(D),denotes_4(B).
eq(A):-exprEval(B,C),'denotes_/\\'(D,A,C),denotes_2(D),denotes_2(B).
gt(A):-exprEval(B,C),'denotes_/\\'(D,A,C),denotes_1(D),denotes_1(B).
strong_compare(A,B,C):-ident(A,C),cut,denotes_2(B).
strong_compare(A,B,C):-nonident(A,C),var(A),cut,denotes_7(B).
strong_compare(A,B,C):-nonident(A,C),var(C),cut,denotes_7(B).
strong_compare(A,B,C):-nonident(A,C),nonvar(A),nonvar(C),cut,functor(A,D,E),functor(C,F,G),weak_compare(H,I,J),(K;L),'denotes_='(B,I,L),'denotes_->'(M,N,K),denotes_strong_compare_args(O,E,A,B,C,N),denotes_1(O),'denotes_='(I,P,M),denotes_2(P),'denotes_/'(G,F,J),'denotes_/'(E,D,H).
weak_compare(A,B,C):-termlt(A,C),denotes_4(B).
weak_compare(A,B,C):-ident(A,C),denotes_2(B).
weak_compare(A,B,C):-termgt(A,C),denotes_1(B).
strong_compare_args(A,B,C,D,E):-gt(A,B),cut,denotes_2(D).
strong_compare_args(A,B,C,D,E):-le(A,B),cut,arg(A,C,F),arg(A,E,G),strong_compare(F,H,G),(I;J),'denotes_;'(K,L,J),'denotes_='(D,H,L),'denotes_->'(M,N,K),'denotes_,'(O,P,N),denotes_strong_compare_args(Q,B,C,D,E,P),denotes_is(Q,R,O),'denotes_+'(A,S,R),denotes_1(S),'denotes_='(H,T,M),denotes_2(T),'denotes_->'(U,V,I),'denotes_='(D,H,V),'denotes_='(H,W,U),denotes_7(W).
get_type_test(A,B,C):-get_type(A,B,D,E),denotes_511(D),'denotes_$test'(B,E,C).
get_type(A,B,C,D):-cut,get_type(E,B,C,F),get_type(G,B,F,D),'denotes_,'(E,G,A).
get_type(A,B,C,D):-encode_test(A,E,F,G,H),ident(B,G),cut,and_bits(E,C,D).
get_type(A,B,C,C):-true.
get_tag(A,B,C):-get_type(A,B,D,E),bitmap_type(E,F),tag(F,C),denotes_511(D).
bitmap_type(A,B):-denotes_var(B),denotes_256(A).
bitmap_type(A,B):-denotes_cons(B),denotes_2(A).
bitmap_type(A,B):-denotes_structure(B),denotes_1(A).
bitmap_type(A,B):-denotes_atom(B),denotes_192(A).
bitmap_type(A,B):-denotes_atom(B),denotes_64(A).
bitmap_type(A,B):-denotes_atom(B),denotes_128(A).
bitmap_type(A,B):-fail,denotes_negative(B),denotes_16(A).
bitmap_type(A,B):-fail,denotes_nonnegative(B),denotes_32(A).
bitmap_type(A,B):-denotes_integer(B),denotes_48(A).
bitmap_type(A,B):-denotes_integer(B),denotes_16(A).
bitmap_type(A,B):-denotes_integer(B),denotes_32(A).
bitmap_type(A,B):-denotes_float(B),denotes_12(A).
and_bits(A,B,C):-exprEval(C,D),'denotes_/\\'(A,B,D).
conj_test(A,B,C):-encode_test(A,D,E,F,G),encode_test(B,H,I,J,K),ident(F,J),cut,exprEval(L,M),'denotes_/\\'(D,H,M),'denotes_$test'(F,L,C).
disj_test(A,B,C):-encode_test(A,D,E,F,G),encode_test(B,H,I,J,K),ident(F,J),cut,exprEval(L,M),'denotes_\\/'(D,H,M),'denotes_$test'(F,L,C).
not_test(A,B):-encode_test(A,C,D,E,F),cut,'denotes_$test'(E,D,B).
bitmap_test(A,B):-encode_test(A,C,D,E,F),cut,'denotes_$test'(E,C,B).
merge_test(A,B):-exact_bitmap(A,C,D),cut,'denotes_$test'(C,D,B).
merge_test(A,B):-merge_test(C,D),merge_test(E,F),cut,conj_test(D,F,B),'denotes_,'(C,E,A).
merge_test(A,B):-merge_test(C,D),merge_test(E,F),cut,disj_test(D,F,B),'denotes_;'(C,E,A).
merge_test(A,B):-merge_test(C,D),cut,not_test(D,B),'denotes_\\+'(C,A).
exact_bitmap(A,B,C):-denotes_255(C),denotes_nonvar(B,A).
exact_bitmap(A,B,C):-denotes_192(C),denotes_atom(B,A).
exact_bitmap(A,B,C):-denotes_256(C),denotes_var(B,A).
exact_bitmap(A,B,C):-denotes_2(C),denotes_cons(B,A).
exact_bitmap(A,B,C):-denotes_1(C),denotes_structure(B,A).
exact_bitmap(A,B,C):-denotes_64(C),denotes_nil(B,A).
exact_bitmap(A,B,C):-ident(D,E),'denotes_[]'(E),denotes_64(C),'denotes_=='(B,D,A).
exact_bitmap(A,B,C):-ident(D,E),'denotes_[]'(E),denotes_64(C),'denotes_=='(D,B,A).
exact_bitmap(A,B,C):-denotes_16(C),denotes_negative(B,A).
exact_bitmap(A,B,C):-denotes_32(C),denotes_nonnegative(B,A).
exact_bitmap(A,B,C):-denotes_240(C),denotes_denumerable(B,A).
exact_bitmap(A,B,C):-denotes_12(C),denotes_float(B,A).
exact_bitmap(A,B,C):-denotes_508(C),denotes_simple(B,A).
exact_bitmap(A,B,C):-denotes_3(C),denotes_compound(B,A).
exact_bitmap(A,B,C):-denotes_66(C),denotes_list(B,A).
exact_bitmap(A,B,C):-denotes_252(C),denotes_atomic(B,A).
exact_bitmap(A,B,C):-denotes_60(C),denotes_number(B,A).
exact_bitmap(A,B,C):-denotes_48(C),denotes_integer(B,A).
exact_bitmap(A,B,C):-denotes_128(C),'denotes_$atom_nonnil'(B,A).
bitmap_simplify(A,B):-denotes_fail(B),'denotes_$test'(C,D,A),denotes_0(D).
bitmap_simplify(A,B):-denotes_true(B),'denotes_$test'(C,D,A),denotes_511(D).
bitmap_combine(A,B,C):-bitmap_combine(B,D,E,C),'denotes_$test'(D,E,A).
bitmap_combine(A,B,C,D):-ident(B,E),cut,exprEval(F,G),'denotes_/\\'(H,C,G),'denotes_$test'(E,F,D),'denotes_$test'(E,H,A).
bitmap_combine(A,B,C,D):-bitmap_combine(E,B,C,F),cut,'denotes_,'(F,G,D),'denotes_,'(E,G,A).
bitmap_combine(A,B,C,D):-bitmap_combine(E,B,C,F),cut,'denotes_,'(G,F,D),'denotes_,'(G,E,A).
bitmap_name_arity(A,B,C,D):-cut,denotes_2(D),'denotes_.'(C),denotes_2(A).
bitmap_name_arity(A,B,C,D):-cut,denotes_0(D),'denotes_[]'(C),denotes_64(A).
bitmap_name_arity(A,B,B,C):-noteq(A,D),eq(E,F),denotes_0(F),'denotes_/\\'(A,G,E),denotes_259(G),denotes_0(D),denotes_0(C).
i2f_formula(A,B,C):-cut,i2f_formula(D,B,E),i2f_formula(F,B,G),'denotes_,'(E,G,C),'denotes_,'(D,F,A).
i2f_formula(A,B,C):-cut,i2f_formula(D,B,E),i2f_formula(F,B,G),'denotes_;'(E,G,C),'denotes_;'(D,F,A).
i2f_formula(A,B,C):-cut,f2i_formula(D,B,E),denotes_not(E,C),denotes_not(D,A).
i2f_formula(A,B,C):-ident(B,D),cut,(E;F),'denotes_='(G,H,F),'denotes_->'(I,J,E),'denotes_,'(K,L,J),denotes_is(G,M,L),'denotes_\\/'(N,O,M),denotes_12(O),denotes_is(N,P,K),'denotes_/\\'(H,Q,P),denotes_463(Q),'denotes_=\\='(R,S,I),denotes_0(S),'denotes_/\\'(H,T,R),denotes_48(T),'denotes_$test'(D,G,C),'denotes_$test'(D,H,A).
i2f_formula(A,B,C):-ident(B,D),cut,denotes_float(D,C),denotes_integer(D,A).
i2f_formula(A,B,C):-ident(B,D),cut,denotes_float(D,C),denotes_nonnegative(D,A).
i2f_formula(A,B,C):-ident(B,D),cut,denotes_float(D,C),denotes_negative(D,A).
i2f_formula(A,B,C):-ident(B,D),cut,denotes_atomic(D,C),denotes_denumerable(D,A).
i2f_formula(A,B,C):-ident(B,D),integer(E),cut,exprEval(F,G),denotes_float(E,G),'denotes_='(D,F,C),'denotes_='(D,E,A).
i2f_formula(A,B,C):-ident(B,D),integer(E),cut,exprEval(F,G),denotes_float(E,G),'denotes_='(D,F,C),'denotes_='(E,D,A).
i2f_formula(A,B,C):-ident(B,D),integer(E),cut,exprEval(F,G),denotes_float(E,G),'denotes_=='(D,F,C),'denotes_=='(D,E,A).
i2f_formula(A,B,C):-ident(B,D),integer(E),cut,exprEval(F,G),denotes_float(E,G),'denotes_=='(D,F,C),'denotes_=='(E,D,A).
i2f_formula(A,B,C):-ident(B,D),integer(E),cut,exprEval(F,G),denotes_float(E,G),'denotes_=='(D,F,C),'denotes_=:='(D,E,A).
i2f_formula(A,B,C):-ident(B,D),integer(E),cut,exprEval(F,G),denotes_float(E,G),'denotes_=='(D,F,C),'denotes_=:='(E,D,A).
i2f_formula(A,B,A):-true.
f2i_formula(A,B,C):-cut,f2i_formula(D,B,E),f2i_formula(F,B,G),'denotes_,'(E,G,C),'denotes_,'(D,F,A).
f2i_formula(A,B,C):-cut,f2i_formula(D,B,E),f2i_formula(F,B,G),'denotes_;'(E,G,C),'denotes_;'(D,F,A).
f2i_formula(A,B,C):-cut,i2f_formula(D,B,E),denotes_not(E,C),denotes_not(D,A).
f2i_formula(A,B,C):-ident(B,D),cut,(E;F),'denotes_='(G,H,F),'denotes_->'(I,J,E),'denotes_,'(K,L,J),denotes_is(G,M,L),'denotes_\\/'(N,O,M),denotes_48(O),denotes_is(N,P,K),'denotes_/\\'(H,Q,P),denotes_499(Q),'denotes_=\\='(R,S,I),denotes_0(S),'denotes_/\\'(H,T,R),denotes_12(T),'denotes_$test'(D,G,C),'denotes_$test'(D,H,A).
f2i_formula(A,B,C):-ident(B,D),cut,denotes_integer(D,C),denotes_float(D,A).
f2i_formula(A,B,C):-ident(B,D),cut,denotes_denumerable(D,C),denotes_atomic(D,A).
f2i_formula(A,B,C):-ident(B,D),cut,exprEval(E,F),denotes_integer(G,F),'denotes_='(D,E,C),'denotes_='(D,G,A).
f2i_formula(A,B,C):-ident(B,D),cut,exprEval(E,F),denotes_integer(G,F),'denotes_='(D,E,C),'denotes_='(G,D,A).
f2i_formula(A,B,C):-ident(B,D),cut,exprEval(E,F),denotes_integer(G,F),'denotes_=='(D,E,C),'denotes_=='(D,G,A).
f2i_formula(A,B,C):-ident(B,D),cut,exprEval(E,F),denotes_integer(G,F),'denotes_=='(D,E,C),'denotes_=='(G,D,A).
f2i_formula(A,B,C):-ident(B,D),cut,exprEval(E,F),denotes_integer(G,F),'denotes_=='(D,E,C),'denotes_=:='(D,G,A).
f2i_formula(A,B,C):-ident(B,D),cut,exprEval(E,F),denotes_integer(G,F),'denotes_=='(D,E,C),'denotes_=:='(G,D,A).
f2i_formula(A,B,A):-true.
test_to_disj(A,B,C):-cut,bitmap_to_disj(B,D,C),'denotes_$test'(B,D,A).
test_to_disj(A,B,C):-exact_bitmap(A,B,D),bitmap_to_disj(B,D,C).
bitmap_to_disj(A,B,C):-bitmap_to_disj(B,B,A,C,D),denotes_fail(D).
bitmap_to_disj(A,B,C,D,D):-cut,denotes_0(A).
bitmap_to_disj(A,B,C,D,E):-noteq(A,F),exact_bitmap(G,C,H),neg(I),eq(J,K),exprEval(L,M),noteq(L,A),cut,di(G,D,N),bitmap_to_disj(L,B,C,N,E),'denotes_/\\'(A,O,M),'denotes_\\'(H,O),'denotes_/\\'(H,P,K),'denotes_\\'(B,P),denotes_0(J),denotes_complex_bitmap(G,I),denotes_0(F).
bitmap_to_disj(A,B,C,D,D):-error(E),'denotes_.'(F,G,E),'denotes_.'(A,H,G),'denotes_.'(I,J,H),'denotes_.'(K,L,J),'denotes_.'(M,N,L),'denotes_[]'(N),'denotes_Replacing by fail.'(M),denotes_nl(K),'denotes_\' to a disjunction.'(I),'denotes_Could not convert bitmap \''(F).
complex_bitmap(A):-denotes_simple(B,A).
complex_bitmap(A):-denotes_compound(B,A).
complex_bitmap(A):-denotes_list(B,A).
complex_bitmap(A):-denotes_atomic(B,A).
complex_bitmap(A):-denotes_number(B,A).
complex_bitmap(A):-denotes_denumerable(B,A).
complex_bitmap(A):-fail,denotes_integer(B,A).
complex_bitmap(A):-denotes_negative(B,A).
complex_bitmap(A):-denotes_nonnegative(B,A).
exact_bitmap(A):-exact_bitmap(A,B,C).
exact_bitmap(A,B):-exact_bitmap(A,C,B).
ground_bag(A,B,C):-cut,ground_set(D,E),ground_set(F,G),intersectv(E,G,H),difflist(H,B,C),'denotes_;'(D,F,A).
ground_bag(A,B,C):-cut,ground_bag(D,B,E),ground_bag(F,E,C),'denotes_,'(D,F,A).
ground_bag(A,B,C):-encode_relop(A,D,E,F,G),cut,constC(B,D,H),constC(H,F,C),denotes_arith(G).
ground_bag(A,B,C):-encode_test(A,D,E,F,G),eq(H,I),cut,constC(B,F,C),'denotes_/\\'(D,J,I),denotes_259(J),denotes_0(H).
ground_bag(A,B,C):-cut,constC(B,D,C),denotes_ground(D,A).
ground_bag(A,B,B):-true.
nonvar_set(A,B):-nonvar_bag(A,C,D),sort(C,E),filter_vars(E,B),'denotes_[]'(D).
nonvar_bag(A,B,C):-cut,nonvar_set(D,E),nonvar_set(F,G),intersectv(E,G,H),difflist(H,B,C),'denotes_;'(D,F,A).
nonvar_bag(A,B,C):-cut,nonvar_bag(D,B,E),nonvar_bag(F,E,C),'denotes_,'(D,F,A).
nonvar_bag(A,B,C):-encode_test(A,D,E,F,G),eq(H,I),cut,constC(B,F,C),'denotes_/\\'(D,J,I),denotes_256(J),denotes_0(H).
nonvar_bag(A,B,B):-true.
deref_set(A,B):-deref_bag(A,C,D),sort(C,E),filter_vars(E,B),'denotes_[]'(D).
deref_bag(A,B,C):-cut,deref_set(D,E),deref_set(F,G),intersectv(E,G,H),difflist(H,B,C),'denotes_;'(D,F,A).
deref_bag(A,B,C):-cut,deref_bag(D,B,E),deref_bag(F,E,C),'denotes_,'(D,F,A).
deref_bag(A,B,C):-cut,constC(B,D,C),denotes_rderef(D,A).
deref_bag(A,B,C):-cut,constC(B,D,C),denotes_deref(D,A).
deref_bag(A,B,B):-true.
rderef_set(A,B):-rderef_bag(A,C,D),sort(C,E),filter_vars(E,F),simple_set(A,G),deref_set(A,H),intersectv(G,H,I),unionv(I,F,B),'denotes_[]'(D).
rderef_bag(A,B,C):-cut,rderef_set(D,E),rderef_set(F,G),intersectv(E,G,H),difflist(H,B,C),'denotes_;'(D,F,A).
rderef_bag(A,B,C):-cut,rderef_bag(D,B,E),rderef_bag(F,E,C),'denotes_,'(D,F,A).
rderef_bag(A,B,C):-cut,constC(B,D,C),denotes_rderef(D,A).
rderef_bag(A,B,B):-true.
simple_set(A,B):-simple_bag(A,C,D),sort(C,E),filter_vars(E,B),'denotes_[]'(D).
atomic_set(A,B):-atomic_bag(A,C,D),sort(C,E),filter_vars(E,B),'denotes_[]'(D).
atomic_bag(A,B,C):-cut,atomic_set(D,E),atomic_set(F,G),intersectv(E,G,H),difflist(H,B,C),'denotes_;'(D,F,A).
atomic_bag(A,B,C):-cut,atomic_bag(D,B,E),atomic_bag(F,E,C),'denotes_,'(D,F,A).
atomic_bag(A,B,C):-encode_relop(A,D,E,F,G),cut,constC(B,D,H),constC(H,F,C),denotes_arith(G).
atomic_bag(A,B,C):-encode_test(A,D,E,F,G),eq(H,I),cut,constC(B,F,C),'denotes_/\\'(D,J,I),denotes_259(J),denotes_0(H).
atomic_bag(A,B,B):-true.
simple_bag(A,B,C):-cut,simple_set(D,E),simple_set(F,G),intersectv(E,G,H),difflist(H,B,C),'denotes_;'(D,F,A).
simple_bag(A,B,C):-cut,simple_bag(D,B,E),simple_bag(F,E,C),'denotes_,'(D,F,A).
simple_bag(A,B,C):-encode_relop(A,D,E,F,G),cut,constC(B,D,H),constC(H,F,C),denotes_arith(G).
simple_bag(A,B,C):-encode_test(A,D,E,F,G),eq(H,I),cut,constC(B,F,C),'denotes_/\\'(D,J,I),denotes_3(J),denotes_0(H).
simple_bag(A,B,B):-true.
subsuming_test(A,B,C,D):-encode_test(A,E,F,G,H),type_test(C,G,B),encode_test(B,I,J,G,K),eq(L,M),'denotes_/\\'(N,E,M),'denotes_\\'(I,N),denotes_0(L),denotes_n(K),denotes_n(H),denotes_true(D).
subsuming_test(A,B,C,D):-encode_test(A,E,F,G,H),type_test(C,G,I),encode_test(I,J,K,G,L),eq(M,N),'denotes_/\\'(O,E,N),'denotes_\\'(K,O),denotes_0(M),denotes_n(L),denotes_n(H),denotes_false(D),denotes_not(I,B).
sign_flags(A,B,C,D):-number(E),ge(E,F),sign_bits(B,C),denotes_0(F),'denotes_>'(D,E,A).
sign_flags(A,B,C,D):-number(E),ge(E,F),sign_bits(B,C),denotes_0(F),'denotes_>='(D,E,A).
sign_flags(A,B,C,D):-number(E),ge(E,F),sign_bits(B,C),denotes_0(F),'denotes_<'(E,D,A).
sign_flags(A,B,C,D):-number(E),ge(E,F),sign_bits(B,C),denotes_0(F),'denotes_=<'(E,D,A).
sign_flags(A,B,C,D):-number(E),le(E,F),sign_bits(C,B),denotes_0(F),'denotes_>'(E,D,A).
sign_flags(A,B,C,D):-number(E),lt(E,F),sign_bits(C,B),denotes_0(F),'denotes_>='(E,D,A).
sign_flags(A,B,C,D):-number(E),le(E,F),sign_bits(C,B),denotes_0(F),'denotes_<'(D,E,A).
sign_flags(A,B,C,D):-number(E),lt(E,F),sign_bits(C,B),denotes_0(F),'denotes_=<'(D,E,A).
sign_flags(A,B,C,D):-number(E),ge(E,F),sign_bits(B,C),denotes_0(F),'denotes_=:='(E,D,A).
sign_flags(A,B,C,D):-number(E),ge(E,F),sign_bits(B,C),denotes_0(F),'denotes_=:='(D,E,A).
sign_flags(A,B,C,D):-number(E),lt(E,F),sign_bits(C,B),denotes_0(F),'denotes_=:='(E,D,A).
sign_flags(A,B,C,D):-number(E),lt(E,F),sign_bits(C,B),denotes_0(F),'denotes_=:='(D,E,A).
type_flags(A,B,C):-atom(A),nonident(A,D),'denotes_[]'(D),denotes_255(C),denotes_128(B).
type_flags(A,B,C):-nil(A),denotes_191(C),denotes_64(B).
type_flags(A,B,C):-nonnegative(A),denotes_255(C),denotes_32(B).
type_flags(A,B,C):-negative(A),denotes_255(C),denotes_16(B).
type_flags(A,B,C):-float(A),ge(A,D),denotes_0(D),denotes_255(C),denotes_8(B).
type_flags(A,B,C):-float(A),lt(A,D),denotes_0(D),denotes_255(C),denotes_4(B).
type_flags(A,B,C):-cons(A),denotes_255(C),denotes_2(B).
type_flags(A,B,C):-structure(A),denotes_255(C),denotes_1(B).
sign_bits(A,B):-(C;D),'denotes_,'(E,F,D),'denotes_='(B,G,F),denotes_16(G),'denotes_='(A,H,E),denotes_32(H),'denotes_->'(I,J,C),'denotes_,'(K,L,J),'denotes_='(B,M,L),denotes_20(M),'denotes_='(A,N,K),denotes_40(N),denotes_true(I).
left_overlap(A,B,C,D):-noteq(E,F),'denotes_/\\'(A,G,F),'denotes_\\/'(C,H,G),'denotes_\\'(I,H),'denotes_\\/'(C,D,I),denotes_0(E).
right_overlap(A,B,C,D):-noteq(E,F),'denotes_/\\'(C,G,F),'denotes_\\/'(A,H,G),'denotes_\\'(I,H),'denotes_\\/'(A,B,I),denotes_0(E).
invalid_negation(A):-'denotes_=..'(B,C,A).
invalid_negation(A):-'denotes_='(B,C,A).
invalid_negation(A):-'denotes_\\='(B,C,A).
invalid_negation(A):-neg(B),denotes_one_atomic(C,D,B),'denotes_=='(C,D,A).
invalid_negation(A):-neg(B),denotes_one_atomic(C,D,B),'denotes_\\=='(C,D,A).
negate(A,B):-nonvar(C),cut,denotes_not(B,C),denotes_not(B,A).
negate(A,B):-var(A),cut,denotes_not(A,B).
negate(A,B):-neg(C),cut,'denotes_='(A,D,C),denotes_not(E,D),denotes_not(A,B).
negate_boolean(A,B):-denotes_false(B),denotes_true(A).
negate_boolean(A,B):-denotes_true(B),denotes_false(A).
one_atomic(A,B):-atomic(A).
one_atomic(A,B):-atomic(B).
check_different(A,B):-atomic(A),atomic(B),nonident(A,B).
check_different(A,B):-nonvar(C),atomic(D),ident(D,B),denotes_not(D,C),denotes_not(D,A).
check_different(A,B):-nonvar(C),atomic(D),ident(A,D),denotes_not(D,C),denotes_not(D,B).
ctest(A,B,C,C):-ctest(A,B).
ctest(A,B):-prolog_implies(B,A).
ctest(A,B,B):-ctest(A,B).
nonvartest(A,B):-ctest(C,B),denotes_nonvar(A,C).
vartest(A,B):-ctest(C,B),denotes_var(A,C).
rtest_in(A,B,C,D,E,F):-rtest_in(A,B,C,G,D,E,F).
rtest_in(A,B,C,C,D,E,F):-core_rtest(A,B,D,C,G,H,E,F),denotes_no_update(H).
core_rtest(A,B,C,D,E,F,G,H):-neg(I),expand_test(A,J,B,D,C,G,H),var(J),cut,update_choice(F,A,D,E),denotes_prolog_implies(D,A,I).
core_rtest(A,B,C,D,D,E,F,F):-true.
rtests_in(A,B,C,C,D,E,F):-neg(G),cut,rtest_in(A,B,C,D,E,F),'denotes_='(A,H,G),'denotes_,'(I,J,H).
rtests_in(A,B,C,C,D,E,F):-cut,rtest_in(G,B,C,D,E,H),rtests_in(I,B,C,J,D,H,F),'denotes_,'(G,I,A).
rtest(A,B,C,D,E,F,G):-core_rtest(A,B,E,C,D,H,F,G),denotes_update(H).
rtest_in_deref(A,B,C,D,E,E,F,G):-write_once,var(A),neg(H),cut,constC(F,I,G),denotes_deref(A,B,I),denotes_prolog_implies(E,J,H),denotes_deref(A,J),'denotes_.'(K,L,C),'denotes_.'(A,M,L),'denotes_.'(B,D,M),denotes_pref(K).
rtest_in_deref(A,A,B,C,D,D,E,F):-neg(G),cut,constC(E,H,F),denotes_deref(A,H),denotes_write_once(G),'denotes_.'(A,C,B).
rtest_in_deref(A,A,B,B,C,C,D,D):-true.
rtest_deref(A,B,C,D,E,F,G,H):-write_once,var(A),neg(I),cut,constC(G,J,H),update_formula(K,E,F),denotes_deref(B,K),denotes_deref(A,B,J),denotes_prolog_implies(E,L,I),denotes_deref(A,L),'denotes_.'(M,N,C),'denotes_.'(A,O,N),'denotes_.'(B,D,O),denotes_pref(M).
rtest_deref(A,A,B,C,D,E,F,G):-neg(H),cut,constC(F,I,G),update_formula(J,D,E),denotes_deref(A,J),denotes_deref(A,I),denotes_write_once(H),'denotes_.'(A,C,B).
rtest_deref(A,A,B,B,C,C,D,D):-true.
update_formula(A,B,C):-xupdate_formula(A,D,B,E,F,C),denotes_yes(E),denotes_prolog(D).
rtests(A,B,C,D,E,F,G):-neg(H),cut,rtest(A,B,C,D,E,F,G),'denotes_='(A,I,H),'denotes_,'(J,K,I).
rtests(A,B,C,D,E,F,G):-cut,rtest(H,B,C,I,E,F,J),rtests(K,B,I,D,E,J,G),'denotes_,'(H,K,A).
rtest_1(A,B,C,C,D,D):-cut,denotes_true(A).
rtest_1(A,B,C,D,E,F):-arg(G,A,H),rtest(A,H,C,D,B,E,F),denotes_1(G).
rtests_1(A,B,C,D,E,F):-neg(G),cut,rtest_1(A,B,C,D,E,F),'denotes_='(A,H,G),'denotes_,'(I,J,H).
rtests_1(A,B,C,D,E,F):-cut,rtest_1(G,B,C,H,E,I),rtests_1(J,B,H,D,I,F),'denotes_,'(G,J,A).
expand_test(A,B,C,D,E,F,G):-cut,constC(F,H,G),denotes_deref(C,C,H),denotes_deref(B,A).
expand_test(A,B,C,D,E,F,G):-cut,constC(F,H,G),denotes_trail(C,H),denotes_trail(B,A).
expand_test(A,B,C,D,E,F,G):-cut,tag(H,I),constC(F,J,K),constC(K,L,M),constC(M,N,G),denotes_label(O,N),denotes_trail(C,L),denotes_test(P,I,C,O,J),denotes_ne(P),denotes_var(H),denotes_trail_if_var(B,A).
expand_test(A,B,C,D,E,F,G):-cut,constC(F,H,G),tag(I,J),denotes_atom(I),denotes_equal(C,K,E,H),'denotes_^'(J,L,K),'denotes_[]'(L),denotes_nil(B,A).
expand_test(A,B,C,D,E,F,G):-atomic(H),cut,atomic_word(H,I),constC(F,J,G),denotes_equal(C,I,E,J),'denotes_=='(B,H,A).
expand_test(A,B,C,D,E,F,G):-atomic(H),cut,atomic_word(H,I),constC(F,J,G),denotes_equal(C,I,E,J),'denotes_=='(H,B,A).
expand_test(A,B,C,D,E,F,G):-cut,expand_test(H,B,C,I,E,F,J),arith_test(K,L),constC(J,M,G),denotes_jump(L,C,N,E,M),denotes_0(N),'denotes_>='(O,P,K),denotes_integer(B,H),denotes_negative(B,A).
expand_test(A,B,C,D,E,F,G):-cut,expand_test(H,B,C,I,E,F,J),arith_test(K,L),constC(J,M,G),denotes_jump(L,C,N,E,M),denotes_0(N),'denotes_<'(O,P,K),denotes_integer(B,H),denotes_nonnegative(B,A).
expand_test(A,B,C,D,E,F,G):-test_tag(A,B,H),cut,constC(F,I,G),denotes_test(J,H,C,E,I),denotes_ne(J).
expand_test(A,B,C,D,E,F,G):-cut,tag(H,I),constC(F,J,K),constC(K,L,M),constC(M,N,O),constC(O,P,G),denotes_label(Q,P),denotes_jump(E,N),denotes_equal(C,R,Q,L),'denotes_^'(I,S,R),'denotes_[]'(S),denotes_test(T,I,C,E,J),denotes_ne(T),denotes_atom(H),'denotes_$atom_nonnil'(B,A).
expand_test(A,B,C,D,E,F,G):-neg(H),cut,constC(F,I,G),denotes_jump(E,I),denotes_float(B,H),denotes_float(B,A).
expand_test(A,B,C,D,E,F,G):-cut,constC(F,H,G),tag(I,J),denotes_var(I),denotes_test(K,J,C,E,H),denotes_eq(K),denotes_nonvar(B,A).
expand_test(A,B,C,D,E,F,G):-atom(H),integer(I),ident(H,J),ident(I,K),ctest(L,D,F,M),cut,constC(M,N,G),tag(O,P),denotes_cons(O),denotes_test(Q,P,C,E,N),denotes_ne(Q),denotes_nonvar(B,L),denotes_2(K),'denotes_.'(J),denotes_functor(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-atom(H),integer(I),gt(I,J),(K;L),ctest(M,D,F,N),cut,tag(O,P,N,Q),test_one_tag(R,C,D,E,Q,S),tag(T,U),constC(S,V,W),constC(W,X,Y),constC(Y,Z,G),denotes_equal(A1,B1,E,Z),'denotes_^'(P,C1,B1),'denotes_/'(H,I,C1),'denotes_.'(C,D1,A1),'denotes_[]'(D1),denotes_pragma(E1,X),denotes_align(C,F1,E1),denotes_1(F1),denotes_pragma(G1,V),denotes_tag(C,U,G1),denotes_structure(T),denotes_structure(B,R),denotes_atom(O),denotes_nonvar(B,M),'denotes_\\=='(I,H1,L),denotes_2(H1),'denotes_\\=='(H,I1,K),'denotes_.'(I1),denotes_0(J),denotes_functor(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-atom(H),integer(I),ident(I,J),ctest(K,D,F,L),cut,tag(M,N,L,O),constC(O,P,G),denotes_equal(C,Q,E,P),'denotes_^'(N,H,Q),denotes_atom(M),denotes_nonvar(B,K),denotes_0(J),denotes_functor(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-number(H),integer(I),ident(I,J),ctest(K,D,F,L),cut,constC(L,M,G),denotes_equal(C,H,E,M),denotes_nonvar(B,K),denotes_0(J),denotes_functor(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-atom(H),integer(I),ident(H,J),ident(I,K),cut,constC(F,L,G),tag(M,N),denotes_cons(M),denotes_test(O,N,C,E,L),denotes_ne(O),denotes_2(K),'denotes_.'(J),'denotes_$name_arity'(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-atom(H),integer(I),gt(I,J),(K;L),cut,tag(M,N,F,O),test_one_tag(P,C,D,E,O,Q),tag(R,S),constC(Q,T,U),constC(U,V,W),constC(W,X,G),denotes_equal(Y,Z,E,X),'denotes_^'(N,A1,Z),'denotes_/'(H,I,A1),'denotes_.'(C,B1,Y),'denotes_[]'(B1),denotes_pragma(C1,V),denotes_align(C,D1,C1),denotes_1(D1),denotes_pragma(E1,T),denotes_tag(C,S,E1),denotes_structure(R),denotes_structure(B,P),denotes_atom(M),'denotes_\\=='(I,F1,L),denotes_2(F1),'denotes_\\=='(H,G1,K),'denotes_.'(G1),denotes_0(J),'denotes_$name_arity'(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-atom(H),integer(I),ident(I,J),cut,tag(K,L,F,M),constC(M,N,G),denotes_equal(C,O,E,N),'denotes_^'(L,H,O),denotes_atom(K),denotes_0(J),'denotes_$name_arity'(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-number(H),integer(I),ident(I,J),cut,constC(F,K,G),denotes_equal(C,H,E,K),denotes_0(J),'denotes_$name_arity'(B,H,I,A).
expand_test(A,B,C,D,E,F,G):-test_to_disj(A,B,H),expand_test_disj(H,C,D,E,F,G).
update_choice(A,B,C,C):-cut,denotes_no_update(A).
update_choice(A,B,C,D):-update_formula(B,C,D),denotes_update(A).
rtest_m(A,B,C,D,E,F):-rtest_m_nf(A,B,C,E,F),update_formula(A,C,D).
rtest_m_nf(A,B,C,D,E):-cut,constC(D,F,E),denotes_fail(F),denotes_fail(C),'denotes_$varlist'(G,B),'denotes_[]'(G).
rtest_m_nf(A,B,C,D,E):-expand(A,A,B,C,F,D,E).
rtests_m(A,B,C,D,E,F):-rtests_m_nf(A,B,C,E,F),update_formula(A,C,D).
rtests_m_nf(A,B,C,D,E):-cut,rtest_m_nf(F,G,C,D,H),rtests_m_nf(I,J,C,H,E),'denotes_,'(G,J,B),'denotes_,'(F,I,A).
rtests_m_nf(A,B,C,D,E):-rtest_m_nf(A,B,C,D,E).
expand(A,B,C,D,D,E,E):-cut,denotes_true(C),denotes_true(B),denotes_true(A).
expand(A,B,C,D,D,E,F):-cut,'denotes_.'(G,F,E),denotes_equal(H,I,J,G),denotes_fail(J),'denotes_$equal'(H,I,C),'denotes_$equal'(H,I,B).
expand(A,B,C,D,D,E,F):-arg(G,B,H),expand_test(A,H,D,E,F),cut,denotes_1(G),'denotes_$varlist'(I,C),'denotes_.'(H,J,I),'denotes_[]'(J).
expand(A,B,C,D,D,E,F):-cut,'denotes_.'(G,H,E),'denotes_.'(I,F,H),denotes_label(J,I),denotes_choice(K,L,J,G),'denotes_[]'(L),'denotes_/'(M,N,K),denotes_2(N),denotes_1(M),'denotes_$varlist'(O,C),'denotes_[]'(O),denotes_repeat(B),denotes_repeat(A).
expand(A,B,C,D,D,E,F):-cut,'denotes_.'(G,F,E),denotes_fail(G),denotes_fail(C),denotes_fail(B).
expand(A,B,C,D,D,E,F):-implies(D,G),cut,'denotes_;'(H,I,G),denotes_simple(J,I),denotes_simple(K,H),'denotes_.'(L,F,E),denotes_equal(M,N,O,L),denotes_fail(O),'denotes_$varlist'(P,C),'denotes_.'(M,Q,P),'denotes_.'(N,R,Q),'denotes_[]'(R),'denotes_=='(M,N,B),'denotes_=='(K,J,A).
expand(A,B,C,D,D,E,F):-implies(D,G),cut,'denotes_;'(H,I,G),denotes_simple(J,I),denotes_simple(K,H),'denotes_.'(L,M,E),'denotes_.'(N,O,M),'denotes_.'(P,F,O),denotes_label(Q,P),denotes_fail(N),denotes_equal(R,S,Q,L),'denotes_$varlist'(T,C),'denotes_.'(R,U,T),'denotes_.'(S,V,U),'denotes_[]'(V),'denotes_\\=='(R,S,B),'denotes_\\=='(K,J,A).
expand(A,B,C,D,D,E,F):-cut,'denotes_.'(G,F,E),denotes_move(H,I,G),denotes_r(J,H),denotes_b(J),'denotes_$varlist'(K,C),'denotes_.'(I,L,K),'denotes_[]'(L),'denotes_$cut_load'(I,B).
expand(A,B,C,D,D,E,F):-cut,'denotes_.'(G,F,E),denotes_cut(H,G),'denotes_$varlist'(I,C),'denotes_.'(H,J,I),'denotes_[]'(J),'denotes_$cut_deep'(H,B).
expand(A,B,C,D,D,E,F):-cut,'denotes_.'(G,F,E),denotes_cut(H,G),'denotes_$varlist'(I,C),'denotes_.'(H,J,I),'denotes_[]'(J),'denotes_$cut_shallow'(H,B).
expand(A,B,C,D,E,F,G):-cut,expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_and(H),'denotes_$varlist'(O,C),'denotes_$and'(L,M,N,B),'denotes_$and'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_or(H),'denotes_$varlist'(O,C),'denotes_$or'(L,M,N,B),'denotes_$or'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_xor(H),'denotes_$varlist'(O,C),'denotes_$xor'(L,M,N,B),'denotes_$xor'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_sll(H),'denotes_$varlist'(O,C),'denotes_$sll'(L,M,N,B),'denotes_$sll'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_sra(H),'denotes_$varlist'(O,C),'denotes_$sra'(L,M,N,B),'denotes_$sra'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_integer(H,I,J,K,L,M,N,D,E,F,G),'denotes_[]'(N),denotes_not(H),'denotes_$varlist'(M,C),'denotes_$not'(K,L,B),'denotes_$not'(I,J,A).
expand(A,B,C,D,E,F,G):-expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_div(H),'denotes_$varlist'(O,C),'denotes_$idiv'(L,M,N,B),'denotes_$idiv'(I,J,K,A).
expand(A,B,C,D,E,F,G):-expand_integer(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_mod(H),'denotes_$varlist'(O,C),'denotes_$mod'(L,M,N,B),'denotes_$mod'(I,J,K,A).
expand(A,B,C,D,E,F,G):-arith_test(A,H,I,J),cut,arith_test(B,K,L,M),expand_cmp(J,H,I,K,L,N,O,P,Q,D,E,F,G),'denotes_[]'(Q),denotes_fail(O),denotes_false(N),'denotes_$varlist'(P,C).
expand(A,B,C,D,E,F,G):-cut,expand_arith(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_add(H),'denotes_$varlist'(O,C),'denotes_$add'(L,M,N,B),'denotes_$add'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_arith(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_sub(H),'denotes_$varlist'(O,C),'denotes_$sub'(L,M,N,B),'denotes_$sub'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_arith(H,I,J,K,L,M,N,O,P,D,E,F,G),'denotes_[]'(P),denotes_mul(H),'denotes_$varlist'(O,C),'denotes_$mul'(L,M,N,B),'denotes_$mul'(I,J,K,A).
expand(A,B,C,D,E,F,G):-cut,expand_force(H,I,J,K,L,M,N,O,P,Q,D,E,F,G),'denotes_[]'(Q),denotes_float(I),denotes_div(H),'denotes_$varlist'(P,C),'denotes_$fdiv'(M,N,O,B),'denotes_$fdiv'(J,K,L,A).
expand(A,B,C,D,E,F,G):-implies(D,H),cut,update_formula(I,D,E),denotes_float(J,I),denotes_integer(K,H),'denotes_.'(L,G,F),denotes_i2f(M,N,L),'denotes_$varlist'(O,C),'denotes_.'(P,Q,O),'denotes_.'(M,R,Q),'denotes_.'(N,S,R),'denotes_[]'(S),denotes_pref(P),'denotes_$if2f'(M,N,B),'denotes_$if2f'(K,J,A).
expand(A,B,C,D,E,F,G):-implies(D,H),cut,update_formula(I,D,E),denotes_float(J,I),denotes_float(K,H),'denotes_.'(L,G,F),denotes_move(M,N,L),'denotes_$varlist'(O,C),'denotes_.'(P,Q,O),'denotes_.'(M,R,Q),'denotes_.'(N,S,R),'denotes_[]'(S),denotes_pref(P),'denotes_$if2f'(M,N,B),'denotes_$if2f'(K,J,A).
expand(A,B,C,D,E,F,G):-cut,tag(H,I),arith_error(J,K,L,D,M,N,O),update_formula(P,M,E),denotes_float(Q,P),'denotes_.'(R,S,O),'denotes_.'(T,G,S),denotes_label(U,T),denotes_move(V,W,R),denotes_i2f(V,W,L),denotes_yes(K),denotes_not(X,J),'denotes_.'(Y,Z,X),'denotes_.'(V,A1,Z),'denotes_[]'(A1),denotes_float(B1,Y),denotes_integer(H),'denotes_.'(C1,D1,F),'denotes_.'(E1,F1,D1),'denotes_.'(G1,H1,F1),'denotes_.'(I1,N,H1),denotes_label(J1,I1),denotes_jump(U,G1),denotes_i2f(V,W,E1),denotes_test(K1,I,V,J1,C1),denotes_ne(K1),'denotes_$varlist'(L1,C),'denotes_.'(M1,N1,L1),'denotes_.'(V,O1,N1),'denotes_.'(W,P1,O1),'denotes_[]'(P1),denotes_pref(M1),'denotes_$if2f'(V,W,B),'denotes_$if2f'(B1,Q,A).
expand(A,B,C,D,E,F,G):-fail,cut,warning(H),arith_error(I,J,K,D,L,F,G),update_formula(M,L,E),denotes_fail(M),denotes_i2f(N,O,K),denotes_no(J),denotes_true(I),'denotes_.'(P,Q,H),'denotes_[]'(Q),'denotes_Illegal use of function float(X): float option is disabled.'(P),'denotes_$varlist'(R,C),'denotes_.'(S,T,R),'denotes_.'(N,U,T),'denotes_.'(O,V,U),'denotes_[]'(V),denotes_pref(S),'denotes_$if2f'(N,O,B),'denotes_$if2f'(W,X,A).
expand(A,B,C,D,E,F,G):-implies(D,H),cut,update_formula(I,D,E),denotes_integer(J,I),denotes_float(K,H),'denotes_.'(L,G,F),denotes_f2i(M,N,L),'denotes_$varlist'(O,C),'denotes_.'(P,Q,O),'denotes_.'(M,R,Q),'denotes_.'(N,S,R),'denotes_[]'(S),denotes_pref(P),'denotes_$if2i'(M,N,B),'denotes_$if2i'(K,J,A).
expand(A,B,C,D,E,F,G):-implies(D,H),cut,update_formula(I,D,E),denotes_integer(J,I),denotes_integer(K,H),'denotes_.'(L,G,F),denotes_move(M,N,L),'denotes_$varlist'(O,C),'denotes_.'(P,Q,O),'denotes_.'(M,R,Q),'denotes_.'(N,S,R),'denotes_[]'(S),denotes_pref(P),'denotes_$if2i'(M,N,B),'denotes_$if2i'(K,J,A).
expand(A,B,C,D,E,F,G):-cut,tag(H,I),arith_error(J,K,L,D,M,N,O),update_formula(P,M,E),denotes_integer(Q,P),'denotes_.'(R,S,O),'denotes_.'(T,G,S),denotes_label(U,T),denotes_move(V,W,R),denotes_f2i(V,W,L),denotes_yes(K),denotes_not(X,J),'denotes_.'(Y,Z,X),'denotes_.'(V,A1,Z),'denotes_[]'(A1),denotes_integer(B1,Y),denotes_float(H),'denotes_.'(C1,D1,F),'denotes_.'(E1,F1,D1),'denotes_.'(G1,H1,F1),'denotes_.'(I1,N,H1),denotes_label(J1,I1),denotes_jump(U,G1),denotes_f2i(V,W,E1),denotes_test(K1,I,V,J1,C1),denotes_ne(K1),'denotes_$varlist'(L1,C),'denotes_.'(M1,N1,L1),'denotes_.'(V,O1,N1),'denotes_.'(W,P1,O1),'denotes_[]'(P1),denotes_pref(M1),'denotes_$if2i'(V,W,B),'denotes_$if2i'(B1,Q,A).
expand(A,B,C,D,E,F,G):-fail,cut,arith_error(H,I,J,D,E,F,K),'denotes_.'(L,G,K),denotes_move(M,N,L),denotes_f2i(M,N,J),denotes_no(I),denotes_not(O,H),'denotes_.'(P,Q,O),'denotes_.'(M,R,Q),'denotes_[]'(R),denotes_integer(S,P),'denotes_$varlist'(T,C),'denotes_.'(U,V,T),'denotes_.'(M,W,V),'denotes_.'(N,X,W),'denotes_[]'(X),denotes_pref(U),'denotes_$if2i'(M,N,B),'denotes_$if2i'(S,Y,A).
expand_test(A,B,C,D,E):-expand_test(A,B,C,F,D,E),denotes_fail(F).
expand_test(A,B,C,D,E,E):-prolog_implies(C,A),cut.
expand_test(A,B,C,D,E,F):-prolog_implies(C,G),cut,constC(E,H,F),denotes_jump(D,H),denotes_not(A,G).
expand_test(A,B,C,D,E,F):-expand_test(A,G,B,C,D,E,F).
atomic_word(A,A):-number(A),cut.
atomic_word(A,B):-atom(A),cut,term_tag(C,D),denotes_atom(C),'denotes_^'(D,A,B).
test_one_tag(A,B,C,D,E,F):-test_one_tag(G,A,B,C,D,E,F),denotes_ne(G).
expand_test_disj(A,B,C,D,E,F):-expand_test_disj(A,B,C,G,D,E,F).
expand_test_disj(A,B,C,D,E,F,G):-constC(F,H,I),constC(I,J,G),denotes_label(D,J),denotes_jump(E,H),denotes_fail(A).
expand_test_disj(A,B,C,D,E,F,G):-expand_test(H,B,C,I,F,J),constC(J,K,L),constC(L,M,N),expand_test_disj(O,B,C,D,E,N,G),denotes_label(I,M),denotes_jump(D,K),'denotes_;'(H,O,A).
test_one_tag(A,B,C,D,E,F,G):-tag(B,H,F,I),neg(J),cut,constC(I,K,G),denotes_test(A,H,C,E,K),denotes_ctest(B,D,J).
test_one_tag(A,B,C,D,E,F,F):-true.
expand_integer(A,B,C,D,E,F,G,H,I,J,K,L,M):-arith_instr(A,E,F,G,N,O),(P;Q),arith_error(R,S,O,J,T,L,U),update_formula(V,T,W),update_formula(X,W,Y),update_formula(Z,Y,K),denotes_integer(D,Z),denotes_integer(C,X),denotes_integer(B,V),'denotes_.'(O,M,U),denotes_or(A1,B1,R),denotes_not(C1,B1),'denotes_.'(D1,E1,C1),'denotes_.'(F,F1,E1),'denotes_[]'(F1),denotes_integer(C,D1),denotes_not(G1,A1),'denotes_.'(H1,I1,G1),'denotes_.'(E,J1,I1),'denotes_[]'(J1),denotes_integer(B,H1),'denotes_='(S,K1,Q),denotes_no(K1),'denotes_->'(L1,M1,P),'denotes_='(S,N1,M1),denotes_yes(N1),denotes_true(L1),denotes_integer(N),'denotes_.'(E,O1,H),'denotes_.'(F,P1,O1),'denotes_.'(G,I,P1).
expand_integer(A,B,C,D,E,F,G,H,I,J,K):-arith_instr(A,D,L,E,M,N),(O;P),arith_error(Q,R,N,H,S,J,T),update_formula(U,S,V),update_formula(W,V,I),denotes_integer(C,W),denotes_integer(B,U),'denotes_.'(N,K,T),denotes_not(X,Q),'denotes_.'(Y,Z,X),'denotes_.'(D,A1,Z),'denotes_[]'(A1),denotes_integer(B,Y),'denotes_='(R,B1,P),denotes_no(B1),'denotes_->'(C1,D1,O),'denotes_='(R,E1,D1),denotes_yes(E1),denotes_true(C1),denotes_integer(M),'denotes_.'(D,F1,F),'denotes_.'(E,G,F1).
expand_cmp(A,B,C,D,E,F,G,H,I,J,K,L,M):-fail,cut,arith_cmp(A,D,E,F,G,N),arith_error(O,P,N,J,Q,L,R),update_formula(S,Q,T),update_formula(U,T,K),denotes_integer(C,U),denotes_integer(B,S),'denotes_.'(N,M,R),denotes_no(P),denotes_or(V,W,O),denotes_not(X,W),'denotes_.'(Y,Z,X),'denotes_.'(E,A1,Z),'denotes_[]'(A1),denotes_integer(C,Y),denotes_not(B1,V),'denotes_.'(C1,D1,B1),'denotes_.'(D,E1,D1),'denotes_[]'(E1),denotes_integer(B,C1),'denotes_.'(D,F1,H),'denotes_.'(E,I,F1).
expand_cmp(A,B,C,D,E,F,G,H,I,J,J,K,L):-implies(J,M),cut,arith_cmp(A,D,E,F,G,N),'denotes_,'(O,P,M),denotes_integer(C,P),denotes_integer(B,O),'denotes_.'(N,L,K),'denotes_.'(D,Q,H),'denotes_.'(E,I,Q).
expand_cmp(A,B,C,D,E,F,G,H,I,J,K,L,M):-implies(J,N),cut,cond_to_float(A,O),arith_cmp(O,P,Q,F,G,R),convert2float(B,D,P,R,H,S,J,T,L,U),convert2float(C,E,Q,R,S,V,T,W,U,X),arith_error(Y,Z,R,W,A1,X,B1),make_float_types(C1,D1),update_formula(D1,A1,K),'denotes_.'(B,E1,C1),'denotes_.'(C,F1,E1),'denotes_[]'(F1),'denotes_.'(R,M,B1),denotes_yes(Z),denotes_or(G1,H1,Y),denotes_not(I1,H1),'denotes_.'(J1,K1,I1),'denotes_.'(Q,L1,K1),'denotes_[]'(L1),denotes_float(C,J1),denotes_not(M1,G1),'denotes_.'(N1,O1,M1),'denotes_.'(P,P1,O1),'denotes_[]'(P1),denotes_float(B,N1),'denotes_.'(P,Q1,V),'denotes_.'(Q,I,Q1),'denotes_;'(R1,S1,N),denotes_float(C,S1),denotes_float(B,R1).
expand_cmp(A,B,C,D,E,F,G,H,I,J,K,L,M):-cut,tag(N,O),cond_to_float(A,P),arith_cmp(A,D,E,F,G,Q),arith_cmp(P,R,S,F,G,T),convert2float(B,D,R,T,H,U,J,V,W,X),convert2float(C,E,S,T,U,Y,V,Z,A1,B1),arith_error(C1,D1,T,Z,K,E1,F1),'denotes_.'(T,G1,F1),'denotes_.'(H1,M,G1),denotes_label(I1,H1),denotes_yes(D1),denotes_or(J1,K1,C1),denotes_not(L1,K1),'denotes_.'(M1,N1,L1),'denotes_.'(S,O1,N1),'denotes_[]'(O1),denotes_float(C,M1),denotes_not(P1,J1),'denotes_.'(Q1,R1,P1),'denotes_.'(R,S1,R1),'denotes_[]'(S1),denotes_float(B,Q1),'denotes_.'(T1,E1,B1),denotes_label(U1,T1),'denotes_.'(R,V1,Y),'denotes_.'(S,I,V1),'denotes_.'(W1,X1,X),'denotes_.'(Y1,A1,X1),denotes_label(Z1,Y1),denotes_jump(U1,W1),denotes_integer(N),'denotes_.'(A2,B2,L),'denotes_.'(C2,D2,B2),'denotes_.'(Q,E2,D2),'denotes_.'(F2,G2,E2),'denotes_.'(H2,W,G2),denotes_label(I2,H2),denotes_jump(I1,F2),denotes_test(J2,O,E,I2,C2),denotes_ne(J2),denotes_test(K2,O,D,Z1,A2),denotes_ne(K2).
expand_arith(A,B,C,D,E,F,G,H,I,J,K,L,M):-fail,cut,arith_instr(A,E,F,G,N,O),arith_error(P,Q,O,J,R,L,S),update_formula(T,R,U),update_formula(V,U,W),update_formula(X,W,K),denotes_integer(D,X),denotes_integer(C,V),denotes_integer(B,T),'denotes_.'(O,M,S),denotes_no(Q),denotes_or(Y,Z,P),denotes_not(A1,Z),'denotes_.'(B1,C1,A1),'denotes_.'(F,D1,C1),'denotes_[]'(D1),denotes_integer(C,B1),denotes_not(E1,Y),'denotes_.'(F1,G1,E1),'denotes_.'(E,H1,G1),'denotes_[]'(H1),denotes_integer(B,F1),denotes_integer(N),'denotes_.'(E,I1,H),'denotes_.'(F,J1,I1),'denotes_.'(G,I,J1).
expand_arith(A,B,C,D,E,F,G,H,I,J,K,L,M):-implies(J,N),cut,arith_instr(A,E,F,G,O,P),update_formula(Q,J,K),denotes_integer(D,Q),denotes_integer(O),'denotes_,'(R,S,N),denotes_integer(C,S),denotes_integer(B,R),'denotes_.'(P,M,L),'denotes_.'(E,T,H),'denotes_.'(F,U,T),'denotes_.'(G,I,U).
expand_arith(A,B,C,D,E,F,G,H,I,J,K,L,M):-implies(J,N),cut,arith_instr(A,O,P,G,Q,R),convert2float(B,E,O,R,H,S,J,T,L,U),convert2float(C,F,P,R,S,V,T,W,U,X),arith_error(Y,Z,R,W,A1,X,B1),make_float_types(C1,D1),update_formula(D1,A1,K),'denotes_.'(B,E1,C1),'denotes_.'(C,F1,E1),'denotes_.'(D,G1,F1),'denotes_[]'(G1),'denotes_.'(R,M,B1),denotes_yes(Z),denotes_or(H1,I1,Y),denotes_not(J1,I1),'denotes_.'(K1,L1,J1),'denotes_.'(P,M1,L1),'denotes_[]'(M1),denotes_float(C,K1),denotes_not(N1,H1),'denotes_.'(O1,P1,N1),'denotes_.'(O,Q1,P1),'denotes_[]'(Q1),denotes_float(B,O1),'denotes_.'(O,R1,V),'denotes_.'(P,S1,R1),'denotes_.'(G,I,S1),denotes_float(Q),'denotes_;'(T1,U1,N),denotes_float(C,U1),denotes_float(B,T1).
expand_arith(A,B,C,D,E,F,G,H,I,J,K,L,M):-cut,tag(N,O),arith_instr(A,E,F,G,P,Q),arith_instr(A,R,S,G,T,U),convert2float(B,E,R,U,H,V,J,W,X,Y),convert2float(C,F,S,U,V,Z,W,A1,B1,C1),arith_error(D1,E1,U,A1,K,F1,G1),'denotes_.'(U,H1,G1),'denotes_.'(I1,M,H1),denotes_label(J1,I1),denotes_yes(E1),denotes_or(K1,L1,D1),denotes_not(M1,L1),'denotes_.'(N1,O1,M1),'denotes_.'(S,P1,O1),'denotes_[]'(P1),denotes_float(C,N1),denotes_not(Q1,K1),'denotes_.'(R1,S1,Q1),'denotes_.'(R,T1,S1),'denotes_[]'(T1),denotes_float(B,R1),'denotes_.'(U1,F1,C1),denotes_label(V1,U1),'denotes_.'(R,W1,Z),'denotes_.'(S,X1,W1),'denotes_.'(G,I,X1),'denotes_.'(Y1,Z1,Y),'denotes_.'(A2,B1,Z1),denotes_label(B2,A2),denotes_jump(V1,Y1),denotes_float(T),denotes_integer(P),denotes_integer(N),'denotes_.'(C2,D2,L),'denotes_.'(E2,F2,D2),'denotes_.'(Q,G2,F2),'denotes_.'(H2,I2,G2),'denotes_.'(J2,X,I2),denotes_label(K2,J2),denotes_jump(J1,H2),denotes_test(L2,O,F,K2,E2),denotes_ne(L2),denotes_test(M2,O,E,B2,C2),denotes_ne(M2).
expand_force(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-cut,arith_instr(O,P,Q,H,R,S),convert2float(C,F,P,S,I,T,K,U,M,V),convert2float(D,G,Q,S,T,W,U,X,V,Y),arith_error(Z,A1,S,X,B1,Y,C1),make_float_types(D1,E1),update_formula(E1,B1,L),'denotes_.'(C,F1,D1),'denotes_.'(D,G1,F1),'denotes_.'(E,H1,G1),'denotes_[]'(H1),'denotes_.'(S,N,C1),denotes_yes(A1),denotes_or(I1,J1,Z),denotes_not(K1,J1),'denotes_.'(L1,M1,K1),'denotes_.'(Q,N1,M1),'denotes_[]'(N1),denotes_float(D,L1),denotes_not(O1,I1),'denotes_.'(P1,Q1,O1),'denotes_.'(P,R1,Q1),'denotes_[]'(R1),denotes_float(C,P1),'denotes_.'(P,S1,W),'denotes_.'(Q,T1,S1),'denotes_.'(H,J,T1),denotes_float(R),denotes_div(O),denotes_float(B),denotes_div(A).
expand_force(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-fail,cut,warning(O),arith_instr(P,F,G,H,Q,R),arith_error(S,T,R,K,U,M,N),update_formula(V,U,L),denotes_fail(V),denotes_no(T),denotes_true(S),denotes_float(Q),denotes_div(P),'denotes_.'(W,X,O),'denotes_[]'(X),'denotes_Illegal use of X/Y: float option is disabled.'(W),'denotes_.'(F,Y,I),'denotes_.'(G,Z,Y),'denotes_.'(H,J,Z),denotes_float(B),denotes_div(A).
arith_error(A,B,C,D,D,E,E):-fail,cut,true.
arith_error(A,B,C,D,D,E,E):-cut,denotes_nop(C).
arith_error(A,B,C,D,D,E,F):-cut,error_routine(C,G,H),'denotes_.'(I,F,E),denotes_error_jump(G,H,I),denotes_true(A).
arith_error(A,B,C,D,E,F,G):-single_check(H,B,I,J,C,D,K,F,L),single_check(M,B,I,J,C,K,E,L,N),ident(J,O),cut,error_routine(C,P,Q),denotes_yes(O),'denotes_.'(R,S,N),'denotes_.'(T,U,S),'denotes_.'(V,W,U),'denotes_.'(X,G,W),denotes_label(Y,X),denotes_error_jump(P,Q,V),denotes_label(I,T),denotes_jump(Y,R),denotes_or(Z,A1,A),denotes_not(M,A1),denotes_not(H,Z).
arith_error(A,B,C,D,E,F,G):-single_check(H,B,I,J,C,D,E,F,K),ident(J,L),cut,error_routine(C,M,N),denotes_yes(L),'denotes_.'(O,P,K),'denotes_.'(Q,R,P),'denotes_.'(S,T,R),'denotes_.'(U,G,T),denotes_label(V,U),denotes_error_jump(M,N,S),denotes_label(I,Q),denotes_jump(V,O),denotes_not(H,A).
arith_error(A,B,C,D,D,E,E):-true.
expand_cmp_det(A,B,C,D,E,F,G,H,I,J,K):-expand_cmp(A,B,C,D,E,F,G,L,M,H,I,J,K),true.
arith_cmp(A,B,C,D,E,F):-arith_comparison(A,B,C,D,E,G,H),'denotes_[]'(H),'denotes_.'(F,I,G),'denotes_[]'(I).
convert2float(A,B,B,C,D,D,E,E,F,F):-implies(E,G),cut,denotes_float(A,G).
convert2float(A,B,C,D,E,E,F,F,G,G):-integer(B),cut,exprEval(C,H),denotes_float(B,H).
convert2float(A,B,B,C,D,D,E,E,F,G):-implies(E,H),cut,denotes_integer(A,H),'denotes_.'(I,G,F),denotes_i2f(B,B,I).
convert2float(A,B,B,C,D,D,E,E,F,G):-tag(H,I),denotes_integer(H),'denotes_.'(J,K,F),'denotes_.'(L,M,K),'denotes_.'(N,G,M),denotes_label(O,N),denotes_i2f(B,B,L),denotes_test(P,I,B,O,J),denotes_ne(P).
make_float_types(A,B):-denotes_true(B),'denotes_[]'(A).
make_float_types(A,B):-nonvar(C),cut,make_float_types(D,B),'denotes_.'(C,D,A).
make_float_types(A,B):-var(C),cut,make_float_types(D,E),'denotes_,'(F,E,B),denotes_float(C,F),'denotes_.'(C,D,A).
arith_comparison(A,B,C,D,E,F,G):-cut,constC(F,H,G),denotes_jump(A,B,C,E,H),denotes_true(D).
arith_comparison(A,B,C,D,E,F,G):-cut,cond(A,H),constC(F,I,G),denotes_jump(H,B,C,E,I),denotes_false(D).
arith_instr(A,B,C,D,E,F):-denotes_and(B,C,D,F),denotes_integer(E),denotes_and(A).
arith_instr(A,B,C,D,E,F):-denotes_or(B,C,D,F),denotes_integer(E),denotes_or(A).
arith_instr(A,B,C,D,E,F):-denotes_xor(B,C,D,F),denotes_integer(E),denotes_xor(A).
arith_instr(A,B,C,D,E,F):-denotes_sll(B,C,D,F),denotes_integer(E),denotes_sll(A).
arith_instr(A,B,C,D,E,F):-denotes_sra(B,C,D,F),denotes_integer(E),denotes_sra(A).
arith_instr(A,B,C,D,E,F):-denotes_not(B,D,F),denotes_integer(E),denotes_not(A).
arith_instr(A,B,C,D,E,F):-denotes_add(B,C,D,F),denotes_integer(E),denotes_add(A).
arith_instr(A,B,C,D,E,F):-denotes_sub(B,C,D,F),denotes_integer(E),denotes_sub(A).
arith_instr(A,B,C,D,E,F):-denotes_mul(B,C,D,F),denotes_integer(E),denotes_mul(A).
arith_instr(A,B,C,D,E,F):-denotes_div(B,C,D,F),denotes_integer(E),denotes_div(A).
arith_instr(A,B,C,D,E,F):-denotes_mod(B,C,D,F),denotes_integer(E),denotes_mod(A).
arith_instr(A,B,C,D,E,F):-denotes_fadd(B,C,D,F),denotes_float(E),denotes_add(A).
arith_instr(A,B,C,D,E,F):-denotes_fsub(B,C,D,F),denotes_float(E),denotes_sub(A).
arith_instr(A,B,C,D,E,F):-denotes_fmul(B,C,D,F),denotes_float(E),denotes_mul(A).
arith_instr(A,B,C,D,E,F):-denotes_fdiv(B,C,D,F),denotes_float(E),denotes_div(A).
smart_jump(A,B,C,D,D,E,E):-implies(D,A),cut,true.
smart_jump(A,B,C,D,D,E,F):-implies(D,G),cut,denotes_not(A,G),'denotes_.'(H,F,E),denotes_jump(C,H).
smart_jump(A,B,C,D,D,E,F):-tag_always(A,G),'denotes_.'(H,F,E),denotes_test(I,G,B,C,H),denotes_ne(I).
make_integer_types(A,B):-denotes_true(B),'denotes_[]'(A).
make_integer_types(A,B):-nonvar(C),cut,make_integer_types(D,B),'denotes_.'(C,D,A).
make_integer_types(A,B):-var(C),cut,make_integer_types(D,E),'denotes_,'(F,E,B),denotes_integer(C,F),'denotes_.'(C,D,A).
arith_comparison(A,B,C,D,E):-arith_comparison(A,B,C,F,G,D,E),denotes_fail(G),denotes_false(F).
arith_comparison(A,B,C,D,E,F):-arith_comparison(A,B,C,G,D,E,F),denotes_true(G).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ eq_error'(H),denotes_jump(J,D,F,K,A),denotes_eq(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ ne_error'(H),denotes_jump(J,D,F,K,A),denotes_ne(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ lt_error'(H),denotes_jump(J,D,F,K,A),denotes_lts(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ ge_error'(H),denotes_jump(J,D,F,K,A),denotes_ges(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ gt_error'(H),denotes_jump(J,D,F,K,A),denotes_gts(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ le_error'(H),denotes_jump(J,D,F,K,A),denotes_les(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ feq_error'(H),denotes_jump(J,D,F,K,A),denotes_feq(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fne_error'(H),denotes_jump(J,D,F,K,A),denotes_fne(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ flt_error'(H),denotes_jump(J,D,F,K,A),denotes_flts(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fge_error'(H),denotes_jump(J,D,F,K,A),denotes_fges(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fgt_error'(H),denotes_jump(J,D,F,K,A),denotes_fgts(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fle_error'(H),denotes_jump(J,D,F,K,A),denotes_fles(J).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ add_error'(H),denotes_add(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ sub_error'(H),denotes_sub(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ mul_error'(H),denotes_mul(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ div_error'(H),denotes_div(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ mod_error'(H),denotes_mod(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fadd_error'(H),denotes_fadd(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fsub_error'(H),denotes_fsub(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fmul_error'(H),denotes_fmul(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ fdiv_error'(H),denotes_fdiv(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_/'(F,G,B),denotes_1(G),'denotes_$ int_error'(F),denotes_f2i(D,H,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_/'(F,G,B),denotes_1(G),'denotes_$ flt_error'(F),denotes_i2f(D,H,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_/'(F,G,B),denotes_1(G),'denotes_$ not_error'(F),denotes_not(D,H,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ and_error'(H),denotes_and(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ or_error'(H),denotes_or(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ xor_error'(H),denotes_xor(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ sll_error'(H),denotes_sll(D,F,J,A).
error_routine(A,B,C):-'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_/'(H,I,B),denotes_2(I),'denotes_$ sra_error'(H),denotes_sra(D,F,J,A).
single_check(A,B,C,D,E,F,G,H,I):-ident(J,K),cut,divmod_check(L,J,C,D,F,G,H,I),denotes_integer(M,L),denotes_div(N,K,O,E),'denotes_.'(P,Q,A),'denotes_.'(J,R,Q),'denotes_[]'(R),denotes_integer(M,P).
single_check(A,B,C,D,E,F,G,H,I):-ident(J,K),cut,divmod_check(L,J,C,D,F,G,H,I),denotes_integer(M,L),denotes_mod(N,K,O,E),'denotes_.'(P,Q,A),'denotes_.'(J,R,Q),'denotes_[]'(R),denotes_integer(M,P).
single_check(A,B,C,D,E,F,G,H,I):-ident(J,K),cut,divmod_check(L,J,C,D,F,G,H,I),denotes_float(M,L),denotes_fdiv(N,K,O,E),'denotes_.'(P,Q,A),'denotes_.'(J,R,Q),'denotes_[]'(R),denotes_float(M,P).
single_check(A,B,C,D,E,F,F,G,G):-arg(H,I,J),do_nothing_check(B,F,J),cut,denotes_1(H),'denotes_.'(I,K,A),'denotes_.'(L,M,K),'denotes_[]'(M).
single_check(A,B,C,D,E,F,F,G,H):-jump_if(I,J,K,C,G,H),denotes_ne(I),denotes_yes(D),'denotes_.'(J,L,A),'denotes_.'(K,M,L),'denotes_[]'(M).
divmod_check(A,B,C,D,E,F,G,H):-divmod_typecheck(A,B,C,D,E,I,G,J),get_typed_zero(A,K),divmod_zerocheck(A,B,C,D,K,I,F,J,H),true.
do_nothing_check(A,B,C):-implies(B,D),cut,denotes_number(C,D),denotes_yes(A).
do_nothing_check(A,B,C):-implies(B,D),cut,denotes_integer(C,D),denotes_no(A).
jump_if(A,B,C,D,E,F):-tag(G,H),constC(E,I,F),denotes_test(A,H,C,D,I),denotes_float(G),denotes_float(J,B).
jump_if(A,B,C,D,E,F):-cut,tag(G,H),constC(E,I,F),denotes_test(A,H,C,D,I),denotes_integer(G),denotes_integer(J,B).
jump_if(A,B,C,D,E,F):-fail,cut,tag(G,H),tag(I,J),constC(E,K,L),constC(L,M,F),denotes_test(N,J,C,D,M),denotes_eq(N),denotes_test(O,H,C,D,K),denotes_eq(O),denotes_nonnegative(I),denotes_negative(G),denotes_integer(P,B),denotes_eq(A).
jump_if(A,B,C,D,E,F):-fail,cut,tag(G,H),tag(I,J),constC(E,K,L),constC(L,M,N),constC(N,O,F),denotes_label(P,O),denotes_test(Q,H,C,D,M),denotes_ne(Q),denotes_test(R,J,C,P,K),denotes_eq(R),denotes_nonnegative(I),denotes_negative(G),denotes_integer(S,B),denotes_ne(A).
divmod_typecheck(A,B,C,D,E,E,F,F):-implies(E,A),cut,true.
divmod_typecheck(A,B,C,D,E,E,F,G):-jump_if(H,A,B,C,F,G),denotes_ne(H),denotes_yes(D).
get_typed_zero(A,B):-'denotes_0.0'(B),denotes_float(C,A).
get_typed_zero(A,B):-denotes_0(B),denotes_integer(C,A).
divmod_zerocheck(A,B,C,D,E,F,F,G,G):-arg(H,A,I),implies(F,J),cut,'denotes_\\=='(I,E,J),denotes_1(H).
divmod_zerocheck(A,B,C,D,E,F,F,G,H):-'denotes_.'(I,H,G),denotes_jump(J,B,E,C,I),denotes_eq(J),denotes_yes(D).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,E),'denotes_$case'(H,I,G,C),'denotes_$case'(H,I,F,B).
sub(A,B,C,D,E):-mutex(A,F,G,H),cut,stopflag(A,F,E),denotes_prolog(H),denotes_left(G),denotes_prolog(D),'denotes_$test'(I,J,F,K,L,C),denotes_fail(L),'denotes_$test'(I,J,F,K,M,B).
sub(A,B,C,D,E):-mutex(A,F,G,H),cut,stopflag(A,F,E),denotes_logical(H),denotes_after(G),denotes_logical(D),'denotes_$test'(I,J,F,K,L,C),denotes_fail(L),'denotes_$test'(I,J,F,K,M,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,E),'denotes_$test'(H,I,J,K,G,C),'denotes_$test'(H,I,J,K,F,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,E),'denotes_$else'(H,I,G,C),'denotes_$else'(H,I,F,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,H),sub(A,I,J,D,K),or(H,K,E),'denotes_;'(G,J,C),'denotes_;'(F,I,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,H),end_sub(H,A,I,J,D,E),'denotes_,'(G,J,C),'denotes_,'(F,I,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,H),end_sub(H,A,I,J,D,E),'denotes_->'(G,J,C),'denotes_->'(F,I,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,H),denotes_false(E),'denotes_\\+'(G,C),'denotes_\\+'(F,B).
sub(A,B,C,D,E):-cut,sub(A,F,G,D,E),denotes_not(G,C),denotes_not(F,B).
sub(A,B,C,D,E):-sub_goal(A,B,C,D,E).
logical_subsume(A,B,C):-cut,logical_simplify(B,C),denotes_true(A).
logical_subsume(A,B,C):-sub(A,B,D,E,F),logical_simplify(D,C),denotes_logical(E).
subsume_list(A,B,C):-'denotes_[]'(C),'denotes_[]'(B).
subsume_list(A,B,C):-split(D,E,F),subsume(A,F,G),subsume_list(A,H,I),'denotes_.'(J,I,C),'denotes_:-'(E,G,J),'denotes_.'(D,H,B).
subdisj(A,B,C):-sub(A,B,D,E,F),simplify(D,G),(H;I),'denotes_='(C,J,I),'denotes_;'(G,K,J),denotes_fail(K),'denotes_->'(L,M,H),'denotes_='(C,G,M),denotes_disj_p(G,L),denotes_prolog(E).
stopflag(A,B,C):-binding_affected(A),neg(D),cut,denotes_test_nobind(B,D),denotes_true(C).
stopflag(A,B,C):-denotes_false(C).
binding_affected(A):-binding_affected(B),cut,'denotes_,'(B,C,A).
binding_affected(A):-binding_affected(B),cut,'denotes_,'(C,B,A).
binding_affected(A):-binding_affected(B),cut,'denotes_;'(B,C,A).
binding_affected(A):-binding_affected(B),cut,'denotes_;'(C,B,A).
binding_affected(A):-cut,denotes_var(B,A).
binding_affected(A):-cut,denotes_deref(B,A).
binding_affected(A):-cut,denotes_rderef(B,A).
binding_affected(A):-an_uninit_mode(A).
an_uninit_mode(A):-an_uninit_mode(A,B,C).
end_sub(A,B,C,C,D,E):-denotes_true(E),denotes_true(A).
end_sub(A,B,C,D,E,F):-sub(B,C,D,E,F),denotes_false(A).
sub_goal(A,B,C,D,E):-mutex(A,B,F,G),cut,stopflag(A,B,E),denotes_prolog(G),denotes_left(F),denotes_prolog(D),denotes_fail(C).
sub_goal(A,B,C,D,E):-mutex(A,B,F,G),cut,stopflag(A,B,E),denotes_logical(G),denotes_after(F),denotes_logical(D),denotes_fail(C).
sub_goal(A,B,C,D,E):-subsume_work(A,B,F),bindbag(B,A,G),cut,stopflag(A,B,E),'denotes_[]'(G),denotes_left(F),denotes_prolog(D),denotes_true(C).
sub_goal(A,B,C,D,E):-logical_subsume_work(A,B,F),cut,stopflag(A,B,E),denotes_after(F),denotes_logical(D),denotes_true(C).
sub_goal(A,B,B,C,D):-stopflag(A,B,D).
subsume_work(A,B,C):-memberv_conj(B,A),cut.
subsume_work(A,B,C):-prolog_implies(A,B,C).
bindbag(A,B,C):-bindset(A,B,C).
logical_subsume_work(A,B,C):-memberv_conj(B,A),cut.
logical_subsume_work(A,B,C):-implies(A,B,C).
else(A,B,C):-simplify(D,E),subsume(E,B,C),denotes_not(A,D).
simp_upv(A,B,C):-nonvar(A),cut,simp_up(A,B,C).
simp_upv(A,B,C):-var(A),cut,denotes_call(A,B).
simpdisj(A,B):-simplify(A,C),(D;E),'denotes_='(B,F,E),'denotes_;'(C,G,F),denotes_fail(G),'denotes_->'(H,I,D),'denotes_='(B,C,I),denotes_disj_p(C,H).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_one(F,B,C),'denotes_$case'(G,H,E,F),'denotes_$case'(G,H,D,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_one(F,B,C),'denotes_$test'(G,H,I,J,E,F),'denotes_$test'(G,H,I,J,D,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_one(F,B,C),'denotes_$else'(G,H,E,F),'denotes_$else'(G,H,D,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_upv(F,G,C),simp_one(H,B,C),'denotes_,'(E,G,H),'denotes_,'(D,F,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_upv(F,G,C),simp_one(H,B,C),'denotes_;'(E,G,H),'denotes_;'(D,F,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_upv(F,G,C),simp_one(H,B,C),'denotes_->'(E,G,H),'denotes_->'(D,F,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_one(F,B,C),'denotes_\\+'(E,F),'denotes_\\+'(D,A).
simp_up(A,B,C):-cut,simp_upv(D,E,C),simp_one(F,B,C),denotes_not(E,F),denotes_not(D,A).
simp_up(A,B,C):-simp_one(A,B,C).
simp_one(A,B,C):-denotes_not(D,A),denotes_not(B,D).
simp_one(A,B,C):-denotes_logical(C),'denotes_\\='(D,E,B),denotes_not(F,A),'denotes_='(D,E,F).
simp_one(A,B,C):-denotes_logical(C),'denotes_\\='(D,E,B),'denotes_\\+'(F,A),'denotes_='(D,E,F).
simp_one(A,B,C):-opposite(D,B),denotes_not(D,A).
simp_one(A,B,C):-opposite(D,B),'denotes_\\+'(D,A).
simp_one(A,B,C):-ident(B,D),diff_sol,no_side_effects(B),denotes_prolog(C),'denotes_;'(B,D,A).
simp_one(A,B,C):-ident(B,D),denotes_logical(C),'denotes_;'(B,D,A).
simp_one(A,B,C):-ident(B,D),deterministic(B),no_side_effects(B),denotes_prolog(C),'denotes_,'(B,D,A).
simp_one(A,B,C):-ident(B,D),diff_sol,no_side_effects(B),denotes_prolog(C),'denotes_,'(B,D,A).
simp_one(A,B,C):-ident(B,D),denotes_logical(C),'denotes_,'(B,D,A).
simp_one(A,B,C):-'denotes_,'(D,B,A),denotes_true(D).
simp_one(A,B,C):-'denotes_,'(B,D,A),denotes_true(D).
simp_one(A,B,C):-diff_sol,no_side_effects(D),no_bind(D),denotes_prolog(C),denotes_true(B),'denotes_;'(E,D,A),denotes_true(E).
simp_one(A,B,C):-denotes_logical(C),denotes_true(B),'denotes_;'(D,E,A),denotes_true(D).
simp_one(A,B,C):-diff_sol,no_side_effects(D),no_bind(D),denotes_prolog(C),denotes_true(B),'denotes_;'(D,E,A),denotes_true(E).
simp_one(A,B,C):-denotes_logical(C),denotes_true(B),'denotes_;'(D,E,A),denotes_true(E).
simp_one(A,B,C):-no_side_effects(D),denotes_prolog(C),denotes_fail(B),'denotes_,'(D,E,A),denotes_fail(E).
simp_one(A,B,C):-denotes_logical(C),denotes_fail(B),'denotes_,'(D,E,A),denotes_fail(E).
simp_one(A,B,C):-denotes_fail(B),'denotes_,'(D,E,A),denotes_fail(D).
simp_one(A,B,C):-'denotes_;'(D,B,A),denotes_fail(D).
simp_one(A,B,C):-'denotes_;'(B,D,A),denotes_fail(D).
simp_one(A,B,C):-denotes_prolog(C),'denotes_,'(D,E,B),'denotes_$cut_shallow'(F,D),'denotes_;'(G,H,A),'denotes_,'(I,E,G),'denotes_$cut_shallow'(F,I).
simp_one(A,B,C):-denotes_prolog(C),'denotes_,'(D,E,B),'denotes_$cut_deep'(F,D),'denotes_;'(G,H,A),'denotes_,'(I,E,G),'denotes_$cut_deep'(F,I).
simp_one(A,B,C):-denotes_prolog(C),'denotes_$cut_shallow'(D,B),'denotes_;'(E,F,A),'denotes_$cut_shallow'(D,E).
simp_one(A,B,C):-denotes_prolog(C),'denotes_$cut_deep'(D,B),'denotes_;'(E,F,A),'denotes_$cut_deep'(D,E).
simp_one(A,B,C):-denotes_logical(C),denotes_true(B),'denotes_$cut_shallow'(D,A).
simp_one(A,B,C):-denotes_logical(C),denotes_true(B),'denotes_$cut_deep'(D,A).
simp_one(A,B,C):-'denotes_;'(D,E,A),'denotes_->'(F,B,D),denotes_true(F).
simp_one(A,B,C):-'denotes_;'(D,B,A),'denotes_->'(E,F,D),denotes_fail(E).
simp_one(A,B,C):-deterministic(B),succeeds(B),denotes_prolog(C),'denotes_;'(D,E,A),'denotes_->'(B,F,D),denotes_true(F).
simp_one(A,B,C):-succeeds(B),denotes_logical(C),'denotes_;'(D,E,A),'denotes_->'(B,F,D),denotes_true(F).
simp_one(A,B,C):-no_side_effects(D),succeeds(D),denotes_prolog(C),denotes_fail(B),'denotes_;'(E,F,A),'denotes_->'(D,G,E),denotes_fail(G).
simp_one(A,B,C):-succeeds(D),denotes_logical(C),denotes_fail(B),'denotes_;'(E,F,A),'denotes_->'(D,G,E),denotes_fail(G).
simp_one(A,B,C):-no_side_effects(D),fails(D),denotes_prolog(C),'denotes_;'(E,B,A),'denotes_->'(D,F,E).
simp_one(A,B,C):-fails(D),denotes_logical(C),'denotes_;'(E,B,A),'denotes_->'(D,F,E).
simp_one(A,B,C):-'denotes_,'(D,E,B),denotes_not(F,E),denotes_not(G,D),denotes_not(H,A),'denotes_;'(G,F,H).
simp_one(A,B,C):-fails(A),no_side_effects(A),denotes_prolog(C),denotes_fail(B).
simp_one(A,B,C):-fails(A),denotes_logical(C),denotes_fail(B).
simp_one(A,B,C):-diff_sol,succeeds(A),no_side_effects(A),no_bind(A),denotes_prolog(C),denotes_true(B).
simp_one(A,B,C):-succeeds(A),denotes_logical(C),denotes_true(B).
simp_one(A,B,C):-deterministic(A),succeeds(A),no_bind(A),denotes_prolog(C),denotes_true(B).
simp_one(A,B,C):-succeeds(A),denotes_logical(C),denotes_true(B).
simp_one(A,B,C):-nonvar(D),denotes_true(B),denotes_deref(D,A).
simp_one(A,B,C):-denotes_true(B),'denotes_$case'(D,E,F,A),denotes_true(F).
simp_one(A,B,C):-denotes_fail(B),'denotes_$case'(D,E,F,A),denotes_fail(F).
simp_one(A,B,C):-denotes_fail(B),'denotes_$test'(D,E,F,G,H,A),denotes_fail(H).
simp_one(A,B,C):-var(D),atomic(E),denotes_prolog(C),'denotes_$name_arity'(D,E,F,B),denotes_0(F),'denotes_=='(D,E,A).
simp_one(A,B,C):-var(D),atomic(E),denotes_prolog(C),'denotes_$name_arity'(D,E,F,B),denotes_0(F),'denotes_=='(E,D,A).
simp_one(A,B,C):-atomic(D),integer(E),eq(E,F),denotes_0(F),denotes_prolog(C),'denotes_='(G,D,B),denotes_functor(G,D,E,A).
simp_one(A,B,C):-atom(D),integer(E),ge(E,F),le(E,G),cut,functor(H,D,E),denotes_5(G),denotes_0(F),denotes_prolog(C),'denotes_='(I,H,B),denotes_functor(I,D,E,A).
simp_one(A,B,C):-bitmap_simplify(A,B).
simp_one(A,B,C):-ident(D,E),denotes_true(B),'denotes_='(D,E,A).
simp_one(A,A,B):-true.
det_control(A):-'denotes_$case'(B,C,D,A).
det_control(A):-'denotes_$test'(B,C,D,E,F,A).
det_control(A):-'denotes_$else'(B,C,D,A).
diff_sol:-neg(A),denotes_same_number(A).
opposite(A,B):-opp(A,B),cut.
opposite(A,B):-opp(B,A),cut.
opposite(A,B):-exact_bitmap(A),not_test(A,B).
no_side_effects(A):-cut,denotes_true(A).
no_side_effects(A):-cut,denotes_fail(A).
no_side_effects(A):-cut,no_side_effects(B),no_side_effects(C),'denotes_,'(B,C,A).
no_side_effects(A):-cut,no_side_effects(B),no_side_effects(C),'denotes_;'(B,C,A).
no_side_effects(A):-test(A).
deterministic(A):-cut,denotes_true(A).
deterministic(A):-cut,denotes_fail(A).
deterministic(A):-cut,deterministic(B),deterministic(C),'denotes_,'(B,C,A).
deterministic(A):-test(A).
no_bind(A):-cut,denotes_true(A).
no_bind(A):-cut,denotes_fail(A).
no_bind(A):-cut,no_bind(B),no_bind(C),'denotes_,'(B,C,A).
no_bind(A):-cut,no_bind(B),no_bind(C),'denotes_;'(B,C,A).
no_bind(A):-neg(B),denotes_binds(A,B).
fails(A):-denotes_fail(A).
fails(A):-fails(B),'denotes_,'(B,C,A).
fails(A):-no_side_effects(B),fails(C),'denotes_,'(B,C,A).
fails(A):-fails(B),fails(C),'denotes_;'(B,C,A).
fails(A):-encode_test(A,B,C,D),type_flags(D,E,F),exprEval(G,H),neg(I),denotes_errs(A,I),'denotes_/\\'(B,E,H),denotes_0(G).
fails(A):-encode_relop(A,B,C,D),negate_relop(C,E),test_relop(B,E,D),neg(F),denotes_errs(A,F).
errs(A):-encode_relop(A,B,C,D,E),(F;G),'denotes_;'(H,I,G),'denotes_;'(J,K,I),denotes_compound(D,K),denotes_compound(B,J),denotes_atom(D,H),denotes_atom(B,F),denotes_arith(E).
errs(A):-(B;C),denotes_compound(D,C),denotes_atom(D,B),denotes_functor(E,F,D,A).
errs(A):-(B;C),denotes_compound(D,C),denotes_atom(D,B),denotes_arg(D,E,F,A).
opp(A,B):-denotes_fail(B),denotes_true(A).
opp(A,B):-'denotes_>='(C,D,B),'denotes_<'(C,D,A).
opp(A,B):-'denotes_=<'(C,D,B),'denotes_>'(C,D,A).
opp(A,B):-'denotes_=\\='(C,D,B),'denotes_=:='(C,D,A).
opp(A,B):-'denotes_@>='(C,D,B),'denotes_@<'(C,D,A).
opp(A,B):-'denotes_@=<'(C,D,B),'denotes_@>'(C,D,A).
opp(A,B):-'denotes_\\=='(C,D,B),'denotes_=='(C,D,A).
opp(A,B):-denotes_nonvar(C,B),denotes_var(C,A).
update_formula(A,B,C,D,D):-update_formula(A,B,C).
xupdate_formula(A,B,C,D,E,F):-cut,denotes_fail(F),denotes_fail(A).
xupdate_formula(A,B,C,D,E,F):-cut,denotes_fail(F),denotes_fail(C).
xupdate_formula(A,B,C,D,E,A):-cut,denotes_true(C).
xupdate_formula(A,B,C,D,E,C):-cut,denotes_true(A).
xupdate_formula(A,B,C,D,E,F):-implies(C,G),cut,denotes_nonvar(H,G),denotes_fail(F),denotes_var(H,A).
xupdate_formula(A,B,C,D,E,F):-cut,'denotes_,'(G,C,F),denotes_var(H,G),denotes_var(H,A).
xupdate_formula(A,B,C,D,E,C):-memberv_conj(A,C),cut.
xupdate_formula(A,B,C,D,E,C):-memberv_conj(F,C),cut,denotes_rderef(G,F),denotes_deref(G,A).
xupdate_formula(A,B,C,D,E,F):-cut,'denotes_,'(G,C,F),denotes_deref(H,G),denotes_deref(H,A).
xupdate_formula(A,B,C,D,E,F):-cut,remove_formula(G,C,H),denotes_deref(I,G),'denotes_,'(J,H,F),denotes_rderef(I,J),denotes_rderef(I,A).
xupdate_formula(A,B,C,D,E,F):-nonvar(D),cut,xupdate_formula(G,B,C,D,H,I),xupdate_formula(J,B,I,D,K,F),'denotes_,'(G,J,A).
xupdate_formula(A,B,C,D,E,F):-var(D),cut,xupdate_formula(G,B,C,H,E,I),xupdate_formula(J,B,I,K,E,F),'denotes_,'(G,J,A).
xupdate_formula(A,B,C,D,E,F):-cut,i2f_formula(C,G,H),(I;J),'denotes_='(F,K,J),'denotes_,'(L,H,K),denotes_float(G,L),'denotes_->'(M,N,I),'denotes_='(F,H,N),denotes_implies(H,O,M),denotes_float(G,O),denotes_float(G,A).
xupdate_formula(A,B,C,D,E,F):-(G;H),'denotes_->'(I,J,H),'denotes_,'(K,L,J),'denotes_;'(M,N,L),'denotes_;'(O,P,N),'denotes_->'(Q,R,P),'denotes_,'(S,T,R),'denotes_;'(U,V,T),'denotes_='(F,W,V),'denotes_,'(A,X,W),'denotes_->'(Y,Z,U),'denotes_='(F,A1,Z),denotes_fail(A1),denotes_mutex(A,X,B1,C1,Y),denotes_prolog(C1),denotes_left(B1),denotes_remove_vars(C,X,S),'denotes_='(D1,E1,Q),denotes_all(E1),'denotes_->'(F1,G1,O),'denotes_,'(H1,I1,G1),'denotes_,'(J1,K1,I1),'denotes_;'(L1,M1,K1),denotes_combine_formula(N1,O1,F,M1),'denotes_,'(A,X,N1),'denotes_->'(P1,Q1,L1),'denotes_='(F,R1,Q1),denotes_fail(R1),denotes_mutex(A,X,S1,T1,P1),denotes_prolog(T1),denotes_left(S1),denotes_remove_vars(U1,X,J1),denotes_split_formula(D,E,D1,C,U1,O1,H1),denotes_cons(D1,F1),'denotes_->'(V1,W1,M),'denotes_;'(X1,Y1,W1),'denotes_;'(Z1,A2,Y1),'denotes_='(F,B2,A2),'denotes_,'(A,C,B2),'denotes_->'(C2,D2,Z1),denotes_true(D2),denotes_bitmap_combine(A,C,F,C2),'denotes_->'(E2,F2,X1),'denotes_='(F,G2,F2),denotes_fail(G2),denotes_mutex(A,C,H2,I2,E2),denotes_prolog(I2),denotes_left(H2),'denotes_='(D1,J2,V1),'denotes_[]'(J2),'denotes_;'(K2,L2,K),'denotes_->'(M2,N2,L2),denotes_extended_bindset(A,C,D1,N2),denotes_nonvar(D,M2),'denotes_->'(O2,P2,K2),denotes_extended_bindset(A,C,E,D1,P2),denotes_var(D,O2),'denotes_='(B,Q2,I),denotes_prolog(Q2),'denotes_->'(R2,S2,G),'denotes_;'(T2,U2,S2),'denotes_;'(V2,W2,U2),'denotes_='(F,X2,W2),'denotes_,'(A,C,X2),'denotes_->'(Y2,Z2,V2),denotes_true(Z2),denotes_bitmap_combine(A,C,F,Y2),'denotes_->'(A3,B3,T2),'denotes_='(F,C3,B3),denotes_fail(C3),denotes_mutex(A,C,D3,A3),denotes_after(D3),'denotes_='(B,E3,R2),denotes_logical(E3).
logical_update_formula(A,B,C):-xupdate_formula(A,D,B,E,F,C),denotes_yes(E),denotes_logical(D).
update_formula(A,B,C,D):-xupdate_formula(A,E,C,F,B,D),denotes_prolog(E).
remove_formula(A,B,C):-an_uninit_mode(A,D,E),cut,remove_uninit(D,F,B,C),'denotes_.'(E,G,F),'denotes_[]'(G).
remove_formula(A,B,C):-pred_exists(A,B),cut,remove_form(A,B,D),flat_conj(D,C).
remove_formula(A,B,B):-true.
extended_bindset(A,B,C,D):-uninit_set(B,E),e_bindset(F,G,E,C,D),cut,'denotes_='(F,G,A).
extended_bindset(A,B,C,D):-bindset(A,E),grounds_in_form(B,F),diffv(E,F,D),disjointv(D,C),cut.
extended_bindset(A,B,C,D):-denotes_all(D).
extended_bindset(A,B,C):-uninit_set(B,D),e_bindset(E,F,D,C),cut,'denotes_='(E,F,A).
extended_bindset(A,B,C):-bindset(A,D),grounds_in_form(B,E),diffv(D,E,F),cut,'denotes_[]'(F),'denotes_[]'(C).
extended_bindset(A,B,C):-denotes_all(C).
split_formula(A,B,C,D,E,F):-vars_in_unify(C,D,G),(H;I),notnonvar_ground_formula(D,J,K),split_form_vars(A,J,K,G,D,L,M),logical_simplify(L,N),flat_conj(N,O),squeeze_conj(O,E),flat_conj(M,F),cut,denotes_true(I),'denotes_->'(P,Q,H),'denotes_,'(R,S,Q),'denotes_,'(T,U,S),denotes_aliasing_flag(V,G,A,U),denotes_diffv(B,W,V,T),denotes_uninit_set(D,W,R),denotes_var(A,P).
remove_vars(A,B):-remove_all_vars(A,C),notnonvar_ground_formula(A,D,E),remove_all_derefs(C,F,D,E),squeeze_conj(F,B),cut.
step_formula(A,B,C,D):-extended_bindset(A,C,B,E),(F;G),'denotes_;'(H,I,G),'denotes_->'(J,K,I),denotes_remove_vars(C,D,K),'denotes_='(E,L,J),denotes_all(L),'denotes_->'(M,N,H),'denotes_,'(O,P,N),'denotes_,'(Q,R,P),denotes_combine_formula(S,T,D,R),denotes_remove_vars(U,S,Q),denotes_split_formula(V,B,E,C,U,T,O),denotes_cons(E,M),'denotes_->'(W,X,F),'denotes_='(D,C,X),'denotes_='(E,Y,W),'denotes_[]'(Y).
remove_all_vars(A,B):-cut,remove_all_vars(C,D),remove_all_vars(E,F),'denotes_,'(D,F,B),'denotes_,'(C,E,A).
remove_all_vars(A,B):-var(C),cut,denotes_true(B),denotes_var(C,A).
remove_all_vars(A,A):-true.
notnonvar_ground_formula(A,B,C):-varset(A,D),nonvar_set(A,E),ground_set(A,F),diffv(D,E,B),diffv(D,F,C).
remove_all_derefs(A,B,C,D):-cut,remove_all_derefs(E,F,C,D),remove_all_derefs(G,H,C,D),'denotes_,'(F,H,B),'denotes_,'(E,G,A).
remove_all_derefs(A,B,C,D):-var(E),inv(E,C),cut,denotes_true(B),denotes_deref(E,A).
remove_all_derefs(A,B,C,D):-var(E),inv(E,D),cut,(F;G),'denotes_='(B,H,G),denotes_deref(E,H),'denotes_->'(I,J,F),'denotes_='(B,K,J),denotes_true(K),denotes_inv(E,C,I),denotes_rderef(E,A).
remove_all_derefs(A,A,B,C):-true.
remove_uninit(A,B,C,D):-cut,remove_uninit(A,E,C,F),remove_uninit(A,G,F,D),'denotes_,'(E,G,B).
remove_uninit(A,B,C,C):-an_uninit_mode(B,D,E),var(E),memberv(E,A),cut.
remove_uninit(A,B,C,D):-co(B,C,D).
remove_uninit(A,B,C,D):-remove_uninit(A,B,C,E,F),flat_conj(E,D),denotes_true(F).
pred_exists(A,B):-pred_exists(A,C),cut,'denotes_,'(C,D,B).
pred_exists(A,B):-pred_exists(A,C),cut,'denotes_,'(D,C,B).
pred_exists(A,B):-ident(A,B),cut.
remove_form(A,B,C):-cut,remove_form(A,D,E),remove_form(A,F,G),'denotes_,'(E,G,C),'denotes_,'(D,F,B).
remove_form(A,B,C):-ident(A,B),cut,denotes_true(C).
remove_form(A,B,B):-cut.
split_from_formula(A,B,C,D):-cut,split_from_formula(A,E,F,G),split_from_formula(A,H,I,J),'denotes_,'(G,J,D),'denotes_,'(F,I,C),'denotes_,'(E,H,B).
split_from_formula(A,B,C,B):-varbag(B,D),memberv(A,D),cut,denotes_true(C).
split_from_formula(A,B,B,C):-cut,denotes_true(C).
intersect_formula(A,B,C):-intersect_formula(A,B,C,D),denotes_true(D).
intersect_formula(A,B,C,D):-cut,intersect_formula(E,B,C,F),intersect_formula(G,B,F,D),'denotes_,'(E,G,A).
intersect_formula(A,B,C,D):-memberv_conj(A,B),cut,co(A,C,D).
intersect_formula(A,B,C,C):-true.
intersect_formula_list(A,B):-cut,'denotes_.'(B,C,A),'denotes_[]'(C).
intersect_formula_list(A,B):-cons(C),cut,intersect_formula_list(C,D),intersect_formula(E,D,B),'denotes_.'(E,C,A).
union_formula(A,B,C):-unionv_conj(A,B,C).
split_deref(A,B):-cut,split_deref(C,D),split_deref(E,F),'denotes_,'(D,F,B),'denotes_,'(C,E,A).
split_deref(A,B):-cut,denotes_deref(C,B),denotes_deref(C,A).
split_deref(A,B):-cut,denotes_rderef(C,B),denotes_rderef(C,A).
split_deref(A,B):-denotes_true(B).
split_formula(A,B,C,D,E):-split_formula(F,A,B,C,D,E).
uninit_set(A,B):-uninit_bag(A,C),sort(C,B).
aliasing_flag(A,B,C):-disjointv(A,B),cut,denotes_no(C).
aliasing_flag(A,B,C):-denotes_yes(C).
split_form_vars(A,B,C,D,E,F,G):-cut,split_form_vars(A,B,C,D,H,I,J),split_form_vars(A,B,C,D,K,L,M),'denotes_,'(J,M,G),'denotes_,'(I,L,F),'denotes_,'(H,K,E).
split_form_vars(A,B,C,D,E,F,G):-split_one(A,B,C,D,E,F,G).
split_one(A,B,C,D,E,F,G):-cut,denotes_true(G),denotes_true(F),denotes_true(E).
split_one(A,B,C,D,E,F,G):-cut,denotes_true(G),denotes_fail(F),denotes_fail(E).
split_one(A,B,C,D,E,F,G):-cut,denotes_true(G),denotes_var(H,F),denotes_var(H,E),denotes_yes(A).
split_one(A,B,C,D,E,F,G):-inv(H,B),cut,denotes_true(G),denotes_deref(H,F),denotes_deref(H,E),denotes_yes(A).
split_one(A,B,C,D,E,F,G):-cut,denotes_deref(H,G),denotes_deref(H,F),denotes_deref(H,E),denotes_yes(A).
split_one(A,B,C,D,E,F,G):-inv(H,C),cut,denotes_true(G),denotes_rderef(H,F),denotes_rderef(H,E),denotes_yes(A).
split_one(A,B,C,D,E,F,G):-cut,denotes_rderef(H,G),denotes_rderef(H,F),denotes_rderef(H,E),denotes_yes(A).
split_one(A,B,C,D,E,F,E):-varset(E,G),disjointv(G,D),cut,denotes_true(F).
split_one(A,B,C,D,E,E,F):-denotes_true(F).
notnonvar_formula(A,B):-varset(A,C),nonvar_set(A,D),diffv(C,D,B).
mem_reg(A):-denotes_mem(A).
mem_reg(A):-denotes_reg(A).
split_uninit(A,B,C):-cut,split_uninit(D,E,F),split_uninit(G,H,I),'denotes_,'(F,I,C),'denotes_,'(E,H,B),'denotes_,'(D,G,A).
split_uninit(A,A,B):-an_uninit_mode(A),cut,denotes_true(B).
split_uninit(A,B,A):-denotes_true(B).
split_unbound(A,B,C):-cut,split_unbound(D,E,F),split_unbound(G,H,I),'denotes_,'(F,I,C),'denotes_,'(E,H,B),'denotes_,'(D,G,A).
split_unbound(A,B,C):-cut,denotes_true(C),denotes_var(D,B),denotes_var(D,A).
split_unbound(A,A,B):-an_uninit_mode(A),cut,denotes_true(B).
split_unbound(A,B,A):-denotes_true(B).
uninit_bag(A,B):-uninit_bag(A,B,C),'denotes_[]'(C).
uninit_bag(A,B,C):-cut,uninit_bag(D,B,E),uninit_bag(F,E,C),'denotes_,'(D,F,A).
uninit_bag(A,B,C):-an_uninit_mode(A,D,E),cut,constC(B,E,C).
uninit_bag(A,B,B):-true.
uninit_bag_type(A,B,C):-uninit_bag_type(A,B,C,D),'denotes_[]'(D).
uninit_bag_type(A,B,C,D):-cut,uninit_bag_type(A,E,C,F),uninit_bag_type(A,G,F,D),'denotes_,'(E,G,B).
uninit_bag_type(A,B,C,D):-an_uninit_mode(B,A,E),cut,constC(C,E,D).
uninit_bag_type(A,B,C,C):-true.
unbound_set(A,B):-unbound_bag(A,C),sort(C,B).
unbound_bag(A,B):-unbound_bag(A,B,C),'denotes_[]'(C).
unbound_bag(A,B,C):-cut,unbound_bag(D,B,E),unbound_bag(F,E,C),'denotes_,'(D,F,A).
unbound_bag(A,B,C):-cut,constC(B,D,C),denotes_var(D,A).
unbound_bag(A,B,C):-an_uninit_mode(A,D,E),cut,constC(B,E,C).
unbound_bag(A,B,B):-true.
remove_uninit(A,B,C):-remove_uninit(A,B,D,E),flat_conj(D,C),denotes_true(E).
remove_uninit(A,B,C,D,E):-cut,remove_uninit(A,B,F,D,G),remove_uninit(A,B,H,G,E),'denotes_,'(F,H,C).
remove_uninit(A,B,C,D,D):-an_uninit_mode(C,A,E),memberv(E,B),cut.
remove_uninit(A,B,C,D,E):-co(C,D,E).
keep_uninit(A,B,C,D):-cut,keep_uninit(A,E,C,F),keep_uninit(A,G,F,D),'denotes_,'(E,G,B).
keep_uninit(A,B,C,C):-an_uninit_mode(B,D,E),var(E),neg(F),cut,denotes_memberv(E,A,F).
keep_uninit(A,B,C,D):-co(B,C,D).
remove_all_uninit(A,B):-uninit_set(A,C),remove_uninit(C,A,B).
e_bindset(A,B,C,D,E):-is_new(A,C,D),is_new(B,C,D),cut,'denotes_[]'(E).
e_bindset(A,B,C,D,E):-is_new(A,C,D),cut,'denotes_.'(A,F,E),'denotes_[]'(F).
e_bindset(A,B,C,D,E):-is_new(B,C,D),cut,'denotes_.'(B,F,E),'denotes_[]'(F).
e_bindset(A,B,C,D):-inv(A,C),inv(B,C),cut,'denotes_[]'(D).
e_bindset(A,B,C,D):-inv(A,C),cut,'denotes_.'(A,E,D),'denotes_[]'(E).
e_bindset(A,B,C,D):-inv(B,C),cut,'denotes_.'(B,E,D),'denotes_[]'(E).
is_new(A,B,C):-var(A),neg(D),cut,denotes_inv(A,C,D).
is_new(A,B,C):-inv(A,B),cut.
bindset(A,B,C):-uninit_set(B,D),(E;F),'denotes_,'(G,H,F),'denotes_,'(I,J,H),'denotes_='(C,K,J),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_!'(I),denotes_inv(L,D,G),'denotes_,'(N,O,E),'denotes_,'(P,Q,O),'denotes_='(C,R,Q),'denotes_.'(S,T,R),'denotes_[]'(T),'denotes_!'(P),denotes_inv(S,D,N),'denotes_='(S,L,A).
bindset(A,B,C):-bindset(A,D),nonvar_set(B,E),diffv(D,E,C).
bindset(A,B,C,D):-var(E),neg(F),cut,denotes_inv(E,C,F),'denotes_.'(E,G,D),'denotes_[]'(G),'denotes_='(E,H,A).
bindset(A,B,C,D):-var(E),neg(F),cut,denotes_inv(E,C,F),'denotes_.'(E,G,D),'denotes_[]'(G),'denotes_='(H,E,A).
bindset(A,B,C,D):-bindset(A,B,D).
keylist_cls(A,B):-extract_directives(A,C,D,E),first_namearity(C,F),keylist_cls(C,B,D,E,F).
merge_cls(A,B):-'denotes_[]'(B),'denotes_[]'(A).
merge_cls(A,B):-extract_merge(A,C,D,B,E,E,F),merge_cls(D,F).
extract_directives(A,B,C,C):-'denotes_[]'(B),'denotes_[]'(A).
extract_directives(A,B,C,D):-directive(E),cut,constC(C,E,F),extract_directives(G,B,F,D),'denotes_.'(E,G,A).
extract_directives(A,B,C,C):-'denotes_.'(D,E,B),'denotes_.'(D,E,A).
first_namearity(A,B):-cut,split(C,D,E),functor(D,F,G),'denotes_/'(F,G,B),'denotes_.'(C,H,A).
first_namearity(A,B):-true.
keylist_cls(A,B,C,D,E):-(F;G),'denotes_='(B,H,G),'denotes_.'(I,J,H),'denotes_[]'(J),'denotes_-'(K,L,I),denotes_pair(C,D,M,M,L),denotes_key(N,O,P,K),denotes_end(P),denotes_3(N),'denotes_->'(Q,R,F),'denotes_='(B,S,R),'denotes_[]'(S),'denotes_=='(C,D,Q),'denotes_[]'(A).
keylist_cls(A,B,C,D,E):-split(F,G,H),functor(G,I,J),hash_name(I,J,K),(L;M),extract_directives(N,O,P,Q),keylist_cls(O,R,P,Q,E),'denotes_='(S,T,M),denotes_2(T),'denotes_->'(U,V,L),'denotes_='(S,W,V),denotes_1(W),'denotes_='(X,E,U),'denotes_/'(I,J,X),'denotes_.'(Y,R,B),'denotes_-'(Z,A1,Y),denotes_pair(C,D,B1,C1,A1),'denotes_.'(F,C1,B1),denotes_key(S,K,D1,Z),'denotes_/'(I,J,D1),'denotes_.'(F,N,A).
hash_name(A,B,C):-denotes_0(C).
diff_sum(A,B,B):-'denotes_[]'(A).
diff_sum(A,B,C):-add(D,B,C),'denotes_.'(D,E,A),'denotes_[]'(E).
diff_sum(A,B,C):-add(D,B,E),sub(F,E,G),diff_sum(H,G,C),'denotes_.'(D,I,A),'denotes_.'(F,H,I).
extract_merge(A,B,C,D,D,E,E):-cut,'denotes_[]'(C),'denotes_[]'(A).
extract_merge(A,B,C,D,E,F,G):-cut,extract_merge(H,B,C,I,E,J,G),'denotes_.'(K,H,A),'denotes_-'(L,M,K),denotes_pair(D,I,F,J,M),denotes_key(N,O,B,L).
extract_merge(A,B,C,D,D,E,E):-cut,'denotes_.'(F,G,C),'denotes_-'(H,I,F),'denotes_.'(J,G,A),'denotes_-'(H,I,J).
expand_clauses(A,B):-'denotes_[]'(B),'denotes_[]'(A).
expand_clauses(A,B):-expand_term(C,D),expand_clauses(E,F),'denotes_.'(D,F,B),'denotes_.'(C,E,A).
translate_clauses(A,B):-'denotes_[]'(B),'denotes_[]'(A).
translate_clauses(A,B):-directive(C),cut,translate_clauses(D,E),'denotes_.'(C,E,B),'denotes_.'(C,D,A).
translate_clauses(A,B):-split(C,D,E),translate(E,F),simplify(F,G),translate_clauses(H,I),'denotes_.'(J,I,B),'denotes_:-'(D,G,J),'denotes_.'(C,H,A).
cls_to_ptrees_loop(A,B):-(C;D),'denotes_='(B,A,D),'denotes_->'(E,F,C),'denotes_,'(G,H,F),denotes_cls_to_ptrees_loop(I,J,H),'denotes_='(K,L,G),'denotes_.'(M,J,L),denotes_ptree(N,O,P,Q,M),'denotes_[]'(Q),'denotes_,'(R,S,E),denotes_cls_to_proc(T,I,N,O,S),denotes_next_name(A,T,N,B,K,R).
add_modes(A):-'denotes_[]'(A).
add_modes(A):-directive(B),cut,add_modes(C),'denotes_.'(B,C,A).
add_modes(A):-functor(B,C,D),(E;F),cut,add_modes(G),'denotes_='(H,I,F),denotes_true(I),'denotes_,'(J,K,E),'denotes_,'(L,M,K),denotes_combine_formula(N,O,H,M),denotes_before(B,O,L),denotes_require(B,N,J),'denotes_.'(P,G,A),denotes_ptree(Q,R,S,T,P),'denotes_:-'(B,H,S),'denotes_/'(C,D,Q).
next_name(A,B,C,D,E):-directive(F),cut,constC(D,F,G),next_name(H,B,C,G,E),'denotes_.'(F,H,A).
next_name(A,B,C,D,D):-split(E,F,G),functor(F,H,I),'denotes_/'(H,I,C),'denotes_.'(E,J,B),'denotes_.'(E,J,A).
cls_to_proc(A,B,C,D):-'denotes_[]'(D),'denotes_[]'(B),'denotes_[]'(A).
cls_to_proc(A,B,C,D):-split(E,F,G),functor(F,H,I),cut,cls_to_proc(J,B,K,L),'denotes_/'(H,I,K),'denotes_.'(E,L,D),'denotes_/'(H,I,C),'denotes_.'(E,J,A).
cls_to_proc(A,B,C,D):-'denotes_[]'(D),'denotes_.'(E,F,B),'denotes_.'(E,F,A).
top_expr(A,B,C,D):-arith_eval(A,E),xtop_expr(E,B,C,D).
expr(A,B,C,D):-arith_eval(A,E),xexpr(E,B,C,D).
translate_unify(A,B,C):-nonvar(A),nonvar(B),functor(A,D,E),functor(B,D,E),cut,translate_unify(A,B,F,E,C),denotes_1(F).
translate_unify(A,B,C):-nonvar(A),nonvar(B),cut,denotes_fail(C).
translate_unify(A,B,C):-var(A),cut,'denotes_='(A,B,C).
translate_unify(A,B,C):-var(B),cut,'denotes_='(B,A,C).
translate_unify(A,B,C,D,E):-gt(C,D),cut,denotes_true(E).
translate_unify(A,B,C,D,E):-le(C,D),cut,arg(C,A,F),arg(C,B,G),translate_unify(F,G,H),exprEval(I,J),translate_unify(A,B,I,D,K),'denotes_+'(C,L,J),denotes_1(L),'denotes_,'(H,K,E).
arith_eval(A,A):-var(A),cut.
arith_eval(A,B):-nonvar(A),cut,functor(A,C,D),functor(E,C,D),eval_args(F,D,A,E),arith_one(E,B),denotes_1(F).
xtop_expr(A,B,C,D):-number(A),cut,co(E,C,D),'denotes_='(B,A,E).
xtop_expr(A,B,C,D):-var(A),cut,co(E,C,D),denotes_is(B,A,E).
xtop_expr(A,B,C,D):-atom(A),cut,co(E,C,D),denotes_is(B,A,E).
xtop_expr(A,B,C,D):-compound(A),cut,xexpr(A,B,C,D).
xexpr(A,A,B,B):-var(A),cut.
xexpr(A,A,B,B):-number(A),cut.
xexpr(A,B,C,D):-cut,xexpr(E,B,C,D),'denotes_.'(E,F,A),'denotes_[]'(F).
xexpr(A,B,C,D):-arith_operation(A,E,F,B,G,H),cut,xexpr_list(E,F,C,I),insert(G,H,I,D).
xexpr(A,B,C,D):-co(E,C,D),denotes_is(B,A,E).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$add'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_+'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$sub'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_-'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$mul'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_*'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$fdiv'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_/'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$idiv'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_//'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$mod'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),denotes_mod(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$and'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_/\\'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$and'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),denotes_and(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$or'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_\\/'(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$or'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),denotes_or(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$xor'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),denotes_xor(L,N,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$sub'(H,I,D,G),denotes_0(H),'denotes_.'(I,J,C),'denotes_[]'(J),'denotes_.'(K,L,B),'denotes_[]'(L),'denotes_-'(K,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$not'(H,D,G),'denotes_.'(H,I,C),'denotes_[]'(I),'denotes_.'(J,K,B),'denotes_[]'(K),'denotes_\\'(J,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$if2f'(H,D,G),'denotes_.'(H,I,C),'denotes_[]'(I),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_float(J,A).
arith_operation(A,B,C,D,E,F):-co(G,E,F),'denotes_$if2i'(H,D,G),'denotes_.'(H,I,C),'denotes_[]'(I),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_integer(J,A).
arith_operation(A,B,C,D,E,F):-cut,co(G,E,F),'denotes_$sll'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_<<'(L,N,A).
arith_operation(A,B,C,D,E,F):-cut,co(G,E,F),'denotes_$sra'(H,I,D,G),'denotes_.'(H,J,C),'denotes_.'(I,K,J),'denotes_[]'(K),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_>>'(L,N,A).
xexpr_list(A,B,C,C):-'denotes_[]'(B),'denotes_[]'(A).
xexpr_list(A,B,C,D):-xexpr(E,F,C,G),xexpr_list(H,I,G,D),'denotes_.'(F,I,B),'denotes_.'(E,H,A).
eval_args(A,B,C,D):-gt(A,B),cut.
eval_args(A,B,C,D):-le(A,B),cut,arg(A,C,E),arg(A,D,F),arith_eval(E,F),exprEval(G,H),eval_args(G,B,C,D),'denotes_+'(A,I,H),denotes_1(I).
arith_one(A,B):-arith_one_tab(A,B),cut.
arith_one(A,A):-true.
arith_one_tab(A,B):-'denotes_.'(B,C,A),'denotes_[]'(C).
arith_one_tab(A,B):-float(B),denotes_float(B,A).
arith_one_tab(A,B):-integer(C),exprEval(B,D),denotes_float(C,D),denotes_float(C,A).
arith_one_tab(A,B):-integer(B),denotes_integer(B,A).
arith_one_tab(A,B):-float(C),exprEval(B,D),denotes_integer(C,D),denotes_integer(C,A).
arith_one_tab(A,B):-number(C),number(D),exprEval(B,E),'denotes_+'(C,D,E),'denotes_+'(C,D,A).
arith_one_tab(A,B):-number(C),number(D),exprEval(B,E),'denotes_-'(C,D,E),'denotes_-'(C,D,A).
arith_one_tab(A,B):-number(C),number(D),exprEval(B,E),'denotes_*'(C,D,E),'denotes_*'(C,D,A).
arith_one_tab(A,B):-number(C),number(D),exprEval(B,E),'denotes_/'(C,D,E),'denotes_/'(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_//'(C,D,E),'denotes_//'(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),denotes_mod(C,D,E),denotes_mod(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_/\\'(C,D,E),'denotes_/\\'(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_/\\'(C,D,E),denotes_and(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_\\/'(C,D,E),'denotes_\\/'(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_\\/'(C,D,E),denotes_or(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),xor(C,D,B),denotes_xor(C,D,A).
arith_one_tab(A,B):-integer(C),exprEval(B,D),'denotes_-'(C,D),'denotes_-'(C,A).
arith_one_tab(A,B):-integer(C),exprEval(B,D),'denotes_\\'(C,D),'denotes_\\'(C,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_<<'(C,D,E),'denotes_<<'(C,D,A).
arith_one_tab(A,B):-integer(C),integer(D),exprEval(B,E),'denotes_>>'(C,D,E),'denotes_>>'(C,D,A).
xor(A,B,C):-exprEval(C,D),'denotes_\\/'(E,F,D),'denotes_/\\'(B,G,F),'denotes_\\'(A,G),'denotes_/\\'(A,H,E),'denotes_\\'(B,H).
transform_cut_ptree(A,B):-cut,transform_cut_cls(C,D,E,F,G),transform_cut_ptrees(H,I),transform_2(G,E,J,B),denotes_ptree(K,D,L,I,J),denotes_ptree(K,C,L,H,A).
transform_cut_ptree(A,A):-directive(A),cut.
transform_cut_cls(A,B,C,D,E):-denotes_false(E),denotes_false(D),'denotes_[]'(B),'denotes_[]'(A).
transform_cut_cls(A,B,C,D,E):-split(F,G,H),standard_conj(H,I),transform_cut_conj(I,J,K,C,L,M,N,O),transform_cut_cls(P,Q,C,R,S),or(L,R,D),or(M,S,E),denotes_true(N),denotes_true(K),'denotes_.'(T,Q,B),'denotes_:-'(G,J,T),'denotes_.'(F,P,A).
transform_2(A,B,C,C):-cut,denotes_false(A).
transform_2(A,B,C,D):-gensym(E,F,G),exprEval(H,I),dup_head(J,G,H,K,L),dup_head(J,G,H,B,M),replace_heads(N,O,G,H,B),add_mode_option(J,M,P,Q,R),denotes_yes(R),denotes_true(Q),denotes_true(P),'denotes_+'(S,T,I),denotes_1(T),'denotes_/'(U,S,F),'denotes_.'(V,W,E),'denotes_.'(X,Y,W),'denotes_.'(Z,A1,Y),'denotes_.'(B1,C1,A1),'denotes_.'(D1,E1,C1),'denotes_[]'(E1),denotes_95(D1),denotes_116(B1),denotes_117(Z),denotes_99(X),denotes_36(V),denotes_ptree(F1,G1,H1,I1,D),'denotes_.'(J1,K1,I1),'denotes_[]'(K1),denotes_ptree(L1,O,M1,N1,J1),'denotes_:-'(M,O1,M1),'denotes_/'(G,H,L1),'denotes_:-'(J,O1,H1),'denotes_.'(P1,Q1,G1),'denotes_[]'(Q1),'denotes_:-'(J,R1,P1),'denotes_,'(S1,L,R1),'denotes_$cut_load'(K,S1),'denotes_/'(U,S,F1),denotes_ptree(T1,N,U1,N1,C),'denotes_:-'(J,O1,U1),'denotes_/'(U,S,T1),denotes_true(A).
dup_head(A,B,C,D,E):-functor(A,F,G),functor(E,B,C),match_all(H,G,A,E),arg(C,E,D),denotes_1(H).
replace_heads(A,B,C,D,E):-'denotes_[]'(B),'denotes_[]'(A).
replace_heads(A,B,C,D,E):-split(F,G,H),dup_head(G,C,D,E,I),replace_heads(J,K,C,D,E),'denotes_.'(L,K,B),'denotes_:-'(I,H,L),'denotes_.'(F,J,A).
match_all(A,B,C,D):-gt(A,B),cut.
match_all(A,B,C,D):-le(A,B),cut,arg(A,C,E),arg(A,D,E),exprEval(F,G),match_all(F,B,C,D),'denotes_+'(A,H,G),denotes_1(H).
standard_conj(A,B):-conj(A,B,C),denotes_true(C).
transform_cut_conj(A,B,B,C,D,E,F,F):-denotes_false(E),denotes_false(D),denotes_true(A).
transform_cut_conj(A,B,C,D,E,F,G,H):-test(I),cut,transform_cut_conj(J,K,C,D,E,F,G,H),'denotes_,'(I,K,B),'denotes_,'(I,J,A).
transform_cut_conj(A,B,C,D,E,F,G,H):-disj_p(I),cut,transform_cut_disj(I,J,D,K,L,M),transform_cut_conj(N,O,C,D,P,Q,R,H),or(K,P,E),or(L,Q,F),denotes_false(R),denotes_false(M),'denotes_,'(J,O,B),'denotes_,'(I,N,A).
transform_cut_conj(A,B,C,D,E,F,G,H):-insert_cut(G,D,B,I),transform_cut_conj(J,I,C,D,K,L,G,H),denotes_true(F),denotes_true(E),'denotes_,'(M,J,A),'denotes_!'(M).
transform_cut_conj(A,B,C,D,E,F,G,H):-neg(I),neg(J),neg(K),transform_cut_conj(L,M,C,D,E,F,N,H),denotes_false(N),'denotes_='(O,P,K),'denotes_!'(P),denotes_test(O,J),denotes_disj_p(O,I),'denotes_,'(O,M,B),'denotes_,'(O,L,A).
transform_cut_disj(A,B,C,D,E,F):-contains_if(A),cut,transform_cut_disj(A,G,C,H,D,E,F),'denotes_,'(I,G,B),'denotes_$cut_load'(H,I).
transform_cut_disj(A,B,C,D,E,F):-transform_cut_disj(A,B,C,G,D,E,F).
contains_if(A):-cut,'denotes_;'(B,C,A),'denotes_->'(D,E,B).
contains_if(A):-contains_if(B),'denotes_;'(C,B,A).
transform_cut_disj(A,B,C,D,E,F,G):-denotes_false(F),denotes_false(E),denotes_fail(B),denotes_fail(A).
transform_cut_disj(A,B,C,D,E,F,G):-transform_cut_conj(H,I,J,C,K,L,G,M),insert_cut(M,D,J,N),transform_cut_conj(O,N,P,C,Q,R,M,S),transform_cut_disj(T,U,C,D,V,W,G),or(K,Q,V,E),or(L,R,W,F),denotes_true(P),'denotes_;'(I,U,B),'denotes_;'(X,T,A),'denotes_->'(H,O,X).
transform_cut_disj(A,B,C,D,E,F,G):-transform_cut_conj(H,I,J,C,K,L,G,M),transform_cut_disj(N,O,C,D,P,Q,G),or(K,P,E),or(L,Q,F),denotes_true(J),'denotes_;'(I,O,B),'denotes_;'(H,N,A).
insert_cut(A,B,C,D):-'denotes_,'(E,D,C),'denotes_$cut_shallow'(B,E),denotes_true(A).
insert_cut(A,B,C,D):-'denotes_,'(E,D,C),'denotes_$cut_deep'(B,E),denotes_false(A).
factor_dlist(A,B):-factor_ptrees(C,D),denotes_ptree(E,F,G,D,B),denotes_ptree(E,F,G,C,A).
get_factor_args(A,B):-a_head(C,D),functor(D,E,F),bagof(G,H,B),cut,'denotes_,'(I,J,H),denotes_test_arg(G,C,J),denotes_range(K,G,F,I),denotes_1(K),denotes_ptree(L,C,M,N,A),'denotes_:-'(O,P,M).
get_factor_args(A,B):-'denotes_[]'(B).
factor_args_ptree(A,B,B):-'denotes_[]'(A).
factor_args_ptree(A,B,C):-factor_arg_cls(D,E,F,G,H,I,J),factor_args_ptrees(K,I,L,M),'denotes_[]'(J),denotes_ptree(D,G,H,L,C),denotes_ptree(D,F,H,M,B),'denotes_.'(E,K,A).
factor_arg_cls(A,B,C,D,E,F,G):-check_arity(C,B),get_arg(C,B,H),solution_order(H,I),collect_info(A,I,J,K),cons(J),check_heuristic(K),cut,transform(C,L,B,J,D,M),keysort(M,N),collect_ptrees(N,B,E,F,G),denotes_1(L).
factor_arg_cls(A,B,C,C,D,E,E):-true.
factor_args_ptrees(A,B,C,C):-'denotes_[]'(B).
factor_args_ptrees(A,B,C,D):-factor_args_ptree(A,E,F),factor_args_ptrees(A,G,H,D),'denotes_.'(F,H,C),'denotes_.'(E,G,B).
check_arity(A,B):-split(C,D,E),functor(D,F,G),le(B,G),'denotes_.'(C,H,A).
get_arg(A,B,C):-get_arg(A,B,C,D),denotes_1(D).
solution_order(A,A):-same_order,cut.
solution_order(A,B):-neg(C),cut,keysort(A,B),denotes_same_order(C).
collect_info(A,B,C,D):-collect_msg(B,D),remove_single(D,E),list_clauses(E,A,F,G),keysort(F,C),'denotes_[]'(G).
check_heuristic(A):-keysort(A,B),neg(C),denotes_adjacent_nontrivial(B,C).
transform(A,B,C,D,A,E):-cut,'denotes_[]'(E),'denotes_[]'(D).
transform(A,B,C,D,E,F):-eq(B,G),cut,split(H,I,J),functor(I,K,L),functor(M,K,L),calc_darity(I,N,O),functor(P,Q,O),functor(R,Q,O),minimum(L,O,S),match_most(T,C,S,I,R),match_most(U,C,S,M,P),match_rest(C,L,I,M,P,R,V),(W;X),exprEval(Y,Z),transform(A1,Y,C,B1,C1,D1),'denotes_+'(B,E1,Z),denotes_1(E1),'denotes_='(E,C1,X),'denotes_->'(F1,G1,W),'denotes_='(E,H1,G1),'denotes_.'(I1,C1,H1),'denotes_:-'(M,P,I1),'denotes_='(J1,K1,F1),denotes_first(K1),denotes_1(U),denotes_1(T),'denotes_.'(L1,D1,F),'denotes_-'(M1,N1,L1),denotes_info2(V,N,O1,N1),'denotes_:-'(R,J,O1),'denotes_/'(Q,O,M1),'denotes_.'(P1,B1,D),'denotes_-'(G,Q1,P1),denotes_info(V,Q,N,J1,Q1),'denotes_.'(H,A1,A).
transform(A,B,C,D,E,F):-lt(B,G),cut,exprEval(H,I),transform(J,H,C,K,L,F),'denotes_.'(M,N,K),'denotes_-'(G,O,M),'denotes_+'(B,P,I),denotes_1(P),'denotes_.'(Q,L,E),'denotes_.'(R,N,D),'denotes_-'(G,O,R),'denotes_.'(Q,J,A).
transform(A,B,C,D,E,F):-gt(B,G),cut,exprEval(H,I),transform(J,H,C,K,L,F),'denotes_+'(B,M,I),denotes_1(M),'denotes_.'(N,L,E),'denotes_.'(O,K,D),'denotes_-'(G,P,O),'denotes_.'(N,J,A).
collect_ptrees(A,B,C,D,D):-'denotes_[]'(A).
collect_ptrees(A,B,C,D,E):-require(F,G),before(F,H),make_dformula(I,J,K,B,L,M),make_dformula(N,J,K,B,L,O),flat_conj(P,Q),constC(D,R,S),add_mode_option(T),collect_proc(U,J,V,W),collect_ptrees(V,B,X,S,E),'denotes_:-'(F,Y,X),denotes_dummy_mode(Z,A1,B1,T),denotes_ptree(J,C1,D1,E1,R),'denotes_[]'(E1),'denotes_:-'(Z,Q,D1),'denotes_.'(F1,W,C1),'denotes_,'(A1,B1,P),'denotes_:-'(Z,B1,O),'denotes_:-'(F,H,N),'denotes_:-'(Z,A1,M),'denotes_:-'(F,G,I),'denotes_:-'(F,Y,C),'denotes_.'(G1,U,A),'denotes_-'(J,H1,G1),denotes_info2(K,L,F1,H1).
adjacent_nontrivial(A):-msg(B,C,D),compound(D),'denotes_.'(E,F,A),'denotes_.'(G,H,F),'denotes_-'(C,I,G),'denotes_-'(B,J,E).
adjacent_nontrivial(A):-adjacent_nontrivial(B),'denotes_.'(C,B,A).
msg(A,B,C):-nonvar(A),nonvar(B),cut,(D;E),denotes_true(E),'denotes_->'(F,G,D),'denotes_,'(H,I,G),'denotes_,'(J,K,I),'denotes_,'(L,M,K),'denotes_=..'(C,N,M),'denotes_.'(O,P,N),denotes_msg_args(Q,R,P,L),'denotes_=..'(B,S,J),'denotes_.'(O,R,S),'denotes_=..'(A,T,H),'denotes_.'(O,Q,T),'denotes_,'(U,V,F),denotes_functor(B,O,W,V),denotes_functor(A,O,W,U).
msg(A,B,A):-ident(A,B),cut.
msg(A,B,C):-neg(D),cut,'denotes_=='(A,B,D).
a_head(A,B):-member(C,A),split(C,B,D).
test_arg(A,B):-bagof(C,D,E),keysort(E,F),similar_args(F),cut,'denotes_^'(G,H,D),'denotes_,'(I,J,H),'denotes_,'(K,L,J),denotes_compound(M,L),denotes_arg(A,G,M,K),denotes_a_head(B,G,I),'denotes_-'(M,N,C),denotes_nop(N).
similar_args(A):-similar(B,C),cut,'denotes_.'(D,E,A),'denotes_.'(F,G,E),'denotes_-'(C,H,F),denotes_nop(H),'denotes_-'(B,I,D),denotes_nop(I).
similar_args(A):-similar_args(B),'denotes_.'(C,B,A).
similar(A,B):-functor(A,C,D),functor(B,C,D).
get_arg(A,B,C,D):-'denotes_[]'(C),'denotes_[]'(A).
get_arg(A,B,C,D):-head_arg(B,E,F),exprEval(G,H),get_arg(I,B,J,G),'denotes_+'(D,K,H),denotes_1(K),'denotes_.'(L,J,C),'denotes_-'(F,D,L),'denotes_.'(E,I,A).
head_arg(A,B,C):-(D;E),denotes_arg(A,B,C,E),'denotes_->'(F,G,D),denotes_arg(A,H,C,G),'denotes_='(B,I,F),'denotes_:-'(H,J,I).
collect_msg(A,B):-'denotes_[]'(B),'denotes_[]'(A).
collect_msg(A,B):-collect_msg(C,D,E,B),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_.'(H,C,A),'denotes_-'(D,F,H).
remove_single(A,B):-'denotes_[]'(B),'denotes_[]'(A).
remove_single(A,B):-cut,remove_single(C,B),'denotes_.'(D,C,A),'denotes_-'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H).
remove_single(A,B):-neg(C),cut,remove_single(D,E),'denotes_='(F,G,C),'denotes_-'(H,I,G),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_.'(F,E,B),'denotes_.'(F,D,A).
list_clauses(A,B,C,C):-'denotes_[]'(A).
list_clauses(A,B,C,D):-gensym(E,B,F),varset(G,H),length(H,I),expand_clauses(J,G,F,I,K,C,L),list_clauses(M,B,L,D),denotes_first(K),'denotes_.'(N,O,E),'denotes_.'(P,Q,O),'denotes_.'(R,S,Q),'denotes_.'(T,U,S),'denotes_.'(V,W,U),'denotes_[]'(W),denotes_95(V),denotes_99(T),denotes_97(R),denotes_102(P),denotes_36(N),'denotes_.'(X,M,A),'denotes_-'(G,J,X).
collect_msg(A,B,C,D):-compound(B),cut,'denotes_.'(E,F,D),'denotes_[]'(F),'denotes_-'(B,C,E),'denotes_[]'(A).
collect_msg(A,B,C,D):-neg(E),cut,denotes_compound(B,E),'denotes_[]'(D),'denotes_[]'(A).
collect_msg(A,B,C,D):-neg(E),cut,collect_msg(A,D),denotes_compound(B,E).
collect_msg(A,B,C,D):-compound(B),msg(E,B,F),(G;H),'denotes_,'(I,J,H),denotes_collect_msg(K,E,L,M,J),'denotes_.'(N,O,L),'denotes_[]'(O),'denotes_='(D,P,I),'denotes_.'(Q,M,P),'denotes_-'(B,C,Q),'denotes_->'(R,S,G),denotes_collect_msg(K,F,T,D,S),'denotes_.'(N,C,T),denotes_nonvar(F,R),'denotes_.'(U,K,A),'denotes_-'(E,N,U).
expand_clauses(A,B,C,D,E,F,F):-'denotes_[]'(A).
expand_clauses(A,B,C,D,E,F,G):-copy(B,H),constC(F,I,J),expand_clauses(K,B,C,D,L,J,G),denotes_notfirst(L),'denotes_-'(M,N,I),denotes_info(H,C,D,E,N),'denotes_.'(M,K,A).
calc_darity(A,B,C):-functor(A,D,E),exprEval(F,G),maximum(F,E,C),'denotes_-'(H,I,G),denotes_1(I),'denotes_+'(E,B,H).
match_most(A,B,C,D,E):-gt(A,C),cut.
match_most(A,B,C,D,E):-noteq(A,B),le(A,C),cut,arg(A,D,F),arg(A,E,F),exprEval(G,H),match_most(G,B,C,D,E),'denotes_+'(A,I,H),denotes_1(I).
match_most(A,B,C,D,E):-eq(A,B),le(A,C),cut,exprEval(F,G),match_most(F,B,C,D,E),'denotes_+'(A,H,G),denotes_1(H).
match_rest(A,B,C,D,E,F,G):-gt(A,B),cut.
match_rest(A,B,C,D,E,F,G):-le(A,B),cut,arg(A,D,G),arg(A,C,H),corresponding_vars(G,H,I,J),(K;L),denotes_true(L),'denotes_->'(M,N,K),'denotes_,'(O,P,N),'denotes_,'(Q,R,P),'denotes_,'(S,T,R),'denotes_,'(U,V,T),'denotes_,'(W,X,V),'denotes_,'(Y,Z,X),denotes_end_fill_args(A1,E,B1,Z),'denotes_='(I,C1,Y),'denotes_.'(D1,A1,C1),denotes_arg(A,E,D1,W),denotes_end_fill_args(E1,F,B1,U),'denotes_='(J,F1,S),'denotes_.'(G1,E1,F1),denotes_arg(A,F,G1,Q),denotes_is(B1,H1,O),'denotes_+'(B,I1,H1),denotes_1(I1),denotes_cons(I,M).
match_offset(A,B,C,D,E):-gt(A,B),cut.
match_offset(A,B,C,D,E):-le(A,B),cut,arg(A,C,F),arg(D,E,F),exprEval(G,H),exprEval(I,J),match_offset(G,B,C,I,E),'denotes_+'(D,K,J),denotes_1(K),'denotes_+'(A,L,H),denotes_1(L).
corresponding_vars(A,B,C,D):-corr_vars(A,B,E,C,F,D),'denotes_[]'(F),'denotes_[]'(E).
end_fill_args(A,B,C):-cut,'denotes_[]'(A).
end_fill_args(A,B,C):-arg(C,B,D),exprEval(E,F),end_fill_args(G,B,E),'denotes_+'(C,H,F),denotes_1(H),'denotes_.'(D,G,A).
corr_vars(A,B,C,D,E,F):-nonvar(A),cut,functor(A,G,H),functor(B,G,H),corr_args(I,H,A,B,C,D,E,F),denotes_1(I).
corr_vars(A,B,C,D,E,F):-var(A),'denotes_.'(B,E,F),'denotes_.'(A,C,D).
corr_args(A,B,C,D,E,E,F,F):-gt(A,B),cut.
corr_args(A,B,C,D,E,F,G,H):-le(A,B),cut,arg(A,C,I),arg(A,D,J),corr_vars(I,J,E,K,G,L),exprEval(M,N),corr_args(M,B,C,D,K,F,L,H),'denotes_+'(A,O,N),denotes_1(O).
msg_vars(A,B):-msg_vars(A,C,B),'denotes_[]'(C).
msg_vars(A,B,C):-nonvar(A),cut,functor(A,D,E),msg_args(F,E,A,B,C),denotes_1(F).
msg_vars(A,B,C):-var(A),'denotes_.'(A,B,C).
msg_args(A,B,C,D,D):-gt(A,B),cut.
msg_args(A,B,C,D,E):-le(A,B),cut,arg(A,C,F),msg_vars(F,D,G),exprEval(H,I),msg_args(H,B,C,G,E),'denotes_+'(A,J,I),denotes_1(J).
make_dformula(A,B,C,D,E,F):-functor(G,H,I),functor(J,K,L),minimum(I,L,M),match_most(N,D,M,G,J),arg(D,G,O),msg_vars(C,P),(Q;R),(S;T),'denotes_='(U,V,T),'denotes_->'(W,X,S),denotes_mode_propagate(P,Y,U,V,X),denotes_type_propagate(V,O,Y,W),denotes_true(R),'denotes_->'(Z,A1,Q),'denotes_,'(B1,C1,A1),'denotes_,'(D1,E1,C1),'denotes_,'(F1,G1,E1),denotes_end_fill_args(H1,J,I1,G1),denotes_is(I1,J1,F1),'denotes_+'(I,K1,J1),denotes_1(K1),denotes_arg(D,J,L1,D1),'denotes_='(P,M1,B1),'denotes_.'(L1,H1,M1),denotes_cons(P,Z),denotes_1(N),'denotes_:-'(J,U,F),'denotes_/'(K,L,B),'denotes_:-'(G,V,A).
collect_proc(A,B,C,D):-'denotes_[]'(D),'denotes_[]'(C),'denotes_[]'(A).
collect_proc(A,B,C,D):-nonident(B,E),cut,'denotes_[]'(D),'denotes_.'(F,G,C),'denotes_-'(E,H,F),denotes_info2(I,J,K,H),'denotes_.'(L,G,A),'denotes_-'(E,M,L),denotes_info2(I,J,K,M).
collect_proc(A,B,C,D):-collect_proc(E,B,C,F),'denotes_.'(G,F,D),'denotes_.'(H,E,A),'denotes_-'(B,I,H),denotes_info2(J,K,G,I).
type_propagate(A,B,C):-implies(A,D),cut,denotes_uninit(B,D),denotes_uninit(C).
type_propagate(A,B,C):-implies(A,D),cut,denotes_var(B,D),denotes_var(C).
type_propagate(A,B,C):-implies(A,D),cut,denotes_ground(B,D),denotes_ground(C).
type_propagate(A,B,C):-implies(A,D),cut,denotes_rderef(B,D),denotes_rderef(C).
mode_propagate(A,B,C,C):-cut,'denotes_[]'(A).
mode_propagate(A,B,C,D):-one_propagate(B,E,C,F),mode_propagate(G,B,F,D),'denotes_.'(E,G,A).
one_propagate(A,B,C,D):-co(E,C,D),cut,denotes_uninit(B,E),denotes_uninit(A).
one_propagate(A,B,C,D):-co(E,C,D),cut,denotes_var(B,E),denotes_var(A).
one_propagate(A,B,C,D):-co(E,C,D),cut,denotes_ground(B,E),denotes_ground(A).
one_propagate(A,B,C,D):-co(E,C,D),cut,denotes_rderef(B,E),denotes_rderef(A).
msg_args(A,B,C):-'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
msg_args(A,B,C):-msg(D,E,F),msg_args(G,H,I),'denotes_.'(F,I,C),'denotes_.'(E,H,B),'denotes_.'(D,G,A).
ptree_to_stree(A,B):-cut,standard_cls(C,D,E,F,G),copy(D,H),ptrees_to_strees(I,J),'denotes_:-'(E,K,H),denotes_stree(L,M,N,F,J,O,B),'denotes_:-'(E,K,N),'denotes_:-'(E,G,M),denotes_ptree(L,C,D,I,A).
ptree_to_stree(A,A):-directive(A),cut.
standard_cls(A,B,C,D,E):-denotes_fail(E),'denotes_[]'(D),'denotes_[]'(A).
standard_cls(A,B,C,D,E):-expand_term(F,G),copy(G,H),standard_form(H,B,I,C,J),standard_cls(K,B,C,L,M),'denotes_;'(J,M,E),'denotes_.'(I,L,D),'denotes_.'(F,K,A).
standard_form(A,B,C,D,E):-split(A,C,F),simplify(F,G),unr_head(C,B,D,E,H),standard_conj(G,H).
standard_form(A,B,C):-split(A,B,D),simplify(D,E),standard_conj(E,C).
unr_head(A,B,C,D,E):-cut,functor(A,F,G),downrange_list(G,H,I),match_unr(I,J,K,A,C,D,E),'denotes_[]'(K),'denotes_[]'(J),denotes_1(H),'denotes_:-'(L,M,B),denotes_true(M).
unr_head(A,B,C,D,E):-functor(A,F,G),split_nonvars(H,I,J,A,G,K,L,M,N,O,P),reverse(M,Q),reverse(O,R),append(K,Q,R,S),match_unr(S,O,K,A,C,D,E),'denotes_[]'(P),'denotes_[]'(N),'denotes_[]'(L),denotes_1(H),'denotes_:-'(J,I,B).
conj(A,B,C):-cut,conj(D,B,E),conj(F,E,C),'denotes_,'(D,F,A).
conj(A,B,B):-cut,denotes_true(A).
conj(A,B,C):-neg(D),inside_conj(A,B,C),denotes_conj_p(A,D).
disj(A,B,C):-cut,disj(D,B,E),disj(F,E,C),'denotes_;'(D,F,A).
disj(A,B,B):-cut,denotes_fail(A).
disj(A,B,C):-neg(D),inside_disj(A,B,C),denotes_disj_p(A,D).
inside_conj(A,B,C):-cut,simplify(D,E),negation_as_failure_conj(E,B,C),'denotes_\\+'(F,D),'denotes_\\+'(F,A).
inside_conj(A,B,C):-cut,conj(D,E,F),conj(G,H,I),co(J,B,C),'denotes_;'(K,L,J),denotes_fail(L),'denotes_->'(E,H,K),denotes_true(I),denotes_true(F),'denotes_->'(D,G,A).
inside_conj(A,B,C):-disj_p(A),cut,disj(A,D,E),co(D,B,C),denotes_fail(E).
inside_conj(A,B,C):-neg(D),neg(E),cut,co(A,B,C),denotes_anyregs(A,E),denotes_disj_p(A,D).
inside_conj(A,B,C):-neg(D),anyregs(A),cut,unr_goal(A,B,C),denotes_disj_p(A,D).
inside_disj(A,B,C):-cut,simplify(D,E),negation_as_failure_disj(E,B,C),'denotes_\\+'(F,D),'denotes_\\+'(F,A).
inside_disj(A,B,C):-cut,conj(D,E,F),conj(G,H,I),di(J,B,C),'denotes_->'(E,H,J),denotes_true(I),denotes_true(F),'denotes_->'(D,G,A).
inside_disj(A,B,C):-conj_p(A),cut,conj(A,D,E),di(D,B,C),denotes_true(E).
inside_disj(A,B,C):-neg(D),cut,co(A,E,F),di(E,B,C),denotes_true(F),denotes_conj_p(A,D).
negation_as_failure_disj(A,B,C):-cut,conj(D,E,F),di(G,B,C),'denotes_,'(H,I,G),denotes_true(I),'denotes_;'(J,K,H),'denotes_;'(L,M,K),denotes_fail(M),denotes_true(L),'denotes_->'(E,N,J),'denotes_,'(O,P,N),denotes_true(P),denotes_fail(O),denotes_true(F),'denotes_\\+'(D,A).
negation_as_failure_disj(A,B,C):-disj(A,B,C).
negation_as_failure_conj(A,B,C):-cut,conj(D,E,F),co(G,B,C),'denotes_;'(H,I,G),'denotes_;'(J,K,I),denotes_fail(K),denotes_true(J),'denotes_->'(E,L,H),'denotes_,'(M,N,L),denotes_true(N),denotes_fail(M),denotes_true(F),'denotes_\\+'(D,A).
negation_as_failure_conj(A,B,C):-conj(A,B,C).
unr_goal(A,B,C):-unr_goal(A,D,B,E),co(D,E,C).
match_unr(A,B,C,D,E,F,G):-functor(D,H,I),functor(E,H,I),match_unr(A,B,C,D,E,J,K,L,M,N,G),reverse_conj(J,O),reverse_conj(L,P),append_conj(O,P,N,F),denotes_true(M),denotes_true(K).
split_nonvars(A,B,C,D,E,F,F,G,G,H,H):-gt(A,E),cut,true.
split_nonvars(A,B,C,D,E,F,G,H,I,J,K):-le(A,E),arg(A,C,L),implies(B,M),cut,exprEval(N,O),split_nonvars(N,B,C,D,E,F,G,H,I,P,K),'denotes_+'(A,Q,O),denotes_1(Q),denotes_nonvar(L,M),'denotes_.'(A,P,J).
split_nonvars(A,B,C,D,E,F,G,H,I,J,K):-le(A,E),arg(A,C,L),implies(B,M),cut,exprEval(N,O),split_nonvars(N,B,C,D,E,P,G,H,I,J,K),'denotes_+'(A,Q,O),denotes_1(Q),denotes_unbound(L,M),'denotes_.'(A,P,F).
split_nonvars(A,B,C,D,E,F,G,H,I,J,K):-le(A,E),cut,exprEval(L,M),split_nonvars(L,B,C,D,E,F,G,N,I,J,K),'denotes_+'(A,O,M),denotes_1(O),'denotes_.'(A,N,H).
match_unr(A,B,C,D,E,F,F,G,G,H,H):-cut,'denotes_[]'(A).
match_unr(A,B,C,D,E,F,G,H,I,J,K):-arg(L,D,M),var(M),member(N,O),arg(N,D,P),ident(M,P),cut,arg(L,E,Q),conj_unr(R,L,B,C,F,S,H,T,J,U),match_unr(O,B,C,D,E,S,G,T,I,U,K),'denotes_='(Q,M,R),'denotes_.'(L,O,A).
match_unr(A,B,C,D,E,F,G,H,I,J,K):-arg(L,D,M),var(M),cut,arg(L,E,M),match_unr(N,B,C,D,E,F,G,H,I,J,K),'denotes_.'(L,N,A).
match_unr(A,B,C,D,E,F,G,H,I,J,K):-arg(L,D,M),nonvar(M),cut,arg(L,E,N),conj_unr(O,L,B,C,F,P,H,Q,J,R),match_unr(S,B,C,D,E,P,G,Q,I,R,K),'denotes_='(N,M,O),'denotes_.'(L,S,A).
conj_unr(A,B,C,D,E,F,G,G,H,H):-member(B,C),cut,'denotes_,'(A,F,E).
conj_unr(A,B,C,D,E,E,F,F,G,H):-member(B,D),cut,'denotes_,'(A,H,G).
conj_unr(A,B,C,D,E,E,F,G,H,H):-'denotes_,'(A,G,F).
unr_goal(A,B,C,C):-neg(D),cut,'denotes_='(E,F,D),denotes_fail(B),'denotes_='(E,F,A).
unr_goal(A,B,C,C):-var(D),neg(E),cut,'denotes_\\+'(F,E),'denotes_='(D,G,F),'denotes_='(D,G,B),'denotes_='(D,G,A).
unr_goal(A,B,C,C):-var(D),neg(E),cut,'denotes_\\+'(F,E),'denotes_='(G,D,F),'denotes_='(D,G,B),'denotes_='(G,D,A).
unr_goal(A,B,C,C):-nonvar(D),nonvar(E),cut,'denotes_='(D,E,B),'denotes_='(D,E,A).
unr_goal(A,B,C,D):-neg(E),cut,unr_str(A,B,C,D),denotes_unify_p(A,E).
unr_str(A,B,C,D):-univ(A,E),unr_args(F,G,C,D),univ(B,H),'denotes_.'(I,G,H),'denotes_.'(I,F,E).
unr_sng(A,A,B,B):-single_word(A),cut.
unr_sng(A,B,C,D):-neg(E),cut,co(F,C,D),'denotes_='(B,A,F),denotes_single_word(A,E).
single_word(A):-var(A),cut.
single_word(A):-atomic(A),cut.
unr_args(A,B,C,C):-'denotes_[]'(B),'denotes_[]'(A).
unr_args(A,B,C,D):-unr_sng(E,F,C,G),unr_args(H,I,G,D),'denotes_.'(F,I,B),'denotes_.'(E,H,A).
re_unr_strees(A,B):-true,cut,re_unr_strees_2(A,B).
re_unr_strees(A,A):-fail,cut.
re_unr_strees_2(A,B):-'denotes_[]'(B),'denotes_[]'(A).
re_unr_strees_2(A,B):-re_unr_stree(C,D),re_unr_strees_2(E,F),'denotes_.'(D,F,B),'denotes_.'(C,E,A).
re_unr_stree(A,B):-cons(C),non_trivial(D),cut,re_unr_disj(C,E,F,G,D),re_unr_strees(H,I),denotes_stree(J,K,D,C,I,L,B),'denotes_:-'(E,G,K),denotes_stree(J,M,D,C,H,L,A),'denotes_:-'(E,F,M).
re_unr_stree(A,B):-cut,re_unr_strees(C,D),denotes_stree(E,F,G,H,D,I,B),denotes_stree(E,F,G,H,C,I,A).
re_unr_stree(A,A):-directive(A),cut.
non_trivial(A):-neg(B),'denotes_='(C,D,B),denotes_true(D),'denotes_:-'(E,C,A).
re_unr_disj(A,B,C,D,E):-denotes_fail(D),denotes_fail(C),'denotes_[]'(A).
re_unr_disj(A,B,C,D,E):-copy(F,G),unr_head(H,E,B,I,J),replace_start_conj(I,K,L),re_unr_disj(M,B,N,O,E),denotes_true(J),'denotes_:-'(H,K,G),'denotes_:-'(P,Q,F),'denotes_;'(L,O,D),'denotes_;'(Q,N,C),'denotes_.'(P,M,A).
flatten_stree(A,B):-cut,copy(C,D),varset(E,F),require(E,G),before(E,H),flatten_disj(I,J,K,G,H,F,L,M,N,O),flatten_strees(P,O),'denotes_[]'(L),'denotes_:-'(E,Q,D),denotes_stree(I,R,S,T,N,M,B),'denotes_:-'(E,Q,S),'denotes_:-'(E,K,R),denotes_stree(I,U,C,T,P,M,A),'denotes_:-'(E,J,U).
flatten_stree(A,A):-directive(A),cut.
flatten_disj(A,B,C,D,E,F,G,H,I,J):-disj_inside(K),cut,flatten(A,K,L,D,E,F,M,G,H,I,N),flatten_disj(A,O,P,D,E,F,G,H,N,J),'denotes_;'(L,P,C),'denotes_;'(K,O,B).
flatten_disj(A,B,C,D,E,F,G,H,I,J):-neg(K),cut,flatten_disj(A,L,M,D,E,F,G,H,I,J),denotes_disj_inside(N,K),'denotes_;'(N,M,C),'denotes_;'(N,L,B).
flatten_disj(A,B,C,D,E,F,G,H,I,I):-denotes_fail(C),denotes_fail(B).
disj_inside(A):-disj_inside(B),cut,'denotes_,'(B,C,A).
disj_inside(A):-disj_inside(B),cut,'denotes_,'(C,B,A).
disj_inside(A):-'denotes_;'(B,C,A).
flatten(A,B,C,D,E,F,G,H,I,J,K):-strong_disj_p(L),cut,varset(L,M),unionv(M,F,N),split_formula2(F,L,D,E,O),remove_vars(E,P),flatten(A,Q,R,O,P,N,S,H,I,J,T),unionv(M,S,G),dummy_proc(A,L,M,D,E,F,S,U,I,T,K),'denotes_,'(U,R,C),'denotes_,'(L,Q,B).
flatten(A,B,C,D,E,F,G,H,I,J,K):-neg(L),cut,varset(M,N),unionv(N,F,O),after(M,P),split_formula2(F,M,D,E,Q),step_formula(M,F,E,R),update_formula(P,F,R,S),flatten(A,T,U,Q,S,O,V,H,I,J,K),unionv(N,V,G),denotes_strong_disj_p(M,L),'denotes_,'(M,U,C),'denotes_,'(M,T,B).
flatten(A,B,C,D,E,F,G,G,H,I,I):-denotes_true(C),denotes_true(B).
split_formula2(A,B,C,D,E):-unionv_conj(C,D,F),split_formula(G,A,B,F,H,I),intersectv_conj(I,C,E),denotes_yes(G).
dummy_proc(A,B,C,D,E,F,G,H,I,J,K):-flatten_disj(A,B,L,D,E,F,G,I,M,N),unionv(F,G,O),intersectv(C,O,P),gensym(Q,A,R),univ(H,S),functor(H,R,T),flat_conj(U,V),trim_mode(W,X),copy(Y,Z),add_mode_option(A1),denotes_dummy_mode(H,D,E,A1),denotes_stree(B1,C1,X,D1,M,E1,Y),'denotes_[]'(D1),'denotes_:-'(H,L,C1),'denotes_/'(R,T,B1),'denotes_:-'(H,V,W),'denotes_,'(D,E,U),'denotes_.'(R,P,S),'denotes_.'(F1,G1,Q),'denotes_.'(H1,I1,G1),'denotes_.'(J1,K1,I1),'denotes_.'(L1,M1,K1),'denotes_.'(N1,O1,M1),'denotes_[]'(O1),denotes_95(N1),denotes_97(L1),denotes_108(J1),denotes_102(H1),denotes_36(F1),'denotes_[]'(N),'denotes_.'(Z,K,J).
disj_exists(A):-(B;C),denotes_disj_exists(D,C),'denotes_->'(E,F,B),denotes_true(F),denotes_disj_p(G,E),'denotes_,'(G,D,A).
gather_single(A,B):-seal(B),'denotes_[]'(A).
gather_single(A,B):-length_test_user(C,D,E),exprEval(F,G),le(F,H),neg(I),cut,get(B,J,K),enter_def(K,L,J),gather_single(M,B),denotes_info(N,D,E,L),'denotes_:-'(O,C,N),denotes_builtin(O,I),denotes_2(H),'denotes_+'(D,E,G),'denotes_.'(P,M,A),denotes_stree(J,Q,R,S,T,U,P),'denotes_[]'(T),'denotes_:-'(O,V,Q),'denotes_;'(C,W,V),denotes_fail(W).
gather_single(A,B):-gather_single(C,B),'denotes_.'(D,C,A).
inline_replace_strees(A,B,C):-'denotes_[]'(B),'denotes_[]'(A).
inline_replace_strees(A,B,C):-inline_replace_disj(D,E,C),inline_replace_strees(F,G,C),inline_replace_strees(H,I,C),'denotes_.'(J,I,B),denotes_stree(K,L,M,N,G,O,J),'denotes_:-'(P,E,L),'denotes_.'(Q,H,A),denotes_stree(K,R,M,N,F,O,Q),'denotes_:-'(P,D,R).
enter_def(A,A,B):-var(A),cut,true.
enter_def(A,B,C):-nonvar(A),cut,warning(D),'denotes_.'(E,F,D),'denotes_.'(C,G,F),'denotes_.'(H,I,G),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_Only the first definition will be used.'(L),denotes_nl(J),'denotes_ has multiple definitions.'(H),'denotes_The predicate '(E).
inline_replace_disj(A,B,C):-denotes_fail(B),denotes_fail(A).
inline_replace_disj(A,B,C):-inline_replace_conj(D,E,C),flat_conj(E,F),inline_replace_disj(G,H,C),'denotes_;'(F,H,B),'denotes_;'(D,G,A).
inline_replace_conj(A,B,C):-denotes_true(B),denotes_true(A).
inline_replace_conj(A,B,C):-test(D),cut,inline_replace_conj(E,F,C),'denotes_,'(D,F,B),'denotes_,'(D,E,A).
inline_replace_conj(A,B,C):-functor(D,E,F),fget(C,G,H),cut,copy(I,J),(K;L),'denotes_='(M,N,L),'denotes_->'(O,P,K),denotes_inline_replace_conj(M,N,C,P),'denotes_=:='(Q,R,O),denotes_0(R),'denotes_:-'(D,S,J),denotes_info(I,T,Q,H),'denotes_/'(E,F,G),'denotes_,'(S,N,B),'denotes_,'(D,M,A).
inline_replace_conj(A,B,C):-'denotes_,'(D,E,B),'denotes_,'(D,E,A).
complexity(A,A):-fail,cut,init_mult_strees(A,B),mult_strees(A,B,C,D,E,F,G),seal(E),comment(H),print_mult_strees(E,C),'denotes_.'(I,J,H),'denotes_.'(G,K,J),'denotes_[]'(K),'denotes_Total complexity of program is '(I),denotes_0(F).
complexity(A,A):-true.
init_mult_strees(A,B):-init_mult_strees(A,C,B),seal(B).
mult_strees(A,B,B,C,C,D,D):-'denotes_[]'(A).
mult_strees(A,B,C,D,E,F,G):-mult_stree(H,B,I,D,J,F,K),mult_strees(L,I,C,J,E,K,G),'denotes_.'(H,L,A).
print_mult_strees(A,B):-cut,exprEval(C,D),comment(E),print_mult_strees(F,G),print_mult_strees(H,I),'denotes_.'(J,K,E),'denotes_.'(L,M,K),'denotes_.'(N,O,M),'denotes_.'(P,Q,O),'denotes_.'(R,S,Q),'denotes_.'(C,T,S),'denotes_.'(U,V,T),'denotes_.'(W,X,V),'denotes_.'(Y,Z,X),'denotes_.'(A1,B1,Z),'denotes_[]'(B1),'denotes_ pred= '(Y),'denotes_ times_called= '(U),'denotes_ tc= '(R),'denotes_ gc= '(N),'denotes_uc= '(J),'denotes_+'(L,P,D),denotes_node(A1,W,G,I,B),denotes_node(A1,C1,F,H,A),'denotes_.'(L,P,C1).
print_mult_strees(A,B):-cut,denotes_leaf(B),denotes_leaf(A).
print_mult_strees(A,B):-cut,error(C),'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_Mismatch in complexity measurement.'(D).
mult_stree(A,B,C,D,E,F,G):-cut,mult_disj(H,B,I,J,K,L,M,N),table_command(O,D,P),exprEval(Q,R),exprEval(S,T),mult_strees(U,I,C,P,E,S,G),exprEval(V,W),'denotes_+'(L,X,W),'denotes_-'(G,S,X),'denotes_+'(Q,L,T),'denotes_+'(F,N,R),denotes_get(J,Y,O),'denotes_.'(N,V,Y),denotes_0(M),denotes_0(K),denotes_stree(J,Z,A1,B1,U,C1,A),'denotes_:-'(D1,H,Z).
mult_stree(A,B,B,C,C,D,D):-directive(A),cut,true.
mult_disj(A,B,B,C,D,D,E,E):-denotes_fail(A).
mult_disj(A,B,C,D,E,F,G,H):-mult_conj_head(I,B,J,D,E,K,G,L),mult_disj(M,J,C,D,K,F,L,H),'denotes_;'(I,M,A).
table_command(A,B,B):-get(B,C,D),denotes_get(C,D,A).
table_command(A,B,B):-fget(B,C,D),denotes_fget(C,D,A).
table_command(A,B,C):-fset(B,D,E,C),denotes_set(D,E,A).
table_command(A,B,C):-get(B,D,E),includev(F,E,G),fset(B,D,G,C),cut,denotes_add(D,F,A).
mult_conj_head(A,B,B,C,D,D,E,E):-cut,denotes_true(A).
mult_conj_head(A,B,C,D,E,F,G,H):-test(I),cut,exprEval(J,K),mult_conj_head(L,B,C,D,E,F,J,H),'denotes_+'(G,M,K),denotes_1(M),'denotes_,'(I,L,A).
mult_conj_head(A,B,C,D,E,F,G,G):-mult_conj_body(A,B,C,D,E,F),true.
mult_conj_body(A,B,B,C,D,D):-denotes_true(A).
mult_conj_body(A,B,C,D,E,F):-mult_goal(G,B,H,D),exprEval(I,J),mult_conj_body(K,H,C,D,I,F),'denotes_+'(E,L,J),denotes_1(L),'denotes_,'(G,K,A).
mult_goal(A,B,C,D):-functor(A,E,F),nonident(D,G),table_command(H,B,I),exprEval(J,K),table_command(L,I,C),cut,denotes_set(M,J,L),'denotes_/'(E,F,M),'denotes_+'(N,O,K),denotes_1(O),denotes_fget(P,N,H),'denotes_/'(E,F,P),'denotes_/'(E,F,G).
mult_goal(A,B,B,C):-true.
init_mult_strees(A,B,B):-'denotes_[]'(A).
init_mult_strees(A,B,C):-init_mult_stree(D,B,E),init_mult_strees(F,E,C),'denotes_.'(D,F,A).
init_mult_stree(A,B,C):-cut,table_command(D,B,E),init_mult_strees(F,E,C),denotes_get(G,H,D),denotes_0(H),denotes_stree(G,I,J,K,F,L,A),'denotes_:-'(M,N,I).
init_mult_stree(A,B,B):-directive(A),cut,true.
set_command(A,B,C):-excludev(D,B,C),denotes_sub(D,A).
set_command(A,B,C):-includev(D,B,C),denotes_add(D,A).
set_command(A,B,C):-diffv(B,D,C),denotes_sub_set(D,A).
set_command(A,B,C):-unionv(D,B,C),denotes_add_set(D,A).
create_mode_strees(A,B,C,D,E):-create_mode_strees(A,B,C,D,E,F),denotes_top(F).
create_mode_strees(A,B,C,D,E,F):-cut,'denotes_[]'(B),'denotes_[]'(A).
create_mode_strees(A,B,C,D,E,F):-create_mode_stree(G,H,C,D,E,F),create_mode_strees(I,J,C,D,E,F),'denotes_.'(H,J,B),'denotes_.'(G,I,A).
create_mode_stree(A,B,C,D,E,F):-cut,lattice_modes_table(G,C,H,I),lattice_modes_table(G,D,H,J),new_formula(H,I,J,K,E,L,M,N),add_mode_option(O),flat_conj(P,Q),write_mode(F,H),create_mode_strees(R,S,C,D,E,T),denotes_nontop(T),'denotes_,'(L,M,P),denotes_analyze_mode(H,L,M,N,O),denotes_stree(G,K,U,V,S,W,B),'denotes_:-'(H,Q,U),denotes_stree(G,K,X,V,R,W,A),'denotes_:-'(H,Y,X).
create_mode_stree(A,A,B,C,D,E):-directive(A).
lattice_modes_table(A,B,C,D):-functor(C,E,F),get(B,G,H),lattice_modes_call(I,F,H,C,J,D,K),denotes_true(K),denotes_mem(J),denotes_1(I),'denotes_/'(E,F,G),'denotes_/'(E,F,A).
new_formula(A,B,C,D,E,F,G,H):-require(A,I),before(A,J),split_unbound(I,K,L),combine_formula(K,J,M),update_mode(B,M,A,N),squeeze_conj(N,O),convert_uninit(D,E,O,P),split_uninit(P,Q,G),logical_subsume(B,L,R),combine_formula(Q,R,F),after(A,S),update_mode(C,S,A,T),squeeze_conj(T,H).
write_mode(A,B):-fail,cut,require(B,C),before(B,D),after(B,E),survive(B,F),w(G),inst_writeq(H),wn(I),'denotes_.'(I),denotes_mode(B,C,D,E,F,H),'denotes_:- '(G),denotes_top(A).
write_mode(A,B):-fail,cut,require(B,C),before(B,D),after(B,E),survive(B,F),w(G),inst_writeq(H),nl,denotes_mode(B,C,D,E,F,H),'denotes_%  '(G).
write_mode(A,B):-cut,require(B,C),before(B,D),after(B,E),survive(B,F),w(G),inst_writeq(H),nl,denotes_mode(B,C,D,E,F,H),'denotes_% '(G).
update_mode(A,B,C,D):-cut,denotes_fail(D),denotes_fail(B).
update_mode(A,B,C,D):-cut,denotes_fail(D),denotes_fail(A).
update_mode(A,B,C,A):-cut,denotes_true(B).
update_mode(A,B,C,B):-cut,denotes_true(A).
update_mode(A,B,C,D):-cut,update_one(E,B,C,F),update_mode(G,F,C,D),'denotes_,'(E,G,A).
convert_uninit(A,B,C,D):-compile_option(E),cut,functor(F,G,H),get(B,I,J),convert_form(C,D,J),'denotes_/'(G,H,I),denotes_analyze_uninit_reg(E),'denotes_:-'(F,K,A).
convert_uninit(A,B,C,C):-true.
update_one(A,B,C,D):-cut,denotes_fail(D),denotes_fail(A).
update_one(A,B,C,D):-implies(B,E),cut,incorrect_mode(F,C,G,B,D),denotes_ground(F,G),denotes_unbound(F,E),denotes_ground(F,A).
update_one(A,B,C,D):-implies(B,E),cut,incorrect_mode(F,C,G,B,D),denotes_nonvar(F,G),denotes_unbound(F,E),denotes_nonvar(F,A).
update_one(A,B,C,D):-implies(B,E),cut,incorrect_mode(F,C,G,B,D),denotes_uninit(F,G),denotes_nonvar(F,E),denotes_uninit(F,A).
update_one(A,B,C,D):-implies(B,E),cut,incorrect_mode(F,C,G,B,D),denotes_uninit_reg(F,G),denotes_nonvar(F,E),denotes_uninit_reg(F,A).
update_one(A,B,C,B):-pred_exists(D,B),cut,denotes_ground(E,D),denotes_ground(E,A).
update_one(A,B,C,B):-pred_exists(D,B),cut,denotes_nonvar(E,D),denotes_nonvar(E,A).
update_one(A,B,C,B):-pred_exists(D,B),cut,denotes_uninit(E,D),denotes_uninit(E,A).
update_one(A,B,C,B):-pred_exists(D,B),cut,denotes_uninit_reg(E,D),denotes_uninit_reg(E,A).
update_one(A,B,C,B):-pred_exists(D,B),cut,denotes_rderef(E,D),denotes_rderef(E,A).
update_one(A,B,C,D):-pred_exists(E,B),cut,split_from_formula(F,B,G,H),squeeze_conj(H,I),warning(C,J),'denotes_.'(K,L,J),'denotes_.'(I,M,L),'denotes_.'(N,O,M),'denotes_.'(C,P,O),'denotes_.'(Q,R,P),'denotes_.'(S,T,R),'denotes_[]'(T),denotes_uninit(F,S),'denotes_ replaced by '(Q),'denotes_ of '(N),'denotes_Mode '(K),denotes_var(F,E),'denotes_,'(U,G,D),denotes_uninit(F,U),denotes_uninit(F,A).
update_one(A,B,C,D):-pred_exists(E,B),cut,split_from_formula(F,B,G,H),squeeze_conj(H,I),warning(C,J),'denotes_.'(K,L,J),'denotes_.'(I,M,L),'denotes_.'(N,O,M),'denotes_.'(C,P,O),'denotes_.'(Q,R,P),'denotes_.'(S,T,R),'denotes_[]'(T),denotes_uninit_reg(F,S),'denotes_ replaced by '(Q),'denotes_ of '(N),'denotes_Mode '(K),denotes_var(F,E),'denotes_,'(U,G,D),denotes_uninit_reg(F,U),denotes_uninit_reg(F,A).
update_one(A,B,C,D):-cut,'denotes_,'(E,B,D),denotes_ground(F,E),denotes_ground(F,A).
update_one(A,B,C,D):-cut,'denotes_,'(E,B,D),denotes_nonvar(F,E),denotes_nonvar(F,A).
update_one(A,B,C,D):-cut,'denotes_,'(E,B,D),denotes_uninit(F,E),denotes_uninit(F,A).
update_one(A,B,C,D):-cut,'denotes_,'(E,B,D),denotes_uninit_reg(F,E),denotes_uninit_reg(F,A).
update_one(A,B,C,D):-cut,'denotes_,'(E,B,D),denotes_rderef(F,E),denotes_rderef(F,A).
incorrect_mode(A,B,C,D,E):-split_from_formula(A,D,F,G),squeeze_conj(G,H),warning(B,I),'denotes_.'(J,K,I),'denotes_.'(H,L,K),'denotes_.'(M,N,L),'denotes_.'(B,O,N),'denotes_.'(P,Q,O),'denotes_.'(R,S,Q),'denotes_.'(T,U,S),'denotes_.'(C,V,U),'denotes_[]'(V),'denotes_Compilation continued with corrected mode '(T),denotes_nl(R),'denotes_ is incorrect.'(P),'denotes_ of '(M),'denotes_Mode '(J),'denotes_,'(C,F,E).
convert_form(A,B,C):-cut,convert_form(D,E,C),convert_form(F,G,C),'denotes_,'(E,G,B),'denotes_,'(D,F,A).
convert_form(A,B,C):-inv(D,C),cut,denotes_uninit_reg(D,B),denotes_uninit(D,A).
convert_form(A,B,C):-inv(D,C),cut,denotes_uninit_reg(D,B),denotes_uninit_mem(D,A).
convert_form(A,A,B):-true.
convert_uninit_strees(A,B,C,D,E):-compile_option(F),cut,init_convert(A,B,G,H,I),convert_closure(G,C,J,D,K,H,L,I,E),denotes_analyze_uninit_reg(F).
convert_uninit_strees(A,B,C,D,E):-seal(E).
init_convert(A,B,C,D,E):-init_convert_strees(A,B,F,C,G,H,D,I,E),seal(D),seal(E),'denotes_[]'(G).
convert_closure(A,B,B,C,C,D,D,E,E):-'denotes_[]'(A).
convert_closure(A,B,C,D,E,F,G,H,I):-cons(A),cut,conv_preds(A,B,J,F,K,H,L,M,N),length(N,O),comment(P),new_preds(N,D,Q,R,S),convert_closure(S,J,C,Q,E,K,G,L,I),'denotes_[]'(R),'denotes_.'(T,U,P),'denotes_.'(O,V,U),'denotes_.'(W,X,V),'denotes_[]'(X),'denotes_ predicates.'(W),'denotes_Uninit(reg) conversion pass--changed '(T),'denotes_[]'(M).
conv_preds(A,B,B,C,C,D,D,E,E):-'denotes_[]'(A).
conv_preds(A,B,C,D,E,F,G,H,I):-table_command(J,F,K),table_command(L,B,M),calc_convert_set(N,O,P,M,Q,D,R,K,S,H,T,U,V),update_ureg(P,U,V,S,W,T,X),conv_preds(Y,Q,C,R,E,W,G,X,I),denotes_fget(P,Z,L),'denotes_:-'(O,N,Z),denotes_fget(P,U,J),'denotes_.'(P,Y,A).
new_preds(A,B,B,C,C):-cut,'denotes_[]'(A).
new_preds(A,B,C,D,E):-cut,set_command(F,D,G),new_preds(H,B,C,G,E),denotes_add(I,F),'denotes_.'(J,H,A),denotes_entry(I,J).
new_preds(A,B,C,D,E):-table_command(F,B,G),cut,set_command(H,D,I),new_preds(J,G,C,I,E),denotes_add_set(K,H),denotes_fget(L,K,F),'denotes_.'(M,J,A),denotes_exit(L,M).
new_preds(A,B,C,D,E):-new_preds(F,B,C,D,E),'denotes_.'(G,F,A).
calc_convert_set(A,B,C,D,D,E,E,F,F,G,G,H,H):-cut,denotes_fail(A).
calc_convert_set(A,B,C,D,E,F,G,H,I,J,K,L,M):-cons(L),split_conj_begin_end(N,O,P),last_conj(P,Q),cut,varset(O,R),set_command(S,L,T),term_dupset(P,U),set_command(V,T,W),last_goal_ureg(Q,B,C,D,X,F,Y,H,Z,J,A1,W,B1),update_fast_goal(Q,B,C,X,C1,Y,D1,Z,E1,A1,F1),calc_convert_set(G1,B,C,C1,E,D1,G,E1,I,F1,K,B1,M),denotes_sub_set(U,V),denotes_sub_set(R,S),'denotes_;'(N,G1,A).
calc_convert_set(A,B,C,D,D,E,E,F,F,G,G,H,H):-'denotes_;'(I,J,A).
update_ureg(A,B,C,D,E,F,G):-nonident(B,C),cut,table_command(H,D,E),set_command(I,F,G),denotes_add(J,I),denotes_exit(A,J),denotes_set(A,C,H).
update_ureg(A,B,C,D,D,E,E):-true.
split_conj_begin_end(A,B,C):-denotes_true(C),denotes_true(B),denotes_true(A).
split_conj_begin_end(A,B,C):-all_survive(D),cut,'denotes_,'(E,D,C),denotes_true(B),'denotes_,'(E,D,A).
split_conj_begin_end(A,B,C):-split_conj_begin_end(D,E,C),'denotes_,'(F,E,B),'denotes_,'(F,D,A).
term_dupset(A,B):-term_dupset_varbag(A,B,C).
last_goal_ureg(A,B,C,D,D,E,E,F,F,G,G,H,H):-survive(A),cut,true.
last_goal_ureg(A,B,C,D,E,F,F,G,H,I,I,J,K):-cons(J),functor(A,L,M),table_command(N,G,H),table_command(O,D,E),cut,map_args(P,Q,A,R),intersectv(R,J,S),min_integer(M,T,U),match_corresponding_args(V,U,B,A,S,K),denotes_1(V),denotes_fget(W,X,O),'denotes_:-'(P,Y,X),'denotes_/'(L,M,W),denotes_fget(Z,Q,N),'denotes_/'(L,M,Z),'denotes_/'(A1,T,C).
last_goal_ureg(A,B,C,D,D,E,E,F,F,G,G,H,I):-'denotes_[]'(I).
update_fast_goal(A,B,C,D,E,F,G,H,I,J,K):-neg(L),functor(A,M,N),table_command(O,F,G),table_command(P,H,Q),table_command(R,D,E),cut,map_args(S,T,A,U),min_integer(N,V,W),match_corresponding_args(X,W,B,A,U,Y),map_args(A,Y,S,Z),update_ureg(A1,T,Z,Q,I,J,K),'denotes_/'(M,N,A1),denotes_1(X),denotes_fget(B1,C1,R),'denotes_:-'(S,D1,C1),'denotes_/'(M,N,B1),denotes_fget(E1,T,P),'denotes_/'(M,N,E1),denotes_fget(F1,G1,O),'denotes_/'(M,N,F1),denotes_survive(A,L),'denotes_/'(H1,V,C).
update_fast_goal(A,B,C,D,D,E,E,F,F,G,G):-true.
map_args(A,B,C,D):-functor(A,E,F),map_args(G,F,A,B,C,H,I),sort(H,D),'denotes_[]'(I),denotes_1(G).
match_corresponding_args(A,B,C,D,E,F):-gt(A,B),cut,'denotes_[]'(F).
match_corresponding_args(A,B,C,D,E,F):-le(A,B),arg(A,C,G),inv(G,E),arg(A,D,H),ident(G,H),cut,exprEval(I,J),match_corresponding_args(I,B,C,D,E,K),'denotes_+'(A,L,J),denotes_1(L),'denotes_.'(G,K,F).
match_corresponding_args(A,B,C,D,E,F):-le(A,B),exprEval(G,H),match_corresponding_args(G,B,C,D,E,F),'denotes_+'(A,I,H),denotes_1(I).
all_survive(A):-denotes_true(A).
all_survive(A):-survive(B),all_survive(C),'denotes_,'(B,C,A).
init_convert_strees(A,B,B,C,C,D,D,E,E):-'denotes_[]'(A).
init_convert_strees(A,B,C,D,E,F,G,H,I):-cut,enter_fast(J,K,F,L),table_command(M,B,N),get_argvars(O,P,Q,R),table_command(S,H,T),enter_ureg(U,R),init_convert_strees(V,N,W,X,Y,L,Z,T,A1),init_convert_strees(B1,W,C,Y,E,Z,G,A1,I),denotes_get(J,U,S),denotes_uninit(O),denotes_fget(J,Q,M),'denotes_.'(J,X,D),'denotes_.'(C1,B1,A),denotes_stree(J,D1,E1,F1,V,G1,C1),'denotes_:-'(P,K,D1).
init_convert_strees(A,B,C,D,E,F,G,H,I):-directive(J),cut,init_convert_strees(K,B,C,D,E,F,G,H,I),'denotes_.'(J,K,A).
enter_fast(A,B,C,D):-fast_routine(B),cut,table_command(E,C,D),denotes_get(A,F,E),denotes_dummy(F).
enter_fast(A,B,C,C):-true.
get_argvars(A,B,C,D):-functor(B,E,F),get_argvars(G,F,A,B,C,H,I),sort(H,D),'denotes_[]'(I),denotes_1(G).
enter_ureg(A,A):-var(A),cut,true.
enter_ureg(A,B):-nonvar(A).
fast_routine(A):-cut,fast_routine(B),fast_routine(C),'denotes_;'(B,C,A).
fast_routine(A):-cut,fast_routine(B),fast_routine(C),'denotes_,'(B,C,A).
fast_routine(A):-survive(A),cut.
fast_routine(A):-builtin(A),cut.
init_tables(A,B,C,D,E):-init_strees(A,F,B,G,C,H,D,I,E),seal(B),seal(C),seal(D),seal(E),cut.
init_strees(A,B,B,C,C,D,D,E,E):-'denotes_[]'(A).
init_strees(A,B,C,D,E,F,G,H,I):-cut,bottom_call(J,K),table_command(L,B,M),table_command(N,D,O),table_command(P,F,Q),enter_def(R,S,J),init_disj(T,M,U,O,V,Q,W,H,X,J),init_strees(Y,U,Z,V,A1,W,B1,X,C1),init_strees(D1,Z,C,A1,E,B1,G,C1,I),'denotes_:-'(E1,T,S),denotes_get(J,R,P),denotes_get(J,K,N),denotes_get(J,K,L),'denotes_.'(F1,D1,A),denotes_stree(J,G1,H1,I1,Y,J1,F1),'denotes_:-'(E1,T,G1).
init_strees(A,B,C,D,E,F,G,H,I):-directive(J),cut,init_strees(K,B,C,D,E,F,G,H,I),'denotes_.'(J,K,A).
bottom_call(A,B):-functor(B,C,D),bottom_call(E,D,B),denotes_1(E),'denotes_/'(C,D,A).
init_disj(A,B,B,C,C,D,D,E,E,F):-denotes_fail(A).
init_disj(A,B,C,D,E,F,G,H,I,J):-init_conj(K,B,L,D,M,F,N,H,O,J),init_disj(P,L,C,M,E,N,G,O,I,J),'denotes_;'(K,P,A).
init_conj(A,B,B,C,C,D,D,E,E,F):-denotes_true(A).
init_conj(A,B,C,D,E,F,G,H,I,J):-init_goal(K,B,L,D,M,F,N,H,O,J),init_conj(P,L,C,M,E,N,G,O,I,J),'denotes_,'(K,P,A).
init_goal(A,B,C,D,E,F,F,G,H,I):-call_p(A),cut,functor(A,J,K),bottom_call(L,M),table_command(N,B,C),table_command(O,D,E),table_command(P,G,H),denotes_add(Q,I,P),'denotes_/'(J,K,Q),denotes_get(R,M,O),'denotes_/'(J,K,R),denotes_get(S,M,N),'denotes_/'(J,K,S),'denotes_/'(J,K,L).
init_goal(A,B,B,C,C,D,D,E,E,F):-unify_p(A),cut,true.
entry_data(A,B,C,D):-(E;F),filter_defs(G,C,H,B),entry_zero(A,I,H),sort(I,D),'denotes_='(G,J,F),'denotes_[]'(J),'denotes_->'(K,L,E),denotes_true(L),denotes_bagof(M,N,G,K),denotes_entry_data(M,N).
filter_defs(A,B,C,D):-'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
filter_defs(A,B,C,D):-functor(E,F,G),get(D,H,I),cut,filter_defs(J,K,L,D),'denotes_/'(F,G,H),'denotes_.'(M,L,C),'denotes_/'(F,G,M),'denotes_.'(N,K,B),denotes_entry(E,O,P,Q,R,S,N),'denotes_.'(T,J,A),denotes_entry(E,O,P,Q,R,S,T).
filter_defs(A,B,C,D):-filter_defs(E,B,C,D),'denotes_.'(F,E,A).
entry_zero(A,B,B):-'denotes_[]'(A).
entry_zero(A,B,C):-cut,constC(B,D,E),entry_zero(F,E,G),entry_zero(H,G,C),'denotes_/'(I,J,D),denotes_0(J),'denotes_.'(K,F,A),denotes_stree(L,M,N,O,H,P,K),'denotes_/'(I,Q,L),denotes_0(Q).
entry_zero(A,B,C):-gt(D,E),cut,entry_zero(F,B,G),entry_zero(H,G,C),denotes_0(E),'denotes_.'(I,F,A),denotes_stree(J,K,L,M,H,N,I),'denotes_/'(O,D,J).
entry_zero(A,B,C):-entry_zero(D,B,C),'denotes_.'(E,D,A).
entry_data(A):-compile_option(B),varset(C,D),ground_set(E,F),nonvar_set(E,G),uninit_set(E,H),rderef_set(E,I),denotes_entry(C,E,B),denotes_entry(C,D,F,G,H,I,A).
entry_init(A,B,B):-'denotes_[]'(A).
entry_init(A,B,C):-entry_init_one(D,B,E),entry_init(F,E,C),'denotes_.'(D,F,A).
entry_init_one(A,B,C):-update_entry(D,E,F,B,C,G,H,I,J,K,L,M,N,O,P,Q,R),'denotes_[]'(G),denotes_entry(D,Q,I,K,M,O,A).
update_entry(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-calc_entry(A,R,H,I,J,K,L,M,N,O,P,Q),functor(A,S,T),table_command(U,D,V),lub_call(W,R,B),update_entry(X,W,B,C,V,E,F,G),'denotes_/'(S,T,X),denotes_fget(Y,W,U),'denotes_/'(S,T,Y).
analyze(A,B):-init_tables(A,C,D,E,F),entry_data(A,E,G,H),cons(H),cut,entry_init(G,C,I),analyze_closure(H,I,J,D,K,E,L,M,N,F,O),seal(N),spec_strees(A,P,N),convert_uninit_strees(P,J,E,F,Q),wn(R),create_mode_strees(P,S,J,K,Q),re_unr_strees(S,B),'denotes_% Modes generated:'(R).
analyze(A,A):-warning(B),'denotes_.'(C,D,B),'denotes_[]'(D),'denotes_There are no usable entry points, so no flow analysis was done.'(C).
analyze_closure(A,B,B,C,C,D,D,E,E,F,F):-cut,'denotes_[]'(A).
analyze_closure(A,B,C,D,E,F,G,H,I,J,K):-cons(A),cut,trav_preds(A,B,L,D,M,F,N,H,O,P,Q),length(Q,R),comment(S),new_preds(Q,J,T,U,V),analyze_closure(V,L,C,M,E,N,G,O,I,T,K),'denotes_[]'(U),'denotes_.'(W,X,S),'denotes_.'(R,Y,X),'denotes_.'(Z,A1,Y),'denotes_[]'(A1),'denotes_ entry and exit modes.'(Z),'denotes_Analysis pass--changed '(W),'denotes_[]'(P).
spec_strees(A,B,C):-'denotes_[]'(B),'denotes_[]'(A).
spec_strees(A,B,C):-spec_stree(D,E,C),spec_strees(F,G,C),'denotes_.'(E,G,B),'denotes_.'(D,F,A).
trav_preds(A,B,B,C,C,D,D,E,E,F,F):-cut,'denotes_[]'(A).
trav_preds(A,B,C,D,E,F,G,H,I,J,K):-table_command(L,B,M),no_bottom(N,O),table_command(P,F,Q),cut,copy(R,S),trav_pred(T,U,O,N,M,V,D,W,Q,X,H,Y,J,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1),trav_preds(K1,V,C,W,E,X,G,Y,I,Z,K),'denotes_[]'(I1),'denotes_[]'(G1),'denotes_[]'(E1),'denotes_[]'(C1),'denotes_[]'(A1),'denotes_:-'(U,T,S),denotes_fget(N,R,P),denotes_fget(N,O,L),'denotes_.'(N,K1,A).
trav_preds(A,B,C,D,E,F,G,H,I,J,K):-trav_preds(L,B,C,D,E,F,G,H,I,J,K),'denotes_.'(M,L,A).
no_bottom(A,B):-bottom(C),no_bottom(D,B,C),'denotes_/'(E,D,A).
trav_pred(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X):-new_sets(B,C,O,Y,Q,Z,S,A1,U,B1,W,C1),trav_disj(A,B,D,D1,E1,F1,G1,H1,E,F,G,I1,I,J,K,L,M,J1,Y,K1,Z,L1,A1,T,B1,M1,C1,N1),set_command(O1,K1,P1),set_command(Q1,L1,R1),intersectv(B1,Y,S1),unionv(S1,H1,T1),update_exit(B,I1,H,J1,N,P1,P,R1,R,H1,V,N1,X),denotes_add_set(G1,Q1),denotes_add_set(F1,O1),'denotes_[]'(E1),denotes_1(D1).
bottom(A):-denotes_unknown(A).
no_bottom(A,B,C):-cut,denotes_0(A).
no_bottom(A,B,C):-gt(A,D),arg(A,B,E),nonident(E,C),exprEval(F,G),no_bottom(F,B,C),'denotes_-'(A,H,G),denotes_1(H),denotes_0(D).
new_sets(A,B,C,D,E,F,G,H,I,J,K,L):-get_argvars(M,A,B,D),get_args(N,A,B,F),get_argvars(O,A,B,H),get_argvars(P,A,B,J),varset(A,L),denotes_rderef(P),denotes_uninit(O),denotes_nonvar(N),denotes_ground(M).
trav_disj(A,B,C,D,E,F,F,F,G,G,H,H,I,I,J,J,K,K,L,L,M,M,N,N,O,O,P,P):-cut,varset(B,F),denotes_fail(A).
trav_disj(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):-member(C1,E),cut,exprEval(D1,E1),trav_disj(F1,B,C,D1,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1),'denotes_+'(D,G1,E1),denotes_1(G1),denotes_caller(C,D,C1),'denotes_;'(H1,F1,A).
trav_disj(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):-save_sets(C1,S,D1,U,E1,W,F1,Y,G1,A1,H1),term_dupset(I1,J1),trav_conj(I1,C,D,K1,L1,I,M1,K,N1,M,O1,O,P1,Q,Q1,D1,R1,E1,S1,F1,T1,G1,U1,H1,V1,W1,X1,J1),back_propagate(W1,R1,Y1,S1,Z1,U1,A2),restore_sets(C1,Y1,B2,Z1,C2,T1,D2,A2,E2,V1,F2),exprEval(G2,H2),trav_disj(I2,B,C,G2,E,J2,K2,L2,M1,J,N1,L,O1,N,P1,P,Q1,R,B2,T,C2,V,D2,X,E2,Z,F2,B1),intersectv(Y1,J2,F),intersectv(Z1,K2,G),intersectv(A2,L2,H),'denotes_+'(D,M2,H2),denotes_1(M2),'denotes_[]'(X1),'denotes_.'(N2,E,L1),denotes_caller(C,D,N2),denotes_1(K1),'denotes_;'(I1,I2,A).
update_exit(A,B,C,D,E,F,G,H,I,J,K,L,L):-functor(A,M,N),table_command(O,B,P),cut,calc_exit(A,Q,F,G,H,I,J,K),lub_call(R,Q,S),update_exit(T,R,S,P,C,D,E),'denotes_/'(M,N,T),denotes_fget(U,R,O),'denotes_/'(M,N,U).
update_exit(A,B,B,C,C,D,D,E,E,F,F,G,G):-true.
save_sets(A,B,B,C,C,D,D,E,E,F,F):-denotes_state(B,C,D,E,F,A).
trav_conj(A,B,C,D,E,F,F,G,G,H,H,I,I,J,J,K,K,L,L,M,M,N,O,P,P,Q,Q,R):-cut,set_command(S,N,O),denotes_add_set(M,S),denotes_true(A).
trav_conj(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):-varset(C1,D1),trav_goal(C1,B,C,D,E,D1,F,E1,H,F1,J,G1,L,H1,N,I1,P,J1,R,K1,T,L1,V,M1,X,N1,Z,O1,B1),exprEval(P1,Q1),trav_conj(R1,B,C,P1,E,E1,G,F1,I,G1,K,H1,M,I1,O,J1,Q,K1,S,L1,U,M1,W,N1,Y,O1,A1,B1),'denotes_+'(D,S1,Q1),denotes_1(S1),'denotes_,'(C1,R1,A).
back_propagate(A,B,C,D,E,F,G):-back_prop_d_cl(A,F,G),back_prop_g_cl(A,B,C),set_command(H,D,I),back_prop_n_cl(A,I,E),denotes_add_set(C,H).
restore_sets(A,B,C,D,E,F,G,H,I,J,K):-denotes_state(C,E,G,I,K,A).
back_prop_d_cl(A,B,C):-back_prop_d(A,D,B,E,F,G),back_prop_d_cl(G,D,E,C),denotes_0(F).
back_prop_g_cl(A,B,C):-back_prop_g(A,D,B,E,F,G),back_prop_g_cl(G,D,E,C),denotes_0(F).
back_prop_n_cl(A,B,C):-back_prop_n(A,D,B,E,F,G),back_prop_n_cl(G,D,E,C),denotes_0(F).
back_prop_d(A,B,C,C,D,D):-cut,'denotes_[]'(B),'denotes_[]'(A).
back_prop_d(A,B,C,D,E,F):-subsetv(G,C),cut,set_command(H,C,I),exprEval(J,K),back_prop_d(L,B,I,D,J,F),'denotes_+'(E,M,K),denotes_1(M),denotes_add(N,H),'denotes_.'(O,L,A),denotes_unify(P,N,Q,G,O),denotes_yes(P).
back_prop_d(A,B,C,D,E,F):-cut,back_prop_d(G,B,C,D,E,F),'denotes_.'(H,G,A),denotes_unify(I,J,K,L,H),denotes_no(I).
back_prop_d(A,B,C,D,E,F):-back_prop_d(G,H,C,D,E,F),'denotes_.'(I,H,B),'denotes_.'(I,G,A).
back_prop_d_cl(A,B,C,C):-cut,denotes_0(A).
back_prop_d_cl(A,B,C,D):-gt(A,E),cut,back_prop_d_cl(B,C,D),denotes_0(E).
back_prop_g(A,B,C,C,D,D):-cut,'denotes_[]'(B),'denotes_[]'(A).
back_prop_g(A,B,C,D,E,F):-nonvar(G),subsetv(H,C),cut,set_command(I,C,J),exprEval(K,L),back_prop_g(M,B,J,D,K,F),'denotes_+'(E,N,L),denotes_1(N),denotes_add(O,I),'denotes_.'(P,M,A),denotes_unify(Q,O,G,H,P).
back_prop_g(A,B,C,D,E,F):-inv(G,C),cut,set_command(H,C,I),exprEval(J,K),back_prop_g(L,B,I,D,J,F),'denotes_+'(E,M,K),denotes_1(M),denotes_add_set(N,H),'denotes_.'(O,L,A),denotes_unify(P,G,Q,N,O).
back_prop_g(A,B,C,D,E,F):-back_prop_g(G,H,C,D,E,F),'denotes_.'(I,H,B),'denotes_.'(I,G,A).
back_prop_g_cl(A,B,C,C):-cut,denotes_0(A).
back_prop_g_cl(A,B,C,D):-gt(A,E),cut,back_prop_g_cl(B,C,D),denotes_0(E).
back_prop_n(A,B,C,C,D,D):-cut,'denotes_[]'(B),'denotes_[]'(A).
back_prop_n(A,B,C,D,E,F):-var(G),var(H),inv(H,C),cut,set_command(I,C,J),exprEval(K,L),back_prop_n(M,B,J,D,K,F),'denotes_+'(E,N,L),denotes_1(N),denotes_add(G,I),'denotes_.'(O,M,A),denotes_unify(P,G,H,Q,O).
back_prop_n(A,B,C,D,E,F):-back_prop_n(G,H,C,D,E,F),'denotes_.'(I,H,B),'denotes_.'(I,G,A).
back_prop_n_cl(A,B,C,C):-cut,denotes_0(A).
back_prop_n_cl(A,B,C,D):-gt(A,E),cut,back_prop_n_cl(B,C,D),denotes_0(E).
trav_goal(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,A1,B1):-call_p(A),cut,trav_call(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,C1,W,X,Y,D1),set_command(E1,C1,V),unionv(F,D1,Z),denotes_sub_set(F,E1).
trav_goal(A,B,C,D,E,F,G,G,H,H,I,I,J,J,K,K,L,M,N,O,P,Q,R,S,T,U,V,W,X):-make_uni(Y,Z,A1,P,B1,T,C1,V,D1,X),make_uni(Z,Y,E1,B1,F1,C1,G1,D1,W,X),term_dupset(H1,I1),trav_goal_d(Y,Z,F,I1,L,J1,N,K1,F1,L1,R,M1,G1,N1),trav_goal_u(Y,Z,F,J1,M,L1,O1,M1,S,N1,P1,X),set_command(Q1,K1,R1),trav_goal_n(Y,Z,R1,O),set_command(S1,O1,Q),unionv(F,P1,U),denotes_sub_set(I1,S1),denotes_add_set(M,Q1),'denotes_='(Y,Z,H1),'denotes_='(Y,Z,A).
trav_call(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z):-functor(A,A1,B1),table_command(C1,K,D1),cut,update_entry(A,E1,F1,G,G1,O,H1,Q,I1,S,J1,U,K1,W,L1,Y,M1),trav_def(A,N1,O1,E,E1,F1,F,G1,H,I,J,D1,L,M,N,H1,P,I1,R,J1,T,K1,V,L1,X,M1,Z),'denotes_/'(A1,B1,N1),denotes_fget(P1,O1,C1),'denotes_/'(A1,B1,P1).
trav_call(A,B,C,D,E,F,G,G,H,I,J,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X):-spec_goal(B,C,D,A,Y,O,Z,Q,A1,S,T,U,B1,W,C1,K,L),after(Y,D1),bindset(Y,E1),diffv(E1,Z,F1),set_command(G1,B1,H1),rderef_set(D1,I1),set_command(J1,H1,K1),ground_set(D1,L1),set_command(M1,Z,N1),nonvar_set(D1,O1),set_command(P1,A1,Q1),update_exit(Y,H,I,M,N,N1,P,Q1,R,K1,V,C1,X),denotes_add_set(O1,P1),denotes_add_set(L1,M1),denotes_add_set(I1,J1),denotes_sub_set(F1,G1).
make_uni(A,B,C,D,E,F,G,H,I,J):-var(A),cut,dref_prop_flag(A,K,D,E,F,G,H,L,J),varset(B,C),'denotes_.'(M,I,L),denotes_unify(K,A,B,C,M).
make_uni(A,B,C,D,D,E,E,F,F,G):-true.
trav_goal_d(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-split_unify_v(A,B,O,P),varset(P,Q),trav_drf1(O,P,Q,C,E,F,G,H,I,J,K,L,M,N),cut,true.
trav_goal_d(A,B,C,D,E,F,G,G,H,I,J,K,L,M):-split_unify_v(A,B,N,O),varset(O,P),trav_drf2(N,O,P,C,D,E,F,H,I,J,K,L,M),cut,true.
trav_goal_d(A,B,C,D,E,E,F,F,G,G,H,I,J,J):-cut,intersectv(E,H,I),true.
trav_goal_u(A,B,C,D,E,F,G,H,I,J,K,L):-split_unify_v(A,B,M,N),varset(N,O),trav_unif(M,N,O,C,D,E,F,G,H,I,J,K,L),cut,true.
trav_goal_u(A,B,C,D,D,E,F,G,G,H,H,I):-set_command(J,E,F),denotes_sub_set(C,J).
trav_goal_n(A,B,C,D):-split_unify_v(A,B,E,F),trav_non(E,F,C,D),cut,true.
trav_goal_n(A,B,C,C):-true.
dref_prop_flag(A,B,C,C,D,D,E,E,F):-inv(A,F),cut,denotes_no(B).
dref_prop_flag(A,B,C,C,D,D,E,E,F):-neg(G),cut,denotes_inv(A,D,G),denotes_yes(B).
dref_prop_flag(A,B,C,C,D,D,E,E,F):-inv(A,C),cut,denotes_yes(B).
dref_prop_flag(A,B,C,C,D,D,E,E,F):-denotes_no(B).
trav_non(A,B,C,D):-nonvar(B),cut,set_command(E,C,D),denotes_add(A,E).
trav_non(A,B,C,D):-var(B),inv(B,C),cut,set_command(E,C,D),denotes_add(A,E).
trav_drf1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-neg(O),cut,new_dref(A,B,C,E,F,G,H,I,P,K,Q,M,R),add_dref(C,P,J,Q,L,R,N),denotes_inv(A,M,O).
trav_drf1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-inv(A,I),cut,new_dref(A,B,C,E,F,G,H,I,O,K,P,M,Q),add_dref(C,O,J,P,L,Q,N),true.
trav_drf2(A,B,C,D,E,F,F,G,H,I,J,K,L):-inv(A,I),inv(A,F),cut,add_dref(C,G,H,I,J,K,L),true.
trav_drf2(A,B,C,D,E,F,F,G,H,I,J,K,L):-inv(A,I),intersectv(K,C,M),subsetv(M,G),cut,add_dref(C,G,H,I,N,K,L),set_command(O,N,J),denotes_sub(A,O),'denotes_[]'(E).
new_dref(A,B,C,D,D,E,E,F,F,G,H,I,I):-var(B),intersectv(C,I,J),unionv(G,F,K),subsetv(J,K),cut,set_command(L,G,H),denotes_add(A,L).
new_dref(A,B,C,D,D,E,E,F,F,G,H,I,I):-nonvar(B),intersectv(C,I,J),unionv(E,D,K),intersectv(G,K,L),subsetv(J,L),cut,set_command(M,G,H),denotes_add(A,M).
new_dref(A,B,C,D,D,E,E,F,F,G,G,H,H):-true.
add_dref(A,B,B,C,D,E,E):-diffv(E,B,F),diffv(A,F,G),set_command(H,C,D),denotes_add_set(G,H).
trav_unif(A,B,C,D,E,F,G,H,I,I,J,J,K):-subsetv(C,E),cut,set_command(L,E,F),set_command(M,G,H),denotes_sub(A,M),denotes_add(A,L).
trav_unif(A,B,C,D,E,E,F,G,H,H,I,I,J):-inv(A,F),neg(K),cut,diffv(D,I,L),set_command(M,F,N),set_command(O,N,P),intersectv(D,I,Q),set_command(R,P,G),denotes_sub_set(Q,R),denotes_sub(A,O),denotes_add_set(L,M),denotes_inv(A,J,K).
trav_unif(A,B,C,D,E,E,F,G,H,H,I,I,J):-neg(K),neg(L),cut,diffv(D,I,M),set_command(N,F,O),set_command(P,O,Q),intersectv(D,I,R),set_command(S,Q,G),denotes_sub_set(R,S),denotes_sub(A,P),denotes_add_set(M,N),denotes_inv(A,J,L),denotes_inv(A,I,K).
trav_unif(A,B,C,D,E,F,G,H,I,I,J,J,K):-inv(A,E),cut,set_command(L,E,F),set_command(M,G,H),denotes_sub_set(D,M),denotes_add_set(D,L).
trav_def(A,B,C,D,E,F,G,H,H,I,J,K,K,L,L,M,M,N,O,P,Q,R,S,T,U,V,W):-cut,table_command(X,I,J),get_argvars(Y,A,Z,A1),get_argvars(B1,A,Z,C1),get_args(D1,A,Z,E1),new_drf_gnd(A1,C1,E1,G,N,O,P,Q,R,S,T,U,V,W),denotes_nonvar(D1),denotes_ground(B1),denotes_rderef(Y),denotes_fget(F1,Z,X),'denotes_/'(G1,H1,F1),denotes_no(F),'denotes_/'(G1,H1,B).
trav_def(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1):-copy(C,B1),save_sets(C1,R,D1,T,E1,V,F1,X,G1,Z,H1),new_sets(I1,E,D1,J1,E1,K1,F1,L1,G1,M1,H1,N1),trav_disj(O1,I1,P1,Q1,D,R1,S1,T1,H,I,J,U1,L,M,N,O,P,V1,J1,W1,K1,X1,L1,Y1,M1,Z1,N1,A2),restore_sets(C1,W1,B2,X1,C2,Y1,D2,Z1,E2,A2,F2),map_argvars(I1,T1,A,G2),map_argvars(I1,R1,A,H2),map_args(I1,S1,A,I2),new_drf_gnd(G2,H2,I2,G,B2,J2,C2,K2,D2,W,E2,L2,F2,M2),update_exit(A,U1,K,V1,Q,J2,S,K2,U,L2,Y,M2,A1),denotes_1(Q1),'denotes_/'(N2,O2,P1),'denotes_:-'(I1,O1,B1),'denotes_/'(N2,O2,B).
spec_goal(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-modal_entry(D,R),cut,table_command(S,P,T),functor(D,U,V),calc_entry(D,W,F,X,H,Y,J,Z,L,A1,N,B1),spec_goal2(D,C1,D1,E1,W,E,X,G,Y,I,Z,K,A1,M,B1,O,T,Q),denotes_index(A,B,C,D1),'denotes_/'(U,V,C1),denotes_get(F1,E1,S),denotes_index(A,B,C,F1).
spec_goal(A,B,C,D,D,E,E,F,F,G,G,H,H,I,I,J,J):-true.
get_args(A,B,C,D):-functor(B,E,F),get_args(G,F,A,B,C,H,I),sort(H,D),'denotes_[]'(I),denotes_1(G).
new_drf_gnd(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-new_drf_set(A,D,E,O,I,J,K,L,M,N),set_command(P,O,F),set_command(Q,G,H),denotes_add_set(C,Q),denotes_add_set(B,P).
map_argvars(A,B,C,D):-functor(A,E,F),map_argvars(G,F,A,B,C,H,I),sort(H,D),'denotes_[]'(I),denotes_1(G).
new_drf_set(A,B,C,C,D,D,E,F,G,G):-cut,intersectv(C,E,F),'denotes_[]'(A).
new_drf_set(A,B,C,C,D,D,E,F,G,G):-cons(A),cut,unionv(D,E,H),diffv(B,G,I),unionv(I,H,J),intersectv(A,J,K),intersectv(C,E,L),unionv(K,L,F),true.
calc_entry(A,B,C,C,D,D,E,E,F,F,G,G):-term_dupset(A,H),functor(A,I,J),functor(B,I,J),calc_entry_2(K,J,C,D,H,E,F,G,A,B),denotes_1(K).
spec_goal2(A,B,C,D,E,F,G,G,H,H,I,I,J,J,K,K,L,L):-var(M),cut,lattice_modes_entry(B,E,A,N),efficient_entry(A,F,N),denotes_value(A,E,F,M),denotes_value(A,E,F,D).
spec_goal2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R):-nonvar(D),cut,copy(D,S),spec_update(A,B,C,T,U,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),denotes_value(A,T,U,S).
lattice_modes_entry(A,B,C,D):-lattice_modes_call(E,F,B,C,G,D,H),denotes_true(H),denotes_either(G),denotes_1(E),'denotes_/'(I,F,A).
efficient_entry(A,B,C):-modal_entry(A,D),tree_trav_entry(D,C,B),cut.
efficient_entry(A,A,B):-true.
spec_update(A,B,C,D,E,F,G,H,H,I,I,J,J,K,K,L,L,M,N):-nonident(D,F),cut,lattice_modes_entry(B,F,A,O),efficient_entry(A,G,O),table_command(P,M,N),denotes_set(C,Q,P),denotes_value(A,F,G,Q).
spec_update(A,B,C,D,E,D,E,F,F,G,G,H,H,I,I,J,J,K,K):-true.
spec_stree(A,B,C):-cut,spec_disj(D,E,F,G,C),spec_strees(H,I,C),denotes_1(G),denotes_stree(F,J,K,L,I,M,B),'denotes_:-'(N,E,J),denotes_stree(F,O,K,L,H,M,A),'denotes_:-'(N,D,O).
spec_stree(A,A,B):-directive(A).
spec_disj(A,B,C,D,E):-denotes_fail(B),denotes_fail(A).
spec_disj(A,B,C,D,E):-spec_conj(F,G,C,D,H,E),exprEval(I,J),spec_disj(K,L,C,I,E),'denotes_+'(D,M,J),denotes_1(M),denotes_1(H),'denotes_;'(G,L,B),'denotes_;'(F,K,A).
spec_conj(A,B,C,D,E,F):-denotes_true(B),denotes_true(A).
spec_conj(A,B,C,D,E,F):-spec_goal(G,H,C,D,E,F),exprEval(I,J),spec_conj(K,L,C,D,I,F),'denotes_+'(E,M,J),denotes_1(M),'denotes_,'(H,L,B),'denotes_,'(G,K,A).
spec_goal(A,B,C,D,E,F):-get(F,G,H),cut,copy(H,I),denotes_value(A,J,B,I),denotes_index(C,D,E,G).
spec_goal(A,A,B,C,D,E):-true.
map_argvars(A,B,C,D,E,F,G):-le(A,B),arg(A,C,H),inv(H,D),cut,arg(A,E,I),varbag(I,F,J),exprEval(K,L),map_argvars(K,B,C,D,E,J,G),'denotes_+'(A,M,L),denotes_1(M).
map_argvars(A,B,C,D,E,F,G):-le(A,B),cut,exprEval(H,I),map_argvars(H,B,C,D,E,F,G),'denotes_+'(A,J,I),denotes_1(J).
map_argvars(A,B,C,D,E,F,F):-gt(A,B),cut.
map_args(A,B,C,D,E,F,G):-le(A,B),arg(A,C,H),inv(H,D),arg(A,E,I),var(I),cut,constC(F,I,J),exprEval(K,L),map_args(K,B,C,D,E,J,G),'denotes_+'(A,M,L),denotes_1(M).
map_args(A,B,C,D,E,F,G):-le(A,B),cut,exprEval(H,I),map_args(H,B,C,D,E,F,G),'denotes_+'(A,J,I),denotes_1(J).
map_args(A,B,C,D,E,F,F):-gt(A,B),cut.
get_argvars(A,B,C,D,E,F,G):-le(A,B),arg(A,E,H),greater_eq(C,H),cut,arg(A,D,I),varbag(I,F,J),exprEval(K,L),get_argvars(K,B,C,D,E,J,G),'denotes_+'(A,M,L),denotes_1(M).
get_argvars(A,B,C,D,E,F,G):-le(A,B),cut,exprEval(H,I),get_argvars(H,B,C,D,E,F,G),'denotes_+'(A,J,I),denotes_1(J).
get_argvars(A,B,C,D,E,F,F):-gt(A,B),cut.
greater_eq(A,B):-cut,denotes_gnddrf(B),denotes_ground(A).
greater_eq(A,B):-cut,denotes_gnddrf(B),denotes_rderef(A).
greater_eq(A,B):-cut,denotes_nondrf(B),denotes_rderef(A).
greater_eq(A,B):-cut,denotes_gnddrf(B),denotes_nonvar(A).
greater_eq(A,B):-cut,denotes_nondrf(B),denotes_nonvar(A).
greater_eq(A,B):-cut,denotes_ground(B),denotes_nonvar(A).
greater_eq(A,A):-cut.
greater_eq(A,B):-cut,denotes_unknown(B).
greater_eq(A,B):-cut,denotes_any(A).
get_args(A,B,C,D,E,F,G):-le(A,B),arg(A,E,H),greater_eq(C,H),arg(A,D,I),var(I),cut,constC(F,I,J),exprEval(K,L),get_args(K,B,C,D,E,J,G),'denotes_+'(A,M,L),denotes_1(M).
get_args(A,B,C,D,E,F,G):-le(A,B),cut,exprEval(H,I),get_args(H,B,C,D,E,F,G),'denotes_+'(A,J,I),denotes_1(J).
get_args(A,B,C,D,E,F,F):-gt(A,B),cut.
lub_call(A,B,C):-functor(A,D,E),functor(B,D,E),functor(C,D,E),lub_call(F,E,A,B,C),denotes_1(F).
update_entry(A,B,C,D,E,F,G,H):-nonident(B,C),cut,table_command(I,E,F),set_command(J,G,H),denotes_add(K,J),denotes_entry(A,K),denotes_set(A,C,I),denotes_yes(D).
update_entry(A,B,C,D,E,E,F,F):-denotes_no(D).
calc_exit(A,B,C,C,D,D,E,E):-functor(A,F,G),functor(B,F,G),calc_exit_2(H,G,C,D,E,A,B),denotes_1(H).
update_exit(A,B,C,D,E,F,G):-nonident(B,C),cut,table_command(H,D,E),set_command(I,F,G),denotes_add(J,I),denotes_exit(A,J),denotes_set(A,C,H).
update_exit(A,B,C,D,D,E,E):-true.
calc_exit_2(A,B,C,D,E,F,G):-gt(A,B),cut.
calc_exit_2(A,B,C,D,E,F,G):-le(A,B),cut,arg(A,F,H),arg(A,G,I),varset(H,J),subset_flag(J,C,K),subset_flag(J,E,L),calc_exit_arg(K,L,M),fix_nonvar(H,D,M,I),exprEval(N,O),calc_exit_2(N,B,C,D,E,F,G),'denotes_+'(A,P,O),denotes_1(P).
subset_flag(A,B,C):-subsetv(A,B),cut,denotes_yes(C).
subset_flag(A,B,C):-denotes_no(C).
calc_exit_arg(A,B,C):-cut,denotes_gnddrf(C),denotes_yes(B),denotes_yes(A).
calc_exit_arg(A,B,C):-cut,denotes_ground(C),denotes_no(B),denotes_yes(A).
calc_exit_arg(A,B,C):-cut,denotes_rderef(C),denotes_yes(B),denotes_no(A).
calc_exit_arg(A,B,C):-cut,denotes_any(C),denotes_no(B),denotes_no(A).
fix_nonvar(A,B,C,D):-nonvar(A),cut,add_nonvar_info(E,C,D),denotes_yes(E).
fix_nonvar(A,B,C,D):-var(A),cut,membership_flag(A,B,E),add_nonvar_info(E,C,D).
calc_entry_2(A,B,C,D,E,F,G,H,I,J):-gt(A,B),cut.
calc_entry_2(A,B,C,D,E,F,G,H,I,J):-le(A,B),cut,arg(A,I,K),arg(A,J,L),varset(K,M),subset_flag(M,C,N),var_flag(K,O),diffv(H,F,P),unionv(P,E,Q),membership_flag(K,Q,R),intersectv(M,H,S),subset_flag(S,G,T),unionv(C,D,U),intersectv(G,U,V),subset_flag(S,V,W),calc_entry_arg(N,O,R,T,W,X),fix_nonvar(K,D,X,L),exprEval(Y,Z),calc_entry_2(Y,B,C,D,E,F,G,H,I,J),'denotes_+'(A,A1,Z),denotes_1(A1).
var_flag(A,B):-var(A),cut,denotes_yes(B).
var_flag(A,B):-nonvar(A),cut,denotes_no(B).
membership_flag(A,B,C):-inv(A,B),cut,denotes_yes(C).
membership_flag(A,B,C):-denotes_no(C).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_gnddrf(F),denotes_yes(D),denotes_yes(A).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_ground(F),denotes_no(D),denotes_yes(A).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_rderef(F),denotes_yes(E),denotes_no(B),denotes_no(A).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_any(F),denotes_no(E),denotes_no(B),denotes_no(A).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_uninit(F),denotes_no(C),denotes_yes(B),denotes_no(A).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_rderef(F),denotes_yes(D),denotes_yes(C),denotes_yes(B),denotes_no(A).
calc_entry_arg(A,B,C,D,E,F):-cut,denotes_any(F),denotes_no(D),denotes_yes(C),denotes_yes(B),denotes_no(A).
add_nonvar_info(A,B,B):-cut,denotes_no(A).
add_nonvar_info(A,B,C):-cut,denotes_nondrf(C),denotes_rderef(B),denotes_yes(A).
add_nonvar_info(A,B,C):-cut,denotes_nonvar(C),denotes_any(B),denotes_yes(A).
add_nonvar_info(A,B,B):-cut,denotes_yes(A).
lub(A,B,B):-cut,denotes_unknown(A).
lub(A,B,A):-cut,denotes_unknown(B).
lub(A,B,C):-cut,denotes_any(C),denotes_any(A).
lub(A,B,C):-cut,denotes_any(C),denotes_any(B).
lub(A,A,A):-cut.
lub(A,B,C):-cut,denotes_nonvar(C),denotes_ground(B),denotes_nonvar(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_nonvar(B),denotes_ground(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_nondrf(B),denotes_nonvar(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_nonvar(B),denotes_nondrf(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_gnddrf(B),denotes_nonvar(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_nonvar(B),denotes_gnddrf(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_nondrf(B),denotes_ground(A).
lub(A,B,C):-cut,denotes_nonvar(C),denotes_ground(B),denotes_nondrf(A).
lub(A,B,C):-cut,denotes_ground(C),denotes_gnddrf(B),denotes_ground(A).
lub(A,B,C):-cut,denotes_ground(C),denotes_ground(B),denotes_gnddrf(A).
lub(A,B,C):-cut,denotes_nondrf(C),denotes_gnddrf(B),denotes_nondrf(A).
lub(A,B,C):-cut,denotes_nondrf(C),denotes_nondrf(B),denotes_gnddrf(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_nondrf(B),denotes_rderef(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_rderef(B),denotes_nondrf(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_gnddrf(B),denotes_rderef(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_rderef(B),denotes_gnddrf(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_uninit(B),denotes_rderef(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_rderef(B),denotes_uninit(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_gnddrf(B),denotes_uninit(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_uninit(B),denotes_gnddrf(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_nondrf(B),denotes_uninit(A).
lub(A,B,C):-cut,denotes_rderef(C),denotes_uninit(B),denotes_nondrf(A).
lub(A,B,C):-cut,denotes_any(C),denotes_rderef(B),denotes_nonvar(A).
lub(A,B,C):-cut,denotes_any(C),denotes_nonvar(B),denotes_rderef(A).
lub(A,B,C):-cut,denotes_any(C),denotes_uninit(B),denotes_nonvar(A).
lub(A,B,C):-cut,denotes_any(C),denotes_nonvar(B),denotes_uninit(A).
lub(A,B,C):-cut,denotes_any(C),denotes_rderef(B),denotes_ground(A).
lub(A,B,C):-cut,denotes_any(C),denotes_ground(B),denotes_rderef(A).
lub(A,B,C):-cut,denotes_any(C),denotes_uninit(B),denotes_ground(A).
lub(A,B,C):-cut,denotes_any(C),denotes_ground(B),denotes_uninit(A).
lub(A,B,C):-error(D),'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_lub(A,B,I,G),'denotes_Bug in lub with '(E),denotes_any(C).
lub_call(A,B,C,D,E):-gt(A,B),cut.
lub_call(A,B,C,D,E):-le(A,B),cut,arg(A,C,F),arg(A,D,G),arg(A,E,H),lub(F,G,H),exprEval(I,J),lub_call(I,B,C,D,E),'denotes_+'(A,K,J),denotes_1(K).
bottom_call(A,B,C):-gt(A,B),cut.
bottom_call(A,B,C):-le(A,B),cut,bottom(D),arg(A,C,D),exprEval(E,F),bottom_call(E,B,C),'denotes_+'(A,G,F),denotes_1(G).
lattice_modes_call(A,B,C,D,E,F,F):-gt(A,B),cut.
lattice_modes_call(A,B,C,D,E,F,G):-le(A,B),cut,arg(A,C,H),arg(A,D,I),lattice_modes_arg(H,E,I,F,J),exprEval(K,L),lattice_modes_call(K,B,C,D,E,J,G),'denotes_+'(A,M,L),denotes_1(M).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,E),denotes_uninit(C,F),denotes_mem(B),denotes_uninit(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,E),denotes_uninit(B,C,F),denotes_uninit(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,E),denotes_ground(C,F),denotes_ground(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,E),denotes_rderef(C,F),denotes_rderef(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,G),co(H,G,E),denotes_rderef(C,H),denotes_ground(C,F),denotes_gnddrf(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,E),denotes_nonvar(C,F),denotes_nonvar(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,G),co(H,G,E),denotes_rderef(C,H),denotes_nonvar(C,F),denotes_nondrf(A).
lattice_modes_arg(A,B,C,D,E):-cut,co(F,D,E),denotes_fail(F),denotes_unknown(A).
lattice_modes_arg(A,B,C,D,D):-denotes_any(A).
disjoint_flag(A,B,C):-disjointv(A,B),cut,denotes_yes(C).
disjoint_flag(A,B,C):-denotes_no(C).
var_args(A,B):-univ(A,C),filter_vars(D,E),sort(E,B),'denotes_.'(F,D,C).
term_dupset_varbag(A,B,C):-varbag(A,C),filter_dups(C,B).
term_dupset_varset(A,B,C):-term_dupset_varbag(A,B,D),sort(D,C).
create_bodies(A,B,C,D,E,F,G,H,H):-cut,'denotes_[]'(E),'denotes_[]'(D),'denotes_[]'(C),denotes_fail(B),denotes_fail(A).
create_bodies(A,B,C,D,E,F,G,H,I):-segment_test(J,K,L,F,G),(M;N),create_bodies(O,P,Q,R,S,F,G,T,I),'denotes_,'(U,V,N),'denotes_,'(W,X,V),'denotes_,'(Y,Z,X),'denotes_,'(A1,B1,Z),'denotes_,'(C1,D1,B1),'denotes_,'(E1,F1,D1),'denotes_,'(G1,H1,F1),'denotes_='(E,I1,H1),'denotes_.'(J1,S,I1),'denotes_='(D,K1,G1),'denotes_.'(L1,R,K1),'denotes_='(C,M1,E1),'denotes_.'(N1,Q,M1),'denotes_='(H,O1,C1),'denotes_.'(P1,T,O1),denotes_body(Q1,R1,P1),'denotes_:-'(N1,S1,Q1),'denotes_='(T1,U1,A1),'denotes_,'(L,V1,U1),'denotes_$body'(W1,J1,R1,V1),'denotes_:-'(N1,S1,W1),denotes_varset(S1,J1,Y),denotes_varset(L,L1,W),denotes_flat_conj(K,S1,U),'denotes_->'(X1,Y1,M),'denotes_,'(Z1,A2,Y1),'denotes_,'(B2,C2,A2),'denotes_,'(D2,E2,C2),'denotes_,'(F2,G2,E2),'denotes_='(E,S,G2),'denotes_='(D,R,F2),'denotes_='(C,Q,D2),'denotes_='(H,T,B2),denotes_flat_conj(H2,T1,Z1),'denotes_,'(L,K,H2),'denotes_,'(I2,J2,X1),'denotes_,'(K2,L2,J2),'denotes_,'(M2,N2,L2),'denotes_,'(O2,P2,N2),'denotes_=<'(Q2,R2,P2),'denotes_=<'(S2,T2,O2),'denotes_='(R2,U2,M2),denotes_2(U2),'denotes_='(T2,V2,K2),denotes_1(V2),denotes_length_test_user(K,Q2,S2,I2),'denotes_;'(T1,P,B),'denotes_;'(J,O,A).
create_heads(A,B,C,D,E):-'denotes_[]'(E),'denotes_[]'(D),'denotes_[]'(A).
create_heads(A,B,C,D,E):-intersectv(F,G,H),diffv(H,C,I),unionv(F,C,J),intersectv(J,G,K),new_head(K,L,B,I,M),create_heads(N,B,C,O,P),'denotes_.'(Q,R,L),'denotes_.'(S,T,R),'denotes_.'(U,V,T),'denotes_[]'(V),denotes_95(U),denotes_98(S),denotes_36(Q),'denotes_.'(G,P,E),'denotes_.'(F,O,D),'denotes_.'(M,N,A).
new_head(A,B,C,D,E):-cons(A),cut,new_head(B,C,D,E).
new_head(A,B,C,D,E):-nil(A),cut,functor(C,F,G),gensym(B,H,E),'denotes_/'(F,G,H).
segment_test(A,B,C,D,E):-segment_1(A,F,C,G,B,H,H,F,I,J,D,K,E,L),'denotes_[]'(I),denotes_true(G).
st(A,B,C):-varset(B,D),segment_test(A,E,F,D,C),wn(F),wn(E).
segment_1(A,B,C,C,D,D,E,E,F,F,G,G,H,H):-cut,denotes_true(B),denotes_true(A).
segment_1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-next_goal(A,O,P),split_unify(O,Q,R),var(Q),atomic(R),implies(M,S),cut,update_formula(T,M,U),segment_1(P,B,V,D,E,F,G,H,I,J,K,L,U,N),'denotes_$name_arity'(Q,R,W,T),denotes_0(W),denotes_nonvar(Q,S),'denotes_,'(X,V,C),'denotes_$name_arity'(Q,R,Y,X),denotes_0(Y).
segment_1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-next_goal(A,O,P),test(O),neg(Q),varset(O,R),intersectv(R,I,S),subsetv(R,K),bindset(O,M,T),cut,add_name_arity(O,C,U,M,V),update_formula(O,V,W),segment_1(P,B,X,D,E,F,G,H,I,J,K,L,W,N),'denotes_,'(O,X,U),'denotes_[]'(T),'denotes_[]'(S),denotes_standard_order(O,Q).
segment_1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-next_goal(A,O,P),split_unify(O,Q,R),var(Q),compound(R),implies(M,S),varset(R,T),intersectv(T,K,U),cut,functor(R,V,W),update_formula(O,K,M,X),unionv(Y,K,Z),unionv(T,Z,A1),segment_1(P,B,B1,D,E,F,G,H,I,J,A1,L,X,N),'denotes_.'(Q,C1,Y),'denotes_[]'(C1),'denotes_[]'(U),denotes_nonvar(Q,S),'denotes_,'(D1,E1,C),'denotes_,'(O,B1,E1),'denotes_$name_arity'(Q,V,W,D1).
segment_1(A,A,B,C,D,D,E,E,F,F,G,G,H,I):-next_goal(A,J,K),split_unify(J,L,M),var(L),compound(M),implies(H,N),cut,functor(M,O,P),update_formula(Q,H,I),'denotes_$name_arity'(L,O,P,Q),denotes_nonvar(L,N),'denotes_,'(R,C,B),'denotes_$name_arity'(L,O,P,R).
segment_1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-next_goal(A,O,P),split_unify(O,Q,R),var(Q),implies(M,S),cut,includev(Q,I,T),segment_1(P,B,C,D,U,F,G,H,T,J,K,L,M,N),denotes_var(Q,S),'denotes_,'(O,U,E).
segment_1(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-next_goal(A,O,P),split_unify(O,Q,R),var(Q),implies(M,S),cut,includev(Q,I,T),segment_1(P,B,C,D,E,F,U,H,T,J,K,L,M,N),denotes_uninit(V,Q,S),denotes_any(V),'denotes_,'(O,U,G).
segment_1(A,A,B,B,C,C,D,D,E,E,F,F,G,G):-cut,true.
next_goal(A,B,C):-cut,'denotes_,'(B,C,A).
next_goal(A,A,B):-denotes_true(B).
add_name_arity(A,B,C,D,E):-split_unify(A,F,G),var(F),nonvar(G),implies(D,H),cut,functor(G,I,J),update_formula(K,D,E),'denotes_$name_arity'(F,I,J,K),denotes_nonvar(F,H),'denotes_,'(L,C,B),'denotes_$name_arity'(F,I,J,L).
add_name_arity(A,B,B,C,C):-true.
segment_all_disj(A,B,C,D,E,F,F,G):-'denotes_[]'(G),denotes_fail(E),denotes_fail(A).
segment_all_disj(A,B,C,D,E,F,G,H):-segment_all_conj(I,J,K,D,F,L),varset(J,M),(N;O),segment_all_disj(P,B,C,D,Q,L,G,R),'denotes_,'(S,T,O),'denotes_,'(U,V,T),'denotes_,'(W,X,V),'denotes_,'(Y,Z,X),'denotes_,'(A1,B1,Z),'denotes_='(H,C1,B1),'denotes_.'(D1,R,C1),denotes_body(E1,F1,D1),'denotes_:-'(G1,K,E1),'denotes_='(H1,I1,A1),'denotes_,'(J,J1,I1),'denotes_$body'(K1,L1,F1,J1),'denotes_:-'(G1,K,K1),denotes_new_head(M1,B,N1,G1,Y),'denotes_.'(O1,P1,M1),'denotes_.'(Q1,R1,P1),'denotes_.'(S1,T1,R1),'denotes_[]'(T1),denotes_95(S1),denotes_115(Q1),denotes_36(O1),denotes_diffv(U1,C,N1,W),denotes_intersectv(M,L1,U1,U),denotes_varset(K,L1,S),'denotes_->'(V1,W1,N),'denotes_,'(X1,Y1,W1),'denotes_='(H,R,Y1),'denotes_='(H1,Z1,X1),'denotes_,'(J,K,Z1),'denotes_,'(A2,B2,V1),'denotes_,'(C2,D2,B2),'denotes_,'(E2,F2,D2),'denotes_,'(G2,H2,F2),'denotes_=<'(I2,J2,H2),'denotes_=<'(K2,L2,G2),'denotes_='(J2,M2,E2),denotes_2(M2),'denotes_='(L2,N2,C2),denotes_1(N2),denotes_length_test_user(K,I2,K2,A2),'denotes_;'(H1,Q,E),'denotes_;'(I,P,A).
segment_all_conj(A,B,C,D,E,E):-cut,denotes_true(C),denotes_true(B),denotes_true(A).
segment_all_conj(A,B,C,D,E,F):-filter_vars(G,H),sort(H,I),disjointv(I,D),cut,insert(I,E,J),segment_all_conj(K,L,C,D,J,F),'denotes_.'(M,N,G),'denotes_.'(O,P,N),'denotes_[]'(P),'denotes_,'(Q,L,B),'denotes_='(M,O,Q),'denotes_,'(R,K,A),'denotes_='(M,O,R).
segment_all_conj(A,B,C,D,E,F):-test(G),cut,segment_all_conj(H,I,C,D,E,F),'denotes_,'(G,I,B),'denotes_,'(G,H,A).
segment_all_conj(A,B,C,D,E,E):-neg(F),cut,denotes_test(G,F),'denotes_,'(G,H,C),denotes_true(B),'denotes_,'(G,H,A).
selection_3(A,B,C,D,E,F):-length_disj(A,G),gt(G,H),find_testset(A,B,C,D,E,I,J),pick_testset(J,I,K),cut,thin_testset(K,L),code_testset(L,B,C,D,E,A,F),(M;N),cut,denotes_true(N),'denotes_->'(O,P,M),'denotes_,'(Q,R,P),'denotes_,'(S,T,R),'denotes_,'(U,V,T),denotes_nl(V),denotes_write(F,U),denotes_nl(S),denotes_write(W,Q),'denotes_Selection code:'(W),denotes_fail(O),denotes_1(H).
selection_3(A,B,C,D,E,A):-true.
selection(A,B,C,D,E,F):-simplify(A,G),selection_3(G,B,C,D,E,F),cut.
find_testset(A,B,C,D,E,F,G):-unbound_set(E,H),pred_gather(A,B,C,D,H,E,I,F,J),keysort(F,K),part_testset(K,G),'denotes_[]'(J),denotes_1(I).
pick_testset(A,B,C):-first_test(B,D),comment(E),rel_flag(F,G),pick_eq(H,I,A,C,J,G),gt(J,K),cut,denotes_0(K),denotes_0(I),'denotes_-'(L,M,H),'denotes_[]'(M),denotes_none(L),'denotes_.'(N,O,E),'denotes_.'(P,Q,O),'denotes_[]'(Q),'denotes_-'(F,R,P),'denotes_First test is '(N),'denotes_-'(F,R,D).
thin_testset(A,B):-show_tests(C,D),keysort(D,E),make_thin(E,F),cut,'denotes_-'(G,F,B),'denotes_-'(G,C,A).
code_testset(A,B,C,D,E,F,G):-get_clause_nums(H,I,J),sort(I,K),extract_else_disj(K,L,F,M,N),full_testset(O,P,H,Q),(R;S),code_testset(Q,B,T,D,E,U,N,M,V,W),'denotes_[]'(U),'denotes_.'(X,C,T),denotes_key(O,P,X),'denotes_='(V,M,S),'denotes_->'(Y,Z,R),'denotes_='(V,F,Z),'denotes_='(O,A1,Y),denotes_var(A1),denotes_1(L),'denotes_[]'(J),'denotes_$case'(O,P,W,G),'denotes_-'(B1,H,A),denotes_key(O,P,B1).
pred_gather(A,B,C,D,E,F,G,H,I):-cut,flat_conj(J,K),clause_gather(K,B,J,C,D,E,F,G,L,M,H,N),exprEval(O,P),pred_gather(Q,B,C,D,E,F,O,N,I),'denotes_+'(G,R,P),denotes_1(R),denotes_1(L),'denotes_;'(J,Q,A).
pred_gather(A,B,C,D,E,F,G,H,I):-flat_conj(A,J),clause_gather(J,B,A,C,D,E,F,G,K,L,H,I),denotes_1(K).
part_testset(A,B):-cut,one_testset(C,D,E,F,G),part_testset(G,H),'denotes_.'(I,H,B),'denotes_-'(C,J,I),'denotes_.'(D,F,J),'denotes_.'(K,E,A),'denotes_-'(C,D,K).
part_testset(A,B):-'denotes_[]'(B),'denotes_[]'(A).
clause_gather(A,B,C,D,E,F,G,H,I,I,J,J):-denotes_true(A).
clause_gather(A,B,C,D,E,F,G,H,I,I,J,J):-cut_p(K),cut,'denotes_,'(K,L,A).
clause_gather(A,B,C,D,E,F,G,H,I,J,K,L):-one_clause_gather(M,B,C,D,E,F,G,H,I,N,K,O),cut,clause_gather(P,B,C,D,E,F,G,H,N,J,O,L),'denotes_,'(M,P,A).
clause_gather(A,B,C,D,E,F,G,H,I,J,K,L):-exprEval(M,N),clause_gather(O,B,C,D,E,F,G,H,M,J,K,L),'denotes_+'(I,P,N),denotes_1(P),'denotes_,'(Q,O,A).
one_clause_gather(A,B,C,D,E,F,G,H,I,J,K,L):-exprEval(J,M),bagof(N,O,P),cut,make_correct(A,C,P),difflist(P,K,L),denotes_valid_testset(A,B,G,Q,R,S,T,D,E,F,O),'denotes_-'(U,V,N),denotes_val(A,T,H,I,S,W,V),denotes_key(Q,R,U),'denotes_+'(I,X,M),denotes_1(X).
make_correct(A,B,C):-cut,make_correct(A,B,D),'denotes_.'(E,D,C),'denotes_-'(F,G,E),denotes_val(A,H,I,J,K,B,G).
make_correct(A,B,C):-'denotes_[]'(C).
valid_testset(A,B,C,D,E,F,G,H,I,J):-internal_testset(A,C,D,E,F,K),logical_simplify(K,G),relational_check(A,C,D),neg(L),neg(M),survive_form(G,C),varset(A,N),subsetv(N,I),varset(E,O),disjointv(O,J),valid_option(A,B,N),denotes_implies(C,G,M),denotes_memberv(P,H,L),denotes_key(D,E,P).
internal_testset(A,B,C,D,E,F):-bindbag(A,B,G),testset(A,F,B,C,D,E),'denotes_[]'(G).
internal_testset(A,B,C,D,E,F):-implies(B,G),cut,'denotes_,'(H,I,G),denotes_atomic(J,I),denotes_atomic(K,H),'denotes_$equal'(K,J,F),denotes_true(E),denotes_v(K,J,D),denotes_equal(C),'denotes_='(K,J,A).
internal_testset(A,B,C,D,E,F):-neg(G),bindbag(A,B,H),testset(A,F,B,C,D,E),'denotes_[]'(H),denotes_unify_p(A,G).
relational_check(A,B,C):-neg(D),cut,denotes_relational_test(A,E,F,D).
relational_check(A,B,C):-relational_test(A,D,E),relational_testset(C),cut.
relational_check(A,B,C):-relational_test(A,D,E),neg(F),logical_simplify(G,H),implies(B,H),cut,'denotes_,'(I,J,G),denotes_integer(E,J),denotes_integer(D,I),denotes_relational_testset(C,F).
valid_option(A,B,C):-goal_type(B,A,D),test_option(D),cut.
goal_type(A,B,C):-split_unify_v_nv(B,D,E),cut,denotes_unify(C).
goal_type(A,B,C):-select_option(A,D),cut,denotes_unify(C),denotes_var(E,B).
goal_type(A,B,C):-select_option(A,D),cut,denotes_unify(C),denotes_nonvar(E,B).
goal_type(A,B,C):-cut,denotes_unify(C),'denotes_$name_arity'(D,E,F,B).
goal_type(A,B,C):-encode_relop(B,D,E,F,G),cut,denotes_arith(G),denotes_arith(C).
goal_type(A,B,C):-denotes_typecheck(C).
test_option(A):-fail,fail,cut,denotes_unify(A).
test_option(A):-fail,fail,cut,denotes_arith(A).
test_option(A):-fail,fail,cut,denotes_typecheck(A).
test_option(A):-true.
firstarg_option(A,B,C):-fail,neg(D),cut,arg(E,A,F),memberv(F,C),denotes_1(E),denotes_unify_p(B,D).
firstarg_option(A,B,C):-fail,unify_p(B),cut,split_unify(B,D,E),arg(F,A,G),ident(D,G),denotes_1(F).
firstarg_option(A,B,C):-true.
testset(A,B,C,D,E,F):-testset(A,B,C,D,E,F,G).
relational_testset(A):-denotes_comparison(B,C,A),denotes_arith(C).
one_testset(A,B,C,D,E):-ident(A,F),ident(B,G),cut,one_testset(A,G,H,D,E),'denotes_.'(I,H,C),'denotes_-'(F,G,I).
one_testset(A,B,C,D,E):-ident(A,F),nonident(B,G),cut,one_testset(A,G,H,I,E),'denotes_.'(G,I,D),'denotes_.'(J,H,C),'denotes_-'(F,G,J).
one_testset(A,B,C,D,E):-nonident(A,F),cut,'denotes_.'(G,H,E),'denotes_-'(F,I,G),'denotes_[]'(D),'denotes_.'(J,H,C),'denotes_-'(F,I,J).
one_testset(A,B,C,D,E):-'denotes_[]'(E),'denotes_[]'(D),'denotes_[]'(C).
first_test(A,B):-first_test(C,D,E,F,B),'denotes_-'(G,H,F),denotes_val(I,J,D,E,K,L,H),'denotes_.'(M,C,A),'denotes_-'(G,N,M),denotes_val(I,J,D,E,K,L,N).
rel_flag(A,B):-relational_testset(C),cut,denotes_yes(B),denotes_key(C,D,A).
rel_flag(A,B):-neg(C),cut,denotes_relational_testset(D,C),denotes_no(B),denotes_key(D,E,A).
pick_eq(A,B,C,D,E,F):-cut,(G;H),denotes_pick_eq(A,B,I,D,E,F,H),'denotes_->'(J,K,G),denotes_pick_eq(L,M,I,D,E,F,K),'denotes_-'(N,O,L),'denotes_,'(P,Q,J),'denotes_,'(R,S,Q),'denotes_,'(T,U,S),'denotes_>'(M,B,U),denotes_goodness_testset(N,O,M,T),'denotes_='(V,F,R),denotes_rel_flag(N,V,P),'denotes_.'(W,I,C),'denotes_-'(N,O,W).
pick_eq(A,B,C,A,B,D):-'denotes_[]'(C).
goodness_testset(A,B,C):-number_of_direcs(B,D),goodness_key(E,F),(G;H),cut,comment(I),'denotes_.'(J,K,I),'denotes_.'(E,L,K),'denotes_.'(M,N,L),'denotes_.'(C,O,N),'denotes_[]'(O),'denotes_ is '(M),'denotes_Goodness of '(J),denotes_is(C,P,H),'denotes_+'(Q,F,P),'denotes_*'(R,D,Q),denotes_1000(R),'denotes_->'(S,T,G),'denotes_='(C,U,T),denotes_0(U),'denotes_,'(V,W,S),'denotes_,'(X,Y,W),'denotes_<'(D,Z,Y),'denotes_='(Z,A1,X),denotes_5(A1),'denotes_='(E,B1,V),denotes_hash(C1,B1),denotes_key(E,D1,A).
first_test(A,B,C,D,D):-'denotes_[]'(A).
first_test(A,B,C,D,E):-(F;G),cut,first_test(H,I,J,K,E),'denotes_-'(L,M,K),denotes_val(N,O,I,J,P,Q,M),'denotes_,'(R,S,G),'denotes_<'(J,C,S),'denotes_=:='(I,B,R),'denotes_<'(I,B,F),'denotes_.'(T,H,A),'denotes_-'(L,U,T),denotes_val(N,O,I,J,P,Q,U).
first_test(A,B,C,D,E):-first_test(F,B,C,D,E),'denotes_.'(G,F,A).
show_tests(A,B):-'denotes_[]'(B),'denotes_[]'(A).
show_tests(A,B):-show_tests(C,D),'denotes_.'(E,D,B),'denotes_-'(F,G,E),denotes_val(H,I,J,K,L,M,G),'denotes_.'(L,I,F),'denotes_.'(N,C,A),denotes_val(H,I,J,K,L,M,N).
make_thin(A,B):-make_thin(C,D,B),'denotes_.'(C,D,A).
show_clnum(A,B):-'denotes_[]'(B),'denotes_[]'(A).
show_clnum(A,B):-show_clnum(C,D),'denotes_.'(E,D,B),'denotes_-'(F,G,E),denotes_val(H,I,F,J,K,L,G),'denotes_.'(M,C,A),denotes_val(H,I,F,J,K,L,M).
make_thin(A,B,C):-'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_[]'(B),'denotes_-'(F,D,A).
make_thin(A,B,C):-ident(D,E),cut,make_thin(F,G,C),'denotes_-'(E,H,F),'denotes_.'(I,G,B),'denotes_-'(E,H,I),'denotes_-'(D,J,A).
make_thin(A,B,C):-nonident(D,E),cut,make_thin(F,G,H),'denotes_-'(E,I,F),'denotes_.'(J,H,C),'denotes_.'(K,G,B),'denotes_-'(E,I,K),'denotes_-'(D,J,A).
get_clause_nums(A,B,B):-'denotes_[]'(A).
get_clause_nums(A,B,C):-constC(B,D,E),get_clause_nums(F,E,C),'denotes_.'(G,F,A),denotes_val(H,I,D,J,K,L,G).
extract_else_disj(A,B,C,D,E):-lt(B,F),cut,exprEval(G,H),extract_else_disj(I,G,J,K,L),'denotes_.'(F,M,I),'denotes_+'(B,N,H),denotes_1(N),'denotes_.'(B,L,E),'denotes_;'(O,K,D),'denotes_;'(O,J,C),'denotes_.'(F,M,A).
extract_else_disj(A,B,C,D,E):-cut,exprEval(F,G),extract_else_disj(H,F,I,D,E),'denotes_+'(B,J,G),denotes_1(J),'denotes_;'(K,I,C),'denotes_.'(B,H,A).
extract_else_disj(A,B,C,D,E):-'denotes_[]'(E),denotes_fail(D),'denotes_.'(B,F,A),'denotes_[]'(F).
extract_else_disj(A,B,C,C,D):-number_disj(C,B,D),'denotes_[]'(A).
full_testset(A,B,C,D):-cut,switch_testset_list(E,F,G),update_testset(C,G,C,D),denotes_v(F,B),denotes_switch(E,A).
full_testset(A,B,C,C):-true.
code_testset(A,B,C,D,E,F,G,H,I,J):-needset(K,D,L),bindset(K,E,M),restore_block(L,F,N,O),save_block(M,O,P),unionv(F,M,Q),merge_disj_list(G,R,H,S,T),subsume(K,T,U),else(K,I,V),(W;X),code_testset(Y,B,C,D,E,Q,G,H,V,Z),cut,'denotes_,'(A1,B1,X),'denotes_,'(C1,D1,B1),'denotes_,'(E1,F1,D1),denotes_selection(U,B,C,G1,H1,I1,F1),denotes_logical_simplify(J1,H1,E1),'denotes_,'(K,K1,J1),denotes_logical_subsume(K,E,K1,C1),denotes_unionv(L,D,G1,A1),'denotes_->'(L1,M1,W),'denotes_='(I1,U,M1),denotes_fail(L1),denotes_true(P),'denotes_;'(N1,Z,J),'denotes_$test'(O1,N,K,M,I1,N1),'denotes_.'(P1,Y,A),denotes_val(Q1,K,R,R1,O1,S,P1).
code_testset(A,B,C,D,E,F,G,H,I,J):-restore_block(F,F,K,L),selection(I,B,C,D,E,M),denotes_true(L),'denotes_$else'(K,F,M,J),'denotes_[]'(A).
needset(A,B,C):-varset(A,D),intersectv(B,D,C).
restore_block(A,B,C,D):-termlt(E,F),restore_block(G,H,C,D),'denotes_.'(F,I,H),'denotes_.'(F,I,B),'denotes_.'(E,G,A).
restore_block(A,B,C,D):-ident(E,F),co(G,C,H),restore_block(I,J,H,D),denotes_restore(E,G),'denotes_.'(F,J,B),'denotes_.'(E,I,A).
restore_block(A,B,C,D):-termgt(E,F),restore_block(G,H,C,D),'denotes_.'(E,I,G),'denotes_.'(F,H,B),'denotes_.'(E,I,A).
restore_block(A,B,C,C):-'denotes_[]'(B).
restore_block(A,B,C,C):-'denotes_[]'(A).
save_block(A,B,C):-co(D,B,E),save_block(F,E,C),denotes_save(G,D),'denotes_.'(G,F,A).
save_block(A,B,B):-'denotes_[]'(A).
merge_disj_list(A,B,C,D,C):-cut,denotes_none(B).
merge_disj_list(A,B,C,D,E):-lt(F,B),cut,merge_disj_list(G,B,H,D,I),'denotes_;'(J,I,E),'denotes_;'(J,H,C),'denotes_.'(F,G,A).
merge_disj_list(A,B,C,D,E):-'denotes_;'(D,C,E).
number_disj(A,B,C):-cut,'denotes_[]'(C),denotes_fail(A).
number_disj(A,B,C):-cut,exprEval(D,E),number_disj(F,D,G),'denotes_+'(B,H,E),denotes_1(H),'denotes_.'(B,G,C),'denotes_;'(I,F,A).
number_disj(A,B,C):-'denotes_.'(B,D,C),'denotes_[]'(D).
peep_flat(A,B):-cut,peep_flat(A,B,C),'denotes_[]'(C).
peep_flat(A,A):-fail.
inst_labl(A,B,B):-varset(B,C),inst_labl_list(C,A).
xpeephole(A,B,C):-write_debug(D,B,E),peep_flat(E,F),inst_labl(A,F,G),insert_error_jump(G,H),peep_simp(H,I),peep_closure(A,I,C),cut,'denotes_peephole started'(D).
insert_error_jump(A,B):-insert_error_jump(A,B,C),'denotes_[]'(C).
peep_simp(A,B):-'denotes_[]'(B),'denotes_[]'(A).
peep_simp(A,B):-peep_simp(C,D,B),'denotes_.'(C,D,A).
peep_closure(A,B,C):-peep_seq(A,B,D),peep_end_closure(A,B,D,C).
peep_seq(A,B,C):-peep_uniq(B,D),peep_dead(D,E),peep_jump_closure(A,E,F),peep_inst(G,F,H),peep_jump_closure(A,H,I),peep_labl(I,J),synonym(J,K),peep_inst(L,K,C),cut,denotes_call(L),denotes_call(G).
peep_end_closure(A,B,B,B):-cut,true.
peep_end_closure(A,B,C,D):-peep_closure(A,C,D).
peep_uniq(A,B):-make_large_blocks(A,C),reverse(C,D),make_unique_array(D,E,F,G),(H;I),'denotes_='(A,B,I),'denotes_->'(J,K,H),'denotes_,'(L,M,K),denotes_map_blocks(A,E,B,M),denotes_comment(N,L),'denotes_.'(O,P,N),'denotes_.'(G,Q,P),'denotes_[]'(Q),'denotes_Number of duplicate blocks = '(O),'denotes_>'(G,R,J),denotes_0(R),denotes_0(F).
peep_dead(A,B):-gather_closure(A,C),peep_dead(A,C,B).
peep_jump_closure(A,B,C):-peep_jump(A,B,D),peep_jump_end_closure(A,B,D,C).
peep_inst(A,B,C):-make_block_array(B,D),peep_inst(B,D,A,C,E),'denotes_[]'(E).
peep_labl(A,B):-branch_dest_set(A,C),list_to_key(C,D),create_array(D,E),remove_label_inst(A,E,B).
synonym(A,B):-synonym(A,B,C),cut,'denotes_[]'(C).
wc(A,A):-write_code(A).
inst_labl_list(A,B):-'denotes_[]'(A).
inst_labl_list(A,B):-gennum(C),inst_labl_list(D,B),'denotes_.'(E,D,A),denotes_l(B,C,E).
insert_error_jump(A,B,B):-'denotes_[]'(A).
insert_error_jump(A,B,C):-cut,error_jump_moves(D,E,F,B,G),local_allocate(E),constC(G,H,I),insert_error_jump(J,I,C),denotes_jump(K,H),'denotes_[]'(F),'denotes_.'(L,J,A),denotes_error_jump(K,D,L).
insert_error_jump(A,B,C):-constC(B,D,E),insert_error_jump(F,E,C),'denotes_.'(D,F,A).
error_jump_moves(A,B,C,D,E):-error_jump_1(A,F,B,G,D,H),low_reg(I),error_jump_2(F,I,G,C,H,E).
local_allocate(A):-local_allocate(A,B,C).
error_jump_1(A,B,C,C,D,D):-'denotes_[]'(B),'denotes_[]'(A).
error_jump_1(A,B,C,D,E,F):-constC(E,G,H),error_jump_1(I,J,K,D,H,F),denotes_move(L,M,G),'denotes_.'(N,O,C),'denotes_.'(L,P,O),'denotes_.'(M,K,P),denotes_pref(N),'denotes_.'(M,J,B),'denotes_.'(L,I,A).
error_jump_2(A,B,C,C,D,D):-'denotes_[]'(A).
error_jump_2(A,B,C,D,E,F):-constC(E,G,H),exprEval(I,J),error_jump_2(K,I,L,D,H,F),'denotes_+'(B,M,J),denotes_1(M),denotes_move(N,O,G),denotes_r(B,O),'denotes_.'(P,Q,C),'denotes_.'(N,R,Q),'denotes_.'(S,L,R),denotes_r(B,S),denotes_pref(P),'denotes_.'(N,K,A).
make_large_blocks(A,B):-'denotes_[]'(B),'denotes_[]'(A).
make_large_blocks(A,B):-first_block(C,D),neg(E),neg(F),cut,make_large_blocks(C,G),denotes_small_block(D,F),denotes_has_label(D,E),'denotes_.'(H,G,B),'denotes_-'(I,D,H),'denotes_.'(J,C,A),denotes_label(I,J).
make_large_blocks(A,B):-make_large_blocks(C,B),'denotes_.'(D,C,A).
make_unique_array(A,B,C,C):-seal(B),'denotes_[]'(A).
make_unique_array(A,B,C,D):-get(B,E,F),cut,(G;H),make_unique_array(I,B,J,D),denotes_is(J,K,H),'denotes_+'(C,L,K),denotes_1(L),'denotes_->'(M,N,G),'denotes_,'(O,P,N),'denotes_='(J,C,P),'denotes_='(F,Q,O),denotes_var(F,M),'denotes_.'(R,I,A),'denotes_-'(Q,E,R).
make_unique_array(A,B,C,D):-make_unique_array(E,B,C,D),'denotes_.'(F,E,A).
map_blocks(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
map_blocks(A,B,C):-first_block(D,E,F),fget(B,E,G),nonident(H,G),cut,map_blocks(F,B,I),'denotes_.'(J,K,C),'denotes_.'(L,I,K),denotes_jump(G,L),denotes_label(H,J),'denotes_.'(M,D,A),denotes_label(H,M).
map_blocks(A,B,C):-branch(D),neg(E),neg(F),first_block(G,H,I),fget(B,H,J),cut,comment(K),map_blocks(I,B,L),'denotes_.'(M,N,K),'denotes_.'(D,O,N),'denotes_[]'(O),'denotes_Able to remove a block after '(M),'denotes_='(G,P,F),'denotes_.'(Q,R,P),denotes_label(S,Q),denotes_distant_branch(D,E),'denotes_.'(D,T,C),'denotes_.'(U,L,T),denotes_jump(J,U),'denotes_.'(D,G,A).
map_blocks(A,B,C):-map_blocks(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
first_block(A,B,C):-cut,'denotes_[]'(C),'denotes_.'(D,E,B),'denotes_[]'(E),'denotes_.'(D,F,A),'denotes_[]'(F).
first_block(A,B,C):-neg(D),cut,first_block(E,F,C),denotes_end_block(G,D),'denotes_.'(G,F,B),'denotes_.'(G,E,A).
first_block(A,B,C):-end_block(D),cut,'denotes_.'(D,E,B),'denotes_[]'(E),'denotes_.'(D,C,A).
first_block(A,B):-first_block(A,B,C).
has_label(A):-'denotes_.'(B,C,A),denotes_label(D,B).
has_label(A):-has_label(B),'denotes_.'(C,B,A).
small_block(A):-'denotes_.'(B,C,A),'denotes_[]'(C),denotes_jump(D,B).
small_block(A):-'denotes_.'(B,C,A),'denotes_[]'(C),denotes_return(B).
small_block(A):-'denotes_.'(B,C,A),'denotes_[]'(C),denotes_fail(B).
peep_jump(A,B,C):-make_block_array(B,D),non_empty_array(D),cut,(E;F),get_uniq_labels(B,G),rearr_jump(B,A,G,D,H),peep_dead(H,I),peep_choice(I,A,G,D,C),denotes_true(F),'denotes_->'(J,K,E),denotes_write_code(B,K),denotes_fail(J).
peep_jump(A,B,B):-true.
peep_jump_end_closure(A,B,B,B):-cut,true.
peep_jump_end_closure(A,B,C,D):-peep_jump_closure(A,C,D).
make_block_array(A,B):-make_blocks(A,C),create_array(C,B).
get_uniq_labels(A,B):-get_label_bag(A,C,D),filter_uniq(C,E),length(E,F),comment(G),create_array(E,B),'denotes_.'(H,I,G),'denotes_.'(F,J,I),'denotes_[]'(J),'denotes_Number of unique labels = '(H),'denotes_[]'(D).
rearr_jump(A,B,C,D,E):-'denotes_[]'(E),'denotes_[]'(A).
rearr_jump(A,B,C,D,E):-neg(F),fget(D,G,H),neg(I),first_block(H,J),(K;L),cut,insert_block(J,B,E,M),rearr_jump(N,B,C,D,M),'denotes_,'(O,P,L),'denotes_\\+'(Q,P),denotes_last(J,R,Q),denotes_jump(S,R),denotes_short_block(J,O),'denotes_,'(T,U,K),'denotes_\\+'(V,U),denotes_last(J,W,V),denotes_jump(G,W),denotes_fget(C,G,X,T),denotes_no_opt_block(H,I),'denotes_='(N,Y,F),'denotes_.'(Z,A1,Y),denotes_label(G,Z),'denotes_.'(B1,N,A),denotes_jump(G,B1).
rearr_jump(A,B,C,D,E):-neg(F),fget(D,G,H),first_block(H,I),(J;K),neg(L),returns_or_fails(I,M),cut,insert_block(M,B,E,N),rearr_jump(O,B,C,D,N),denotes_has_recursion(I,G,L),denotes_short_block(I,K),denotes_fget(C,G,P,J),'denotes_='(O,Q,F),'denotes_.'(R,S,Q),'denotes_.'(T,U,S),denotes_label(G,T),denotes_return(R),'denotes_.'(V,O,A),denotes_call(G,V).
rearr_jump(A,B,C,D,E):-branch(F,G),fget(D,H,I),merge_branch(F,I,J,E,K),cut,inst_labl_list(J,B),rearr_jump(L,B,C,D,K),'denotes_.'(H,M,G),'denotes_[]'(M),'denotes_.'(F,L,A).
rearr_jump(A,B,C,D,E):-map_branch(F,G,H,I),fget(D,G,J),(K;L),cut,rearr_jump(M,B,C,D,N),'denotes_,'(O,P,L),'denotes_='(I,Q,P),denotes_fail(Q),'denotes_='(J,R,O),'denotes_.'(S,T,R),denotes_fail(S),'denotes_='(J,U,K),'denotes_.'(V,W,U),denotes_jump(I,V),'denotes_.'(H,N,E),'denotes_.'(F,M,A).
rearr_jump(A,B,C,D,E):-rearr_jump(F,B,C,D,G),'denotes_.'(H,G,E),'denotes_.'(H,F,A).
peep_choice(A,B,C,D,E):-rearr_choice(A,C,D,F,G),(H;I),'denotes_='(G,E,I),'denotes_->'(J,K,H),'denotes_,'(L,M,K),denotes_comment(N,M),'denotes_.'(O,P,N),'denotes_.'(Q,R,P),'denotes_[]'(R),'denotes_Number of choice-fail replacements = '(O),denotes_repl_choice(G,F,E,S,Q,L),denotes_0(S),'denotes_\\=='(F,T,J),'denotes_[]'(T).
get_label_bag(A,B,B):-cut,'denotes_[]'(A).
get_label_bag(A,B,C):-branch(D,B,E),cut,get_label_bag(F,E,C),'denotes_.'(D,F,A).
get_label_bag(A,B,C):-get_label_bag(D,B,C),'denotes_.'(E,D,A).
get_label_set(A,B):-get_label_bag(A,C,D),sort(C,B),'denotes_[]'(D).
rearr_choice(A,B,C,D,E):-'denotes_[]'(E),'denotes_[]'(D),'denotes_[]'(A).
rearr_choice(A,B,C,D,E):-fget(B,F,G),fget(C,F,H),lt(I,J),le(J,K),cut,(L;M),rearr_choice(N,B,C,O,P),'denotes_='(D,Q,M),'denotes_.'(R,O,Q),denotes_rep(F,S,T,R),'denotes_.'(U,T,S),denotes_choice(V,W,X,U),'denotes_/'(Y,K,V),denotes_1(Y),'denotes_->'(Z,A1,L),'denotes_='(D,B1,A1),'denotes_.'(C1,O,B1),denotes_rep(F,T,T,C1),'denotes_=:='(J,K,Z),denotes_1(I),'denotes_.'(D1,E1,H),denotes_choice(F1,W,X,D1),'denotes_/'(J,K,F1),'denotes_.'(G1,P,E),denotes_jump(F,G1),'denotes_.'(H1,I1,A),'denotes_.'(J1,N,I1),denotes_fail(J1),denotes_choice(K1,L1,F,H1),'denotes_/'(M1,N1,K1),denotes_1(M1).
rearr_choice(A,B,C,D,E):-rearr_choice(F,B,C,D,G),'denotes_.'(H,G,E),'denotes_.'(H,F,A).
repl_choice(A,B,C,D,D):-'denotes_[]'(C),'denotes_[]'(A).
repl_choice(A,B,C,D,E):-member(F,B),cut,exprEval(G,H),repl_choice(I,B,J,G,E),'denotes_+'(D,K,H),denotes_1(K),denotes_rep(L,M,J,F),'denotes_.'(N,M,C),denotes_label(L,N),'denotes_.'(O,P,A),'denotes_.'(Q,I,P),denotes_label(L,O).
repl_choice(A,B,C,D,E):-repl_choice(F,B,G,D,E),'denotes_.'(H,G,C),'denotes_.'(H,F,A).
no_opt_block(A):-'denotes_.'(B,C,A),denotes_pragma(D,B),denotes_push(E,D),denotes_cons(E).
no_opt_block(A):-'denotes_.'(B,C,A),denotes_pragma(D,B),denotes_push(E,D),denotes_structure(F,E).
no_opt_block(A):-'denotes_.'(B,C,A),denotes_unify_atomic(D,E,F,B),denotes_fail(F).
short_block(A):-shorter_than(A,B),denotes_6(B).
insert_block(A,B,C,D):-get_labels(A,E,F),assoc_labels(E,G),inst_labl_list(G,B),replace_labels(A,E,G,C,D),'denotes_[]'(F).
has_recursion(A,B):-cut,'denotes_.'(C,D,A),denotes_call(B,C).
has_recursion(A,B):-has_recursion(C,B),'denotes_.'(D,C,A).
returns_or_fails(A,B):-returns_or_fails(A,B,C),'denotes_[]'(C).
merge_branch(A,B,C,D,E):-constC(D,F,E),denotes_test(G,H,I,J,F),'denotes_[]'(C),'denotes_.'(K,L,B),denotes_test(G,H,I,J,K),denotes_test(G,H,I,M,A).
merge_branch(A,B,C,D,E):-constC(D,F,G),constC(G,H,E),tag(I,J),denotes_var(I),denotes_label(K,H),denotes_switch(L,M,K,N,O,F),'denotes_.'(K,P,C),'denotes_[]'(P),'denotes_.'(Q,R,B),denotes_switch(L,M,S,N,O,Q),denotes_fail(S),denotes_test(T,J,M,U,A),denotes_ne(T).
merge_branch(A,B,C,D,E):-constC(D,F,E),denotes_choice(G,H,I,F),'denotes_/'(J,K,G),'denotes_[]'(C),'denotes_.'(L,M,B),denotes_jump(I,L),denotes_choice(N,H,O,A),'denotes_/'(J,K,N).
merge_branch(A,B,C,D,E):-constC(D,F,G),constC(G,H,E),denotes_jump(I,H),denotes_test(J,K,L,M,F),'denotes_[]'(C),'denotes_.'(N,O,B),'denotes_.'(P,Q,O),denotes_label(I,P),denotes_test(J,K,L,M,N),denotes_jump(R,A).
merge_branch(A,B,C,D,E):-constC(D,F,E),denotes_switch(G,H,I,J,K,F),'denotes_[]'(C),'denotes_.'(L,M,B),denotes_switch(G,H,I,J,K,L),denotes_jump(N,A).
merge_branch(A,B,C,D,E):-constC(D,F,G),constC(G,H,I),constC(I,J,E),denotes_jump(K,J),denotes_test(L,M,N,O,H),denotes_deref(P,N,F),'denotes_[]'(C),'denotes_.'(Q,R,B),'denotes_.'(S,T,R),'denotes_.'(U,V,T),denotes_label(K,U),denotes_test(L,M,N,O,S),denotes_deref(P,N,Q),denotes_jump(W,A).
merge_branch(A,B,C,D,E):-constC(D,F,G),constC(G,H,E),denotes_switch(I,J,K,L,M,H),denotes_deref(N,J,F),'denotes_[]'(C),'denotes_.'(O,P,B),'denotes_.'(Q,R,P),denotes_switch(I,J,K,L,M,Q),denotes_deref(N,J,O),denotes_jump(S,A).
merge_branch(A,B,C,D,E):-constC(D,F,G),constC(G,H,E),denotes_jump(I,H),denotes_jump(J,K,L,M,F),'denotes_[]'(C),'denotes_.'(N,O,B),'denotes_.'(P,Q,O),denotes_label(I,P),denotes_jump(J,K,L,M,N),denotes_jump(R,A).
make_blocks(A,B):-'denotes_[]'(B),'denotes_[]'(A).
make_blocks(A,B):-cut,make_blocks(C,D),'denotes_.'(E,D,B),'denotes_-'(F,C,E),'denotes_.'(G,C,A),denotes_label(F,G).
make_blocks(A,B):-cut,make_blocks(C,D),'denotes_.'(E,D,B),'denotes_-'(F,C,E),'denotes_.'(G,C,A),denotes_procedure(F,G).
make_blocks(A,B):-make_blocks(C,B),'denotes_.'(D,C,A).
basic_block(A,B):-'denotes_.'(C,D,B),denotes_label(E,C),'denotes_.'(F,D,A),denotes_label(E,F).
basic_block(A,B):-basic_block(C,B),'denotes_.'(D,C,A).
end_block(A):-distant_branch(A).
get_labels(A,B,B):-cut,'denotes_[]'(A).
get_labels(A,B,C):-cut,constC(B,D,E),get_labels(F,E,C),'denotes_.'(G,F,A),denotes_label(D,G).
get_labels(A,B,C):-get_labels(D,B,C),'denotes_.'(E,D,A).
assoc_labels(A,B):-cut,'denotes_[]'(B),'denotes_[]'(A).
assoc_labels(A,B):-assoc_labels(C,D),'denotes_.'(E,D,B),'denotes_.'(F,C,A).
replace_labels(A,B,C,D,D):-cut,'denotes_[]'(A).
replace_labels(A,B,C,D,E):-replace_labels_one(F,B,C,D,G),replace_labels(H,B,C,G,E),'denotes_.'(F,H,A).
replace_labels_one(A,B,C,D,E):-memberv2(F,B,G,C),cut,'denotes_.'(H,E,D),denotes_label(G,H),denotes_label(F,A).
replace_labels_one(A,B,C,D,E):-map_branches(A,F,G,H),cut,map_terms(B,C,F,H),'denotes_.'(G,E,D).
replace_labels_one(A,B,C,D,E):-'denotes_.'(A,E,D).
returns_or_fails(A,B,C):-cut,constC(B,D,C),denotes_fail(D),'denotes_.'(E,F,A),'denotes_[]'(F),denotes_fail(E).
returns_or_fails(A,B,B):-cut,'denotes_.'(C,D,A),'denotes_[]'(D),denotes_return(C).
returns_or_fails(A,B,C):-cut,constC(B,D,E),returns_or_fails(F,E,C),denotes_call(G,D),'denotes_.'(H,F,A),denotes_call(G,H).
returns_or_fails(A,B,C):-neg(D),cut,constC(B,E,F),returns_or_fails(G,F,C),denotes_branch(E,D),'denotes_.'(E,G,A).
returns_or_fails(A,B,C):-pure_branch(D,E),all_fails(E),cut,constC(B,D,F),returns_or_fails(G,F,C),'denotes_.'(D,G,A).
all_fails(A):-'denotes_[]'(A).
all_fails(A):-nonvar(B),all_fails(C),denotes_fail(B),'denotes_.'(D,C,A),denotes_fail(D).
gather_closure(A,B):-gather_closure(A,C,B),'denotes_[]'(C).
peep_dead(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
peep_dead(A,B,C):-distant_branch(D),cut,to_next_label(E,B,F),peep_dead(F,B,G),'denotes_.'(D,G,C),'denotes_.'(D,E,A).
peep_dead(A,B,C):-peep_dead(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
to_next_label(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
to_next_label(A,B,C):-(D;E),denotes_to_next_label(F,B,C,E),'denotes_->'(G,H,D),'denotes_='(C,I,H),'denotes_.'(J,F,I),'denotes_,'(K,L,G),denotes_member(M,B,L),'denotes_='(J,N,K),denotes_label(M,N),'denotes_.'(J,F,A).
gather_closure(A,B,C):-gather_labels(A,B,D),sort(D,E),gather_end_closure(A,B,E,C).
gather_labels(A,B,B):-'denotes_[]'(A).
gather_labels(A,B,C):-branch(D,E,B),cut,next_code(D,F,G,E),gather_labels(G,E,C),'denotes_.'(D,F,A).
gather_labels(A,B,C):-member(D,B),cut,gather_labels(E,B,C),'denotes_.'(F,E,A),denotes_label(D,F).
gather_labels(A,B,C):-gather_labels(D,B,C),'denotes_.'(E,D,A).
gather_end_closure(A,B,B,B):-cut,true.
gather_end_closure(A,B,C,D):-gather_closure(A,C,D).
next_code(A,B,C,D):-distant_branch(A),cut,to_next_label(B,D,C).
next_code(A,B,B,C):-true.
branch_dest_set(A,B):-branch_dest_bag(A,C),sort(C,B).
remove_label_inst(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
remove_label_inst(A,B,C):-(D;E),remove_label_inst(F,B,G),'denotes_='(C,H,E),'denotes_.'(I,G,H),'denotes_->'(J,K,D),'denotes_='(C,G,K),'denotes_,'(L,M,J),'denotes_\\+'(N,M),denotes_fget(B,O,P,N),'denotes_='(I,Q,L),denotes_label(O,Q),'denotes_.'(I,F,A).
branch_dest_bag(A,B):-'denotes_[]'(B),'denotes_[]'(A).
branch_dest_bag(A,B):-(C;D),denotes_branch_dest_bag(E,B,D),'denotes_->'(F,G,C),denotes_branch_dest_bag(E,H,G),denotes_branch(I,B,H,F),'denotes_.'(I,E,A).
peep_inst(A,B,C,D,D):-'denotes_[]'(A).
peep_inst(A,B,C,D,E):-success_to_cut(F,B),cut,peep_inst(F,B,C,D,E),'denotes_.'(G,F,A),denotes_choice(H,I,J,G),'denotes_/'(K,L,H),denotes_1(K).
peep_inst(A,B,C,D,E):-lt(F,G),lt(G,H),success_to_cut(I,B),cut,peep_inst(J,B,C,D,E),'denotes_.'(K,I,J),denotes_choice(L,M,N,K),denotes_fail(N),'denotes_/'(H,H,L),denotes_1(F),'denotes_.'(O,I,A),denotes_choice(P,M,Q,O),'denotes_/'(G,H,P).
peep_inst(A,B,C,D,E):-rearr_dealloc(F,G,H),cut,peep_inst(H,B,I,D,E),denotes_call(I),denotes_call(C),'denotes_.'(J,F,A),denotes_call(G,J).
peep_inst(A,B,C,D,E):-lbl(F),contains_label(G,F),cut,peep_inst(G,B,C,D,E),'denotes_.'(H,G,A),denotes_jump(F,H).
peep_inst(A,B,C,D,E):-cpeep3(F,G,H,I,J),cut,peep_inst(I,B,K,D,E),denotes_call(K),denotes_call(C),'denotes_.'(F,L,A),'denotes_.'(G,M,L),'denotes_.'(H,J,M).
peep_inst(A,B,C,D,E):-peep3r(F,G,H,I,J),cut,peep_inst(K,B,C,D,E),'denotes_.'(L,I,K),'denotes_.'(L,M,A),'denotes_.'(F,N,M),'denotes_.'(G,O,N),'denotes_.'(H,J,O).
peep_inst(A,B,C,D,E):-peep3r(F,G,H,I,J),cut,peep_inst(I,B,C,D,E),'denotes_.'(F,K,A),'denotes_.'(G,L,K),'denotes_.'(H,J,L).
peep_inst(A,B,C,D,E):-peep3(F,G,H,I,J),cut,peep_inst(I,B,C,D,E),'denotes_.'(F,K,A),'denotes_.'(G,L,K),'denotes_.'(H,J,L).
peep_inst(A,B,C,D,E):-peep2r(F,G,H,I),cut,peep_inst(J,B,C,D,E),'denotes_.'(K,H,J),'denotes_.'(K,L,A),'denotes_.'(F,M,L),'denotes_.'(G,I,M).
peep_inst(A,B,C,D,E):-peep2r(F,G,H,I),cut,peep_inst(H,B,C,D,E),'denotes_.'(F,J,A),'denotes_.'(G,I,J).
peep_inst(A,B,C,D,E):-peep2(F,G,H,I),cut,peep_inst(H,B,C,D,E),'denotes_.'(F,J,A),'denotes_.'(G,I,J).
peep_inst(A,B,C,D,E):-peep1r(F,D,G),cut,peep_inst(H,B,C,G,E),'denotes_.'(I,J,H),'denotes_.'(I,K,A),'denotes_.'(F,J,K).
peep_inst(A,B,C,D,E):-peep1r(F,D,G),cut,peep_inst(H,B,C,G,E),'denotes_.'(F,H,A).
peep_inst(A,B,C,D,E):-peep1(F,D,G),cut,peep_inst(H,B,C,G,E),'denotes_.'(F,H,A).
peep_inst(A,B,C,D,E):-constC(D,F,G),peep_inst(H,B,C,G,E),'denotes_.'(F,H,A).
peep_simp(A,B,C):-cut,peep_simp(B,C),denotes_move(D,D,A).
peep_simp(A,B,C):-cut,peep_simp(B,C),denotes_nop(A).
peep_simp(A,B,C):-peep_simp(B,D),'denotes_.'(A,D,C).
success_to_cut(A,B):-cut,'denotes_.'(C,D,A),denotes_cut(E,C).
success_to_cut(A,B):-cut,fail,'denotes_.'(C,D,A),denotes_move(E,F,C),denotes_r(G,F),denotes_b(G).
success_to_cut(A,B):-fget(B,C,D),cut,success_to_cut(D,B),'denotes_.'(E,F,A),denotes_jump(C,E).
success_to_cut(A,B):-fget(B,C,D),cut,success_to_cut(D,B),'denotes_.'(E,F,A),denotes_call(C,E).
success_to_cut(A,B):-local_instr(C),cut,success_to_cut(D,B),'denotes_.'(C,D,A).
rearr_dealloc(A,B,C):-cut,rearr_dealloc(D,B,E),'denotes_.'(F,E,C),denotes_deallocate(G,F),'denotes_.'(H,D,A),denotes_deallocate(G,H).
rearr_dealloc(A,B,C):-'denotes_.'(D,E,C),denotes_jump(B,D),'denotes_.'(F,E,A),denotes_return(F).
lbl(A):-denotes_fail(A).
lbl(A):-atom(B),integer(C),ge(C,D),denotes_0(D),'denotes_/'(B,C,A).
lbl(A):-atom(B),integer(C),ge(C,D),integer(E),denotes_0(D),denotes_l(F,E,A),'denotes_/'(B,C,F).
contains_label(A,B):-cut,'denotes_.'(C,D,A),denotes_label(B,C).
contains_label(A,B):-contains_label(C,B),'denotes_.'(D,C,A),denotes_label(E,D).
contains_label(A,B):-contains_label(C,B),'denotes_.'(D,C,A),denotes_pragma(E,D).
cpeep3(A,B,C,D,E):-constC(D,F,G),constC(G,H,I),constC(I,J,E),denotes_return(J),denotes_label(K,H),denotes_jump(L,F),denotes_return(C),denotes_label(K,B),denotes_call(L,A).
peep3r(A,B,C,D,E):-no_mod(B,F),neg(G),constC(D,H,I),constC(I,B,E),denotes_test(J,K,F,L,H),'denotes_='(B,M,G),denotes_label(N,M),denotes_test(J,K,F,O,C),denotes_test(J,K,F,L,A).
peep3r(A,B,A,C,D):-distant_branch(A),constC(C,E,F),constC(F,A,D),denotes_label(G,E),denotes_label(G,B).
peep3r(A,B,C,D,E):-cond(F,G),lbl(H),constC(D,I,J),constC(J,K,E),denotes_label(L,K),denotes_jump(G,M,N,H,I),denotes_label(L,C),denotes_jump(H,B),denotes_jump(F,M,N,L,A).
peep3r(A,B,C,D,E):-cond(F,G),lbl(H),constC(D,I,J),constC(J,K,E),denotes_label(L,K),denotes_jump_nt(G,M,N,H,I),denotes_label(L,C),denotes_jump(H,B),denotes_jump_nt(F,M,N,L,A).
peep3r(A,B,C,D,E):-cond(F,G),constC(D,H,I),constC(I,J,E),denotes_label(K,J),denotes_jump(G,L,M,N,H),denotes_fail(N),denotes_label(K,C),denotes_fail(B),denotes_jump(F,L,M,K,A).
peep3r(A,B,C,D,E):-cond(F,G),constC(D,H,I),constC(I,J,E),denotes_label(K,J),denotes_jump_nt(G,L,M,N,H),denotes_fail(N),denotes_label(K,C),denotes_fail(B),denotes_jump_nt(F,L,M,K,A).
peep3r(A,B,C,D,E):-eq_ne(F,G),constC(D,H,I),constC(I,J,E),denotes_label(K,J),denotes_test(G,L,M,N,H),denotes_fail(N),denotes_label(K,C),denotes_fail(B),denotes_test(F,L,M,K,A).
peep3r(A,B,C,D,E):-eq_ne(F,G),lbl(H),constC(D,I,J),constC(J,K,E),denotes_label(L,K),denotes_test(G,M,N,H,I),denotes_label(L,C),denotes_jump(H,B),denotes_test(F,M,N,L,A).
peep3r(A,B,C,D,E):-constC(D,F,G),constC(G,H,E),tag(I),integer(J),reg(K),reg(L),nonident(K,L),denotes_push(K,L,J,H),denotes_move(M,K,F),'denotes_^'(I,L,M),denotes_move(K,N,C),'denotes_.'(K,O,N),'denotes_[]'(O),denotes_adda(L,J,L,B),denotes_move(P,K,A),'denotes_^'(I,L,P).
peep3r(A,B,C,D,E):-reg(F),neg(G),neg(H),constC(D,I,J),constC(J,K,E),denotes_move(L,F,K),denotes_move(M,N,I),denotes_is_in(F,L,H),denotes_is_in(F,N,G),denotes_move(L,F,C),denotes_move(F,N,B),denotes_move(M,F,A).
peep3r(A,B,C,D,D):-is_in(E,F),denotes_move(F,G,C),denotes_r(H,G),denotes_void(H),denotes_pragma(I,B),denotes_align(E,J,I),denotes_pragma(K,A),denotes_tag(E,L,K).
peep3r(A,B,C,D,D):-is_in(E,F),denotes_deref(F,G,C),denotes_r(H,G),denotes_void(H),denotes_pragma(I,B),denotes_align(E,J,I),denotes_pragma(K,A),denotes_tag(E,L,K).
peep3(A,B,C,D,E):-local_instr(A),neg(F),neg(G),constC(D,H,I),constC(I,J,K),constC(K,L,E),denotes_fail(L),denotes_label(M,J),denotes_fail(H),'denotes_='(A,N,G),denotes_fail(N),'denotes_='(A,O,F),denotes_cut(P,O),denotes_fail(C),denotes_label(M,B).
peep3(A,B,C,D,E):-reg(F),ind(G,H),a_var(H),neg(I),neg(J),constC(D,K,L),constC(L,M,N),constC(N,O,E),denotes_move(F,G,O),denotes_pragma(P,M),denotes_tag(H,Q,P),denotes_move(R,F,K),denotes_is_in(F,G,J),denotes_reg(R,I),denotes_move(R,F,C),denotes_move(R,G,B),denotes_pragma(S,A),denotes_tag(H,Q,S).
peep3(A,B,C,D,E):-perm(F),reg(G),constC(D,H,I),constC(I,J,K),constC(K,L,E),denotes_move(G,M,L),'denotes_.'(G,N,M),'denotes_[]'(N),denotes_pragma(O,J),denotes_tag(G,P,O),denotes_move(F,G,H),denotes_move(G,Q,C),'denotes_.'(G,R,Q),'denotes_[]'(R),denotes_pragma(S,B),denotes_tag(F,P,S),denotes_move(F,G,A).
peep3(A,B,C,D,E):-reg(F),a_var(G),tag(H),constC(D,I,J),constC(J,K,L),constC(L,M,E),denotes_move(F,G,M),denotes_push(F,N,O,K),denotes_r(P,N),denotes_h(P),denotes_move(Q,F,I),'denotes_^'(H,R,Q),denotes_r(S,R),denotes_h(S),denotes_deref(F,G,C),denotes_push(F,T,O,B),denotes_r(U,T),denotes_h(U),denotes_move(V,F,A),'denotes_^'(H,W,V),denotes_r(X,W),denotes_h(X).
peep2r(A,B,C,D):-constC(C,E,D),tag(F,G),denotes_integer(F),denotes_add(H,I,J,E),denotes_test(K,G,J,L,B),denotes_ne(K),denotes_add(H,I,J,A).
peep2r(A,B,C,D):-constC(C,E,D),tag(F,G),denotes_integer(F),denotes_sub(H,I,J,E),denotes_test(K,G,J,L,B),denotes_ne(K),denotes_sub(H,I,J,A).
peep2r(A,B,C,D):-constC(C,E,D),tag(F,G),denotes_integer(F),denotes_div(H,I,J,E),denotes_test(K,G,J,L,B),denotes_ne(K),denotes_div(H,I,J,A).
peep2r(A,B,C,D):-constC(C,E,D),tag(F,G),denotes_integer(F),denotes_mul(H,I,J,E),denotes_test(K,G,J,L,B),denotes_ne(K),denotes_mul(H,I,J,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_pragma(F,E),denotes_pragma(F,B),denotes_pragma(F,A).
peep2r(A,B,C,D):-neg(E),neg(F),constC(C,G,D),denotes_deref(H,I,G),denotes_ind(I,F),denotes_ind(H,E),denotes_deref(H,I,B),denotes_pragma(J,A),denotes_tag(K,L,J).
peep2r(A,B,C,C):-denotes_deallocate(D,B),denotes_allocate(D,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_label(F,E),denotes_label(F,B),denotes_jump_nt(G,H,I,F,A).
peep2r(A,B,C,D):-distant_branch(A),neg(E),constC(C,A,D),'denotes_='(B,F,E),denotes_label(G,F).
peep2r(A,B,C,D):-constC(C,E,D),denotes_label(F,E),denotes_label(F,B),denotes_label(F,A).
peep2r(A,B,C,D):-neg(E),constC(C,F,D),denotes_move(G,H,F),denotes_is_in(H,G,E),denotes_move(H,G,B),denotes_move(G,H,A).
peep2r(A,B,C,D):-neg(E),constC(C,F,D),denotes_move(G,H,F),denotes_is_in(H,G,E),denotes_move(G,H,B),denotes_move(I,H,A).
peep2r(A,B,C,D):-neg(E),constC(C,F,D),denotes_move(G,H,F),denotes_is_in(H,G,E),denotes_move(G,H,B),denotes_move(G,H,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_return(E),denotes_return(B),denotes_return(A).
peep2r(A,B,C,D):-reg(E,F),low_reg(G),ge(F,H),functor(I,J,K),neg(L),constC(C,M,D),denotes_jump(N,M),'denotes_/'(J,K,N),denotes_survive(I,L),'denotes_+'(K,G,H),denotes_jump(O,B),'denotes_/'(J,K,O),denotes_move(P,E,A).
peep2r(A,B,C,D):-reg(E,F),low_reg(G),ge(F,H),functor(I,J,K),neg(L),constC(C,M,D),denotes_call(N,M),'denotes_/'(J,K,N),denotes_survive(I,L),'denotes_+'(K,G,H),denotes_call(O,B),'denotes_/'(J,K,O),denotes_move(P,E,A).
peep2r(A,B,C,D):-local_instr(A),neg(E),constC(C,F,D),denotes_fail(F),'denotes_='(A,G,E),denotes_cut(H,G),denotes_fail(B).
peep2r(A,B,C,D):-pure_branch(A,E),all_fails(E),constC(C,F,D),denotes_fail(F),denotes_fail(B).
peep2r(A,B,C,D):-constC(C,E,D),denotes_fail(E),denotes_fail(B),denotes_pragma(F,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_fail(E),denotes_fail(B),denotes_fail(A).
peep2r(A,B,C,D):-neg(E),constC(C,F,D),denotes_fail(F),'denotes_='(B,G,E),denotes_label(H,G),denotes_fail(A).
peep2r(A,B,C,D):-neg(E),neg(F),constC(C,G,D),denotes_pair(H,I,G),'denotes_='(B,J,F),denotes_label(K,J),'denotes_='(B,L,E),denotes_pair(M,N,L),denotes_pair(H,I,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_cut(F,E),denotes_cut(F,B),denotes_choice(G,H,I,A),'denotes_/'(J,K,G),denotes_1(J).
peep2r(A,B,C,D):-constC(C,E,D),gt(F,G),lt(F,H),denotes_1(G),denotes_jump(I,E),denotes_fail(B),denotes_choice(J,K,I,A),'denotes_/'(F,H,J).
peep2r(A,B,C,D):-tag(E,F),constC(C,G,D),denotes_equal(H,I,J,G),'denotes_^'(F,K,I),denotes_atom(E),denotes_equal(H,L,J,B),'denotes_^'(F,K,L),denotes_test(M,F,H,J,A),denotes_ne(M).
peep2r(A,B,C,D):-constC(C,E,D),denotes_label(F,E),denotes_label(F,B),denotes_test(G,H,I,F,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_label(F,E),denotes_label(F,B),denotes_equal(G,H,F,A).
peep2r(A,B,C,D):-merge_add,constC(C,E,D),exprEval(F,G),'denotes_+'(H,I,G),denotes_push(J,K,F,E),denotes_adda(K,I,K,B),denotes_push(J,K,H,A).
peep2r(A,B,C,D):-merge_add,constC(C,E,D),exprEval(F,G),'denotes_+'(H,I,G),denotes_push(J,K,F,E),denotes_r(L,K),denotes_h(L),denotes_pad(I,B),denotes_push(J,M,H,A),denotes_r(N,M),denotes_h(N).
peep2r(A,B,C,D):-merge_add,constC(C,E,D),exprEval(F,G),'denotes_+'(H,I,G),denotes_adda(J,F,J,E),denotes_adda(J,I,J,B),denotes_adda(J,H,J,A).
peep2r(A,B,C,D):-constC(C,E,D),exprEval(F,G),'denotes_+'(H,I,G),denotes_pad(F,E),denotes_pad(I,B),denotes_pad(H,A).
peep2r(A,B,C,D):-tag(E,F),constC(C,G,D),denotes_switch(H,I,J,K,L,G),denotes_var(E),denotes_switch(H,I,M,K,L,B),denotes_test(N,F,I,J,A),denotes_eq(N).
peep2r(A,B,C,D):-constC(C,E,D),denotes_switch(F,G,H,I,J,E),denotes_switch(F,G,H,K,J,B),denotes_test(L,F,G,I,A),denotes_eq(L).
peep2r(A,B,C,D):-tag(E,F),nonident(G,F),nonident(G,H),constC(C,I,D),denotes_switch(H,J,K,L,M,I),denotes_var(E),denotes_switch(H,J,K,L,M,B),denotes_test(N,G,J,M,A),denotes_eq(N).
peep2r(A,B,C,D):-constC(C,E,D),nonident(F,G),denotes_fail(G),denotes_label(F,E),denotes_label(F,B),denotes_test(H,I,J,F,A).
peep2r(A,B,C,D):-constC(C,E,D),denotes_test(F,G,H,I,E),denotes_test(F,G,H,J,B),denotes_test(F,G,H,I,A).
peep2r(A,B,C,C):-is_in(D,E),denotes_move(E,F,B),denotes_r(G,F),denotes_void(G),denotes_pragma(H,A),denotes_tag(D,I,H).
peep2r(A,B,C,C):-is_in(D,E),denotes_deref(E,F,B),denotes_r(G,F),denotes_void(G),denotes_pragma(H,A),denotes_tag(D,I,H).
peep2r(A,B,C,D):-reg(E),(F;G),constC(C,H,D),denotes_move(I,E,H),'denotes_,'(J,K,G),'denotes_,'(L,M,K),'denotes_\\=='(N,O,M),denotes_tag(P,O,L),denotes_var(P),'denotes_='(I,Q,J),'denotes_^'(N,R,Q),denotes_integer(I,F),denotes_deref(E,E,B),denotes_move(I,E,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_integer(H),denotes_jump(J,G),denotes_fadd(K,L,M,E),denotes_test(N,I,M,J,B),denotes_ne(N),denotes_fadd(K,L,M,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_integer(H),denotes_jump(J,G),denotes_fsub(K,L,M,E),denotes_test(N,I,M,J,B),denotes_ne(N),denotes_fsub(K,L,M,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_integer(H),denotes_jump(J,G),denotes_fdiv(K,L,M,E),denotes_test(N,I,M,J,B),denotes_ne(N),denotes_fdiv(K,L,M,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_integer(H),denotes_jump(J,G),denotes_fmul(K,L,M,E),denotes_test(N,I,M,J,B),denotes_ne(N),denotes_fmul(K,L,M,A).
peep2(A,B,C,D):-lbl(E),constC(C,F,G),constC(G,H,D),eq_ne(I,J),denotes_fail(H),denotes_test(J,K,L,E,F),denotes_jump(E,B),denotes_test(I,K,L,M,A),denotes_fail(M).
peep2(A,B,C,D):-perm(E),reg(F),constC(C,G,H),constC(H,I,D),denotes_move(F,E,I),denotes_move(J,F,G),denotes_move(E,F,B),denotes_move(J,E,A).
peep2(A,B,C,D):-perm(E),reg(F),constC(C,G,H),constC(H,I,D),denotes_move(F,E,I),denotes_deref(J,F,G),denotes_move(E,F,B),denotes_deref(J,E,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),denotes_move(H,I,G),denotes_deref(J,H,E),denotes_deref(H,I,B),denotes_deref(J,H,A).
peep2(A,B,C,D):-reg(E),perm(F),neg(G),neg(H),constC(C,I,J),constC(J,K,D),denotes_move(E,F,K),denotes_move(L,E,I),denotes_is_in(F,L,H),denotes_reg(L,G),denotes_move(L,E,B),denotes_move(L,F,A).
peep2(A,B,C,D):-reg(E),ind(F),neg(G),neg(H),constC(C,I,J),constC(J,K,D),denotes_move(E,F,K),denotes_move(L,E,I),denotes_is_in(E,F,H),denotes_reg(L,G),denotes_move(L,E,B),denotes_move(L,F,A).
peep2(A,B,C,D):-reg(E),neg(F),ind(G),constC(C,H,I),constC(I,J,D),denotes_move(E,K,J),denotes_move(E,G,H),denotes_reg(K,F),denotes_move(G,K,B),denotes_move(E,G,A).
peep2(A,B,C,D):-cond(E,F),lbl(G),constC(C,H,I),constC(I,J,D),denotes_fail(J),denotes_jump(F,K,L,G,H),denotes_jump(G,B),denotes_jump(E,K,L,M,A),denotes_fail(M).
peep2(A,B,C,D):-cond(E,F),lbl(G),constC(C,H,I),constC(I,J,D),denotes_fail(J),denotes_jump_nt(F,K,L,G,H),denotes_jump(G,B),denotes_jump_nt(E,K,L,M,A),denotes_fail(M).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_var(H),denotes_label(J,G),denotes_test(K,I,L,M,E),denotes_fail(M),denotes_eq(K),denotes_label(J,B),denotes_switch(N,L,O,J,J,A),denotes_fail(O).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_var(H),denotes_label(J,G),denotes_test(K,I,L,M,E),denotes_fail(M),denotes_ne(K),denotes_label(J,B),denotes_switch(N,L,J,O,P,A),denotes_fail(P),denotes_fail(O).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),denotes_label(H,G),denotes_test(I,J,K,L,E),denotes_fail(L),denotes_ne(I),denotes_label(H,B),denotes_switch(J,K,M,H,N,A),denotes_fail(N),denotes_fail(M).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),denotes_label(H,G),denotes_test(I,J,K,L,E),denotes_fail(L),denotes_eq(I),denotes_label(H,B),denotes_switch(J,K,H,M,H,A),denotes_fail(M).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),denotes_label(H,G),denotes_test(I,J,K,L,E),denotes_eq(I),denotes_label(H,B),denotes_switch(J,K,H,L,H,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),denotes_label(H,G),denotes_test(I,J,K,L,E),denotes_ne(I),denotes_label(H,B),denotes_switch(J,K,L,H,L,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_var(H),denotes_label(J,G),denotes_test(K,I,L,M,E),denotes_ne(K),denotes_label(J,B),denotes_switch(N,L,J,M,M,A).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),tag(H,I),denotes_var(H),denotes_label(J,G),denotes_test(K,I,L,M,E),denotes_eq(K),denotes_label(J,B),denotes_switch(N,L,M,J,J,A).
peep2(A,B,C,D):-merge_add,constC(C,E,F),constC(F,G,D),inc_reg(A,H,I,G),denotes_adda(H,I,H,E),denotes_adda(H,I,H,B).
peep2(A,B,C,D):-constC(C,E,F),constC(F,G,D),inc_reg(A,H,I,G),denotes_r(J,H),denotes_h(J),denotes_pad(I,E),denotes_pad(I,B).
peep2(A,B,C,D):-(E;F),cond_ftest(G,H),tag_ftest(I,J),ftest(K,H,J,L,M),constC(C,N,O),constC(O,M,D),denotes_jump(G,P,Q,R,N),'denotes_='(S,Q,F),'denotes_='(S,P,E),denotes_test(K,I,S,L,B),denotes_jump(G,P,Q,R,A).
peep2(A,B,C,D):-arith_ftest(A,E,F,G,H),(I;J),tag_ftest(K,L),ftest(M,E,L,N,O),constC(C,A,P),constC(P,O,D),'denotes_;'(Q,R,J),'denotes_='(S,H,R),'denotes_='(S,G,Q),'denotes_='(S,F,I),denotes_test(M,K,S,N,B).
peep1r(A,B,B):-get_tag(C,D),eq_ne(E,F),tmatch(F,G,D),denotes_test(E,G,C,H,A).
peep1r(A,B,B):-denotes_nop(A).
peep1r(A,B,B):-denotes_cut(C,A),denotes_r(D,C),denotes_b(D).
peep1r(A,B,B):-denotes_move(C,C,A).
peep1r(A,B,B):-denotes_unify(C,C,D,E,F,A).
peep1r(A,B,B):-denotes_equal(C,C,D,A).
peep1r(A,B,B):-denotes_pad(C,A),denotes_0(C).
peep1r(A,B,B):-denotes_pragma(C,A),denotes_align(D,E,C),denotes_1(E).
peep1r(A,B,B):-denotes_jump(C,D,D,E,A),denotes_ne(C).
peep1r(A,B,B):-denotes_jump_nt(C,D,D,E,A),denotes_ne(C).
peep1r(A,B,B):-denotes_move(C,D,A),denotes_r(E,D),denotes_void(E).
peep1r(A,B,B):-denotes_deref(C,D,A),denotes_r(E,D),denotes_void(E).
peep1(A,B,C):-get_tag(D,E),tmatch(F,G,E),constC(B,H,C),denotes_jump(I,H),denotes_test(F,G,D,I,A).
peep1(A,B,C):-neg(D),constC(B,E,C),denotes_deref(F,E),denotes_write_once(D),denotes_deref(F,F,A).
peep1(A,B,C):-nonident(D,E),s_oper(D,F),s_oper(E,G),constC(B,H,C),denotes_move(F,G,H),denotes_move(D,E,A).
peep1(A,B,C):-s_oper(D,E),s_oper(F,G),constC(B,H,C),denotes_equal(E,G,I,H),denotes_equal(D,F,I,A).
peep1(A,B,C):-s_oper(D,E),s_oper(F,G),constC(B,H,C),denotes_unify(E,G,I,J,K,H),denotes_unify(D,F,I,J,K,A).
peep1(A,B,C):-constC(B,D,C),denotes_fail(D),denotes_jump(E,A),denotes_fail(E).
peep1(A,B,C):-constC(B,D,C),denotes_fail(D),denotes_switch(E,F,G,H,I,A),denotes_fail(I),denotes_fail(H),denotes_fail(G).
peep1(A,B,C):-nonident(D,E),constC(B,F,C),denotes_jump(D,F),denotes_fail(E),denotes_switch(G,H,D,D,D,A).
peep1(A,B,C):-constC(B,D,E),constC(E,F,C),tag(G,H),denotes_var(G),denotes_fail(F),denotes_test(I,H,J,K,D),denotes_ne(I),denotes_switch(L,J,M,K,K,A),denotes_fail(M).
peep1(A,B,C):-constC(B,D,E),constC(E,F,C),tag(G,H),denotes_var(G),denotes_fail(F),denotes_test(I,H,J,K,D),denotes_eq(I),denotes_switch(L,J,K,M,N,A),denotes_fail(N),denotes_fail(M).
peep1(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_fail(F),denotes_test(G,H,I,J,D),denotes_eq(G),denotes_switch(H,I,K,J,L,A),denotes_fail(L),denotes_fail(K).
peep1(A,B,C):-constC(B,D,E),constC(E,F,C),denotes_fail(F),denotes_test(G,H,I,J,D),denotes_ne(G),denotes_switch(H,I,J,K,J,A),denotes_fail(K).
peep1(A,B,C):-exprEval(D,E),lt(D,F),noteq(D,G),constC(B,H,C),denotes_pad(D,H),denotes_0(G),denotes_mod(F,I,E),denotes_1(I),denotes_pad(F,A).
peep1(A,B,C):-constC(B,D,C),denotes_fail(D),denotes_jump(E,F,F,G,A),denotes_fail(G),denotes_eq(E).
peep1(A,B,C):-constC(B,D,C),denotes_fail(D),denotes_jump_nt(E,F,F,G,A),denotes_fail(G),denotes_eq(E).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_+'(D,E,G),denotes_add(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_-'(D,E,G),denotes_sub(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_*'(D,E,G),denotes_mul(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_//'(D,E,G),denotes_div(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_/\\'(D,E,G),denotes_and(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_\\/'(D,E,G),denotes_or(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),xor(D,E,F),constC(B,G,C),denotes_move(F,H,G),denotes_xor(D,E,H,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_<<'(D,E,G),denotes_sll(D,E,I,A).
peep1(A,B,C):-integer(D),integer(E),exprEval(F,G),constC(B,H,C),denotes_move(F,I,H),'denotes_>>'(D,E,G),denotes_sra(D,E,I,A).
get_tag(A,B):-integer(A),gt(A,C),tag_always(D,B),denotes_nonnegative(D),denotes_0(C).
get_tag(A,B):-integer(A),le(A,C),tag_always(D,B),denotes_negative(D),denotes_0(C).
get_tag(A,B):-float(A),tag_always(C,B),denotes_float(C).
get_tag(A,B):-tag(C,B),denotes_atom(C),'denotes_^'(B,D,A).
eq_ne(A,B):-denotes_ne(B),denotes_eq(A).
eq_ne(A,B):-denotes_eq(B),denotes_ne(A).
tmatch(A,B,B):-denotes_eq(A).
tmatch(A,B,C):-tag(D,B),tag_always(E,C),denotes_nonnegative(E),denotes_integer(D),denotes_eq(A).
tmatch(A,B,C):-tag(D,B),tag_always(E,C),denotes_negative(E),denotes_integer(D),denotes_eq(A).
tmatch(A,B,C):-tag(D,C),tag_always(E,B),denotes_nonnegative(E),denotes_integer(D),denotes_eq(A).
tmatch(A,B,C):-tag(D,C),tag_always(E,B),denotes_negative(E),denotes_integer(D),denotes_eq(A).
tmatch(A,B,C):-neg(D),denotes_tmatch(E,B,C,D),denotes_eq(E),denotes_ne(A).
s_oper(A,B):-(C;D),'denotes_='(A,B,D),'denotes_->'(E,F,C),denotes_true(F),denotes_s_o(A,B,E).
ind(A):-'denotes_.'(B,C,A),'denotes_[]'(C).
is_in(A,A):-true.
is_in(A,B):-'denotes_+'(A,C,B).
is_in(A,B):-'denotes_-'(A,C,B).
is_in(A,B):-'denotes_.'(A,C,B),'denotes_[]'(C).
is_in(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),'denotes_+'(A,E,C).
is_in(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),'denotes_-'(A,E,C).
is_in(A,B):-pointer_tag(C),'denotes_^'(C,A,B).
is_in(A,B):-pointer_tag(C),'denotes_^'(C,D,B),'denotes_+'(A,E,D).
is_in(A,B):-pointer_tag(C),'denotes_^'(C,D,B),'denotes_-'(A,E,D).
reg(A,B):-integer(B),denotes_r(B,A).
reg(A):-atomic(B),denotes_r(B,A).
perm(A):-integer(B),denotes_p(B,A).
inc_reg(A,B,C,D):-add_ea(E,B,C,F),add_ea(G,B,C,H),denotes_move(F,H,D),denotes_move(E,G,A).
inc_reg(A,B,C,D):-denotes_pragma(E,D),denotes_pragma(E,A).
cond_ftest(A,B):-cond_to_float(C,A),denotes_f(B).
cond_ftest(A,B):-cond_to_float(A,C),denotes_i(B).
tag_ftest(A,B):-tag(C,A),denotes_float(C),denotes_f(B).
tag_ftest(A,B):-tag(C,A),denotes_integer(C),denotes_i(B).
tag_ftest(A,B):-tag(C,A),denotes_negative(C),denotes_i(B).
tag_ftest(A,B):-tag(C,A),denotes_nonnegative(C),denotes_i(B).
ftest(A,B,C,D,E):-denotes_nop(E),denotes_i(C),denotes_f(B),denotes_eq(A).
ftest(A,B,C,D,E):-denotes_nop(E),denotes_f(C),denotes_i(B),denotes_eq(A).
ftest(A,B,C,D,E):-denotes_nop(E),denotes_f(C),denotes_f(B),denotes_ne(A).
ftest(A,B,C,D,E):-denotes_nop(E),denotes_i(C),denotes_i(B),denotes_ne(A).
ftest(A,B,C,D,E):-denotes_jump(D,E),denotes_f(C),denotes_f(B),denotes_eq(A).
ftest(A,B,C,D,E):-denotes_jump(D,E),denotes_i(C),denotes_i(B),denotes_eq(A).
ftest(A,B,C,D,E):-denotes_jump(D,E),denotes_f(C),denotes_i(B),denotes_ne(A).
ftest(A,B,C,D,E):-denotes_jump(D,E),denotes_i(C),denotes_f(B),denotes_ne(A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_add(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_sub(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_mul(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_div(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_mod(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_and(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_or(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_xor(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_dummy(E),denotes_i(B),denotes_not(C,D,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_sll(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_i(B),denotes_sra(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_f(B),denotes_fadd(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_f(B),denotes_fsub(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_f(B),denotes_fdiv(C,D,E,A).
arith_ftest(A,B,C,D,E):-denotes_f(B),denotes_fmul(C,D,E,A).
no_mod(A,B):-nonident(B,C),denotes_move(D,C,A).
no_mod(A,B):-nonident(B,C),denotes_f2i(D,C,A).
no_mod(A,B):-nonident(B,C),denotes_i2f(D,C,A).
no_mod(A,B):-nonident(B,C),denotes_add(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_sub(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_mul(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_div(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_mod(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_and(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_or(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_xor(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_sll(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_sra(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_not(D,C,A).
no_mod(A,B):-nonident(B,C),denotes_fadd(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_fsub(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_fdiv(D,E,C,A).
no_mod(A,B):-nonident(B,C),denotes_fmul(D,E,C,A).
no_mod(A,B):-denotes_jump(C,D,E,F,A).
no_mod(A,B):-denotes_test(C,D,E,F,A).
no_mod(A,B):-denotes_switch(C,D,E,F,G,A).
no_mod(A,B):-denotes_nop(A).
ind(A,B):-'denotes_.'(B,C,A),'denotes_[]'(C).
a_var(A):-reg(A).
a_var(A):-perm(A).
tf_ft(A,B):-denotes_false(B),denotes_true(A).
tf_ft(A,B):-denotes_true(B),denotes_false(A).
add_ea(A,B,C,D):-pointer_tag(E),add_reg(F,B,C,G),'denotes_^'(E,G,D),'denotes_^'(E,F,A).
add_ea(A,B,C,D):-add_reg(E,B,C,F),'denotes_.'(F,G,D),'denotes_[]'(G),'denotes_.'(E,H,A),'denotes_[]'(H).
add_ea(A,B,C,D):-add_reg(A,B,C,D).
add_ea(A,B,C,A):-true.
add_reg(A,B,C,D):-reg(B),integer(E),exprEval(F,G),make_reg(B,F,D),'denotes_-'(E,C,G),'denotes_+'(B,E,A).
add_reg(A,B,C,D):-reg(B),integer(E),exprEval(F,G),make_reg(B,F,D),'denotes_-'(H,C,G),'denotes_-'(E,H),'denotes_-'(B,E,A).
add_reg(A,A,B,C):-reg(A),exprEval(D,E),make_reg(A,D,C),'denotes_-'(B,E).
make_reg(A,B,C):-gt(B,D),cut,denotes_0(D),'denotes_+'(A,B,C).
make_reg(A,B,A):-eq(B,C),cut,denotes_0(C).
make_reg(A,B,C):-lt(B,D),cut,exprEval(E,F),'denotes_-'(B,F),denotes_0(D),'denotes_-'(A,E,C).
peep_flat(A,B,B):-'denotes_[]'(A).
peep_flat(A,B,C):-peep_flat(D,E,B,C),'denotes_.'(D,E,A).
peep_flat(A,B,C,D):-cut,constC(C,E,F),constC(F,G,H),peep_flat(I,H,J),constC(J,K,L),constC(L,M,N),peep_flat(O,N,P),constC(P,Q,R),constC(R,S,T),peep_flat(B,T,D),denotes_label(U,S),denotes_jump(U,Q),denotes_label(V,M),denotes_jump(U,K),denotes_label(W,G),denotes_switch(X,Y,W,V,Z,E),denotes_switch(A1,X,Y,I,O,Z,A),denotes_unify(A1).
peep_flat(A,B,C,D):-neg(E),constC(C,A,F),peep_flat(B,F,D),'denotes_='(A,G,E),denotes_switch(H,I,J,K,L,M,G),denotes_unify(H).
an_atom(A):-integer(A).
an_atom(A):-atom(B),tag(C,D),denotes_atom(C),'denotes_^'(D,B,A).
an_atom(A):-atom(B),positive(C),tag(D,E),denotes_atom(D),'denotes_^'(E,F,A),'denotes_/'(B,C,F).
complex(A):-'denotes_^'(B,C,A).
complex(A):-'denotes_.'(B,C,A),'denotes_[]'(C).
s_o(A,B):-cut,'denotes_+'(B,C,A),denotes_0(C).
s_o(A,B):-cut,'denotes_-'(B,C,A),denotes_0(C).
s_o(A,B):-cut,'denotes_.'(C,D,B),'denotes_[]'(D),'denotes_.'(E,F,A),'denotes_[]'(F),'denotes_+'(C,G,E),denotes_0(G).
s_o(A,B):-cut,'denotes_.'(C,D,B),'denotes_[]'(D),'denotes_.'(E,F,A),'denotes_[]'(F),'denotes_-'(C,G,E),denotes_0(G).
s_o(A,B):-neg_abs(C,D),cut,'denotes_-'(E,D,B),'denotes_+'(E,C,A).
s_o(A,B):-neg_abs(C,D),cut,'denotes_+'(E,D,B),'denotes_-'(E,C,A).
s_o(A,B):-neg_abs(C,D),cut,'denotes_.'(E,F,B),'denotes_[]'(F),'denotes_-'(G,D,E),'denotes_.'(H,I,A),'denotes_[]'(I),'denotes_+'(G,C,H).
s_o(A,B):-neg_abs(C,D),cut,'denotes_.'(E,F,B),'denotes_[]'(F),'denotes_+'(G,D,E),'denotes_.'(H,I,A),'denotes_[]'(I),'denotes_-'(G,C,H).
s_o(A,B):-cut,'denotes_^'(C,D,B),denotes_r(E,D),denotes_h(E),'denotes_^'(C,F,A),'denotes_+'(G,H,F),denotes_0(H),denotes_r(I,G),denotes_h(I).
s_o(A,B):-cut,'denotes_^'(C,D,B),denotes_r(E,D),denotes_h(E),'denotes_^'(C,F,A),'denotes_-'(G,H,F),denotes_0(H),denotes_r(I,G),denotes_h(I).
s_o(A,B):-neg_abs(C,D),cut,'denotes_^'(E,F,B),'denotes_-'(G,D,F),denotes_r(H,G),denotes_h(H),'denotes_^'(E,I,A),'denotes_+'(J,C,I),denotes_r(K,J),denotes_h(K).
s_o(A,B):-neg_abs(C,D),cut,'denotes_^'(E,F,B),'denotes_+'(G,D,F),denotes_r(H,G),denotes_h(H),'denotes_^'(E,I,A),'denotes_-'(J,C,I),denotes_r(K,J),denotes_h(K).
neg_abs(A,B):-integer(A),lt(A,C),exprEval(B,D),'denotes_-'(A,D),denotes_0(C).
synonym(A,B,C):-'denotes_[]'(B),'denotes_[]'(A).
synonym(A,B,C):-synonym(D,E,B,C),'denotes_.'(D,E,A).
synonym(A,B,C,D):-equal_maker(A,E,F),cut,make_set(E,F,G),equal_synonym(A,E,F,G,D,H,C,I),synonym(B,I,H).
synonym(A,B,C,D):-cut,synonym(B,E,F),'denotes_[]'(F),'denotes_.'(G,E,C),denotes_label(H,G),denotes_label(H,A).
synonym(A,B,C,D):-synonym_step(A,D,E,C,F),synonym(B,F,E).
equal_maker(A,B,C):-denotes_move(B,C,A).
equal_maker(A,B,C):-denotes_equal(B,C,D,A).
equal_maker(A,B,C):-denotes_unify(B,C,D,E,F,A).
make_set(A,B,C):-termlt(A,B),cut,'denotes_.'(A,D,C),'denotes_.'(B,E,D),'denotes_[]'(E).
make_set(A,B,C):-termge(A,B),cut,'denotes_.'(B,D,C),'denotes_.'(A,E,D),'denotes_[]'(E).
equal_synonym(A,B,C,D,E,F,G,H):-not_independent(A),cut,map_equal_maker(A,I,J,K),cheapest_list(I,E,K),remove_if_move(A,E,C,F),'denotes_.'(J,H,G).
equal_synonym(A,B,C,D,E,F,G,H):-neg(I),cut,map_equal_maker(A,J,K,L),cheapest_list(J,E,L),remove_if_move(A,E,C,M),add_set(M,D,F),denotes_is_syn(D,E,I),'denotes_.'(K,H,G).
equal_synonym(A,B,C,D,E,E,F,F):-true.
synonym_step(A,B,C,D,E):-synonym_step1(A,B,D,E),synonym_step2(A,B,C).
synonym_step1(A,B,C,D):-map_instruction(A,E,F,G),cut,cheapest_list(E,B,G),'denotes_.'(F,D,C).
synonym_step1(A,B,C,D):-'denotes_.'(A,D,C).
synonym_step2(A,B,C):-destr_instruction(A,D),cut,remove_all(B,D,C).
synonym_step2(A,B,B):-true.
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_pragma(G,C),denotes_tag(E,H,G),'denotes_.'(I,J,B),'denotes_[]'(J),denotes_pragma(K,A),denotes_tag(I,H,K).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_pragma(G,C),denotes_align(E,H,G),'denotes_.'(I,J,B),'denotes_[]'(J),denotes_pragma(K,A),denotes_align(I,H,K).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_cut(E,C),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_cut(G,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_trail(E,C),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_trail(G,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_trail_if_var(E,C),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_trail_if_var(G,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_unify_atomic(E,G,H,C),'denotes_.'(I,J,B),'denotes_[]'(J),denotes_unify_atomic(I,G,H,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_test(G,H,E,I,C),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_test(G,H,J,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_jump(I,E,G,J,C),'denotes_.'(K,L,B),'denotes_.'(M,N,L),'denotes_[]'(N),denotes_jump(I,K,M,J,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_hash(G,E,H,I,C),'denotes_.'(J,K,B),'denotes_[]'(K),denotes_hash(G,J,H,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_switch(G,E,H,I,J,C),'denotes_.'(K,L,B),'denotes_[]'(L),denotes_switch(G,K,H,I,J,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_add(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_add(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_sub(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_sub(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_mul(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_mul(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_div(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_div(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_and(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_and(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_or(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_or(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_xor(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_xor(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_not(E,G,C),'denotes_.'(H,I,B),'denotes_[]'(I),denotes_not(H,G,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_sll(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_sll(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_sra(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_sra(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_push(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_push(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_jump_nt(I,E,G,J,C),'denotes_.'(K,L,B),'denotes_.'(M,N,L),'denotes_[]'(N),denotes_jump_nt(I,K,M,J,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_add_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_add_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_sub_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_sub_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_and_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_and_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_or_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_or_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_xor_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_xor_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_not_nt(E,G,C),'denotes_.'(H,I,B),'denotes_[]'(I),denotes_not_nt(H,G,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_sll_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_sll_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_sra_nt(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_sra_nt(J,L,I,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_[]'(F),denotes_trail_bda(E,G,C),'denotes_.'(H,I,B),'denotes_[]'(I),denotes_trail_bda(H,G,A).
map_instruction(A,B,C,D):-'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_queue_sda(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_queue_sda(J,L,I,A).
cheapest_list(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
cheapest_list(A,B,C):-cheapest(D,B,E),cheapest_list(F,B,G),'denotes_.'(E,G,C),'denotes_.'(D,F,A).
destr_instruction(A,B):-functor(C,D,E),require(C,F),uninit_set_type(G,F,H),head_regs(C,H,B),cons(B),denotes_reg(G),denotes_simple_call(I,A),'denotes_/'(D,E,I).
destr_instruction(A,B):-neg(C),'denotes_='(D,E,C),denotes_r(F,E),denotes_b(F),'denotes_.'(G,H,B),'denotes_[]'(H),denotes_r(I,G),denotes_b(I),denotes_cut(D,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_deref(C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_deref(E,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_add(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_adda(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_sub(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_mul(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_div(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_and(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_or(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_xor(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_not(E,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_sll(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_sra(E,F,C,A).
destr_instruction(A,B):-noteq(C,D),denotes_0(D),'denotes_.'(E,F,B),'denotes_[]'(F),denotes_push(G,E,C,A).
destr_instruction(A,B):-noteq(C,D),denotes_0(D),'denotes_.'(E,F,B),'denotes_[]'(F),denotes_r(G,E),denotes_h(G),denotes_pad(C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_r(E,C),denotes_b(E),denotes_choice(F,G,H,A),'denotes_/'(I,J,F),denotes_1(I).
destr_instruction(A,B):-lt(C,D),lt(D,E),regset_to_regs(F,B),cons(B),denotes_1(C),denotes_choice(G,F,H,A),'denotes_/'(D,E,G).
destr_instruction(A,B):-regset_to_regs(C,D),'denotes_.'(E,D,B),denotes_r(F,E),denotes_b(F),denotes_choice(G,C,H,A),'denotes_/'(I,I,G).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_r(I,G),denotes_r(J,E),denotes_h(J),denotes_r(K,C),denotes_b(K),denotes_call(L,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_.'(E,F,D),'denotes_[]'(F),denotes_p(G,E),denotes_r(H,C),denotes_e(H),denotes_allocate(I,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_.'(E,F,D),'denotes_[]'(F),denotes_p(G,E),denotes_r(H,C),denotes_e(H),denotes_deallocate(I,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_ord(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_val(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_val(E,F,G,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_add_nt(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_sub_nt(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_and_nt(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_or_nt(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_xor_nt(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_not_nt(E,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_sll_nt(E,F,C,A).
destr_instruction(A,B):-'denotes_.'(C,D,B),'denotes_[]'(D),denotes_sra_nt(E,F,C,A).
remove_all(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
remove_all(A,B,C):-remove_one(D,B,E),(F;G),remove_all(H,B,I),'denotes_='(C,J,G),'denotes_.'(E,I,J),'denotes_->'(K,L,F),'denotes_='(C,I,L),'denotes_='(E,M,K),'denotes_.'(N,O,M),'denotes_[]'(O),'denotes_.'(D,H,A).
not_independent(A):-ind(B),is_in(C,B),denotes_move(B,C,A).
map_equal_maker(A,B,C,D):-cut,'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_move(E,I,C),'denotes_.'(G,J,I),'denotes_[]'(J),'denotes_.'(K,L,B),'denotes_.'(M,N,L),'denotes_[]'(N),denotes_move(K,O,A),'denotes_.'(M,P,O),'denotes_[]'(P).
map_equal_maker(A,B,C,D):-neg(E),cut,'denotes_='(F,G,E),'denotes_.'(H,I,G),'denotes_[]'(I),'denotes_.'(J,K,D),'denotes_[]'(K),denotes_move(J,F,C),'denotes_.'(L,M,B),'denotes_[]'(M),denotes_move(L,F,A).
map_equal_maker(A,B,C,D):-cut,'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_equal(E,G,I,C),'denotes_.'(J,K,B),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_equal(J,L,I,A).
map_equal_maker(A,B,C,D):-cut,'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_[]'(H),denotes_unify(E,G,I,J,K,C),'denotes_.'(L,M,B),'denotes_.'(N,O,M),'denotes_[]'(O),denotes_unify(L,N,I,J,K,A).
remove_if_move(A,B,C,D):-cut,remove_all(B,E,D),'denotes_.'(C,F,E),'denotes_[]'(F),denotes_move(G,H,A).
remove_if_move(A,B,C,B):-neg(D),'denotes_='(A,E,D),denotes_move(F,G,E).
is_syn(A,B):-subset(A,C),cut,'denotes_.'(C,D,B).
is_syn(A,B):-is_syn(A,C),'denotes_.'(D,C,B).
add_set(A,B,A):-cut,'denotes_[]'(B).
add_set(A,B,A):-cut,'denotes_.'(C,D,B),'denotes_[]'(D).
add_set(A,B,C):-not_disjoint(B,D),cut,union(B,D,E),'denotes_.'(E,F,C),'denotes_.'(D,F,A).
add_set(A,B,C):-add_set(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
add_set(A,B,C):-'denotes_.'(B,D,C),'denotes_[]'(D),'denotes_[]'(A).
head_regs(A,B,C):-head_regs(A,B,C,D),'denotes_[]'(D).
regset_to_regs(A,B):-'denotes_[]'(B),'denotes_[]'(A).
regset_to_regs(A,B):-integer(C),cut,regset_to_regs(D,E),'denotes_.'(F,E,B),denotes_r(C,F),'denotes_.'(C,D,A).
regset_to_regs(A,B):-regset_to_regs(C,B),'denotes_.'(D,C,A),denotes_no(D).
intersect_syn(A,B,C):-member(D,B),intersect(E,D,F),neg(G),cut,diff(B,H,I),intersect_syn(J,B,K),'denotes_.'(D,L,H),'denotes_[]'(L),'denotes_='(F,M,G),'denotes_[]'(M),'denotes_.'(F,K,C),'denotes_.'(E,J,A).
intersect_syn(A,B,C):-intersect_syn(D,B,C),'denotes_.'(E,D,A).
intersect_syn(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
remove_one(A,B,C):-'denotes_[]'(C),'denotes_[]'(A).
remove_one(A,B,C):-uses_el(D,B),cut,remove_one(E,B,C),'denotes_.'(D,E,A).
remove_one(A,B,C):-remove_one(D,B,E),'denotes_.'(F,E,C),'denotes_.'(F,D,A).
uses_el(A,B):-uses_el(C,B),'denotes_.'(C,D,A),'denotes_[]'(D).
uses_el(A,B):-uses_el(C,B),'denotes_+'(C,D,A).
uses_el(A,B):-pointer_tag(C),uses_el(D,B),'denotes_^'(C,D,A).
uses_el(A,B):-member(C,B),var(D),cut,denotes_p(D,C),denotes_p(E,A).
uses_el(A,B):-member(C,B),var(D),cut,denotes_r(D,C),denotes_r(E,A).
uses_el(A,B):-cut,member(C,B),'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_.'(F,G,A),'denotes_[]'(G).
uses_el(A,B):-memberv(A,B).
less_p(A,B):-cost_syn(A,C),cost_syn(B,D),termlt(C,D).
cost_syn(A,B):-cut,denotes_a(C,B),denotes_0(C),denotes_r(D,A),denotes_b(D).
cost_syn(A,B):-cut,denotes_b(C,B),denotes_0(C),denotes_r(D,A),denotes_h(D).
cost_syn(A,B):-integer(C),cut,denotes_b(C,B),denotes_r(C,A).
cost_syn(A,B):-an_atom(A),cut,denotes_c(C,B),denotes_0(C).
cost_syn(A,B):-pointer_tag(C),cut,denotes_c(D,B),denotes_0(D),'denotes_^'(C,E,A).
cost_syn(A,B):-atom(C),cut,denotes_d(D,B),denotes_0(D),denotes_r(C,A).
cost_syn(A,B):-integer(C),cut,denotes_d(C,B),denotes_p(C,A).
cost_syn(A,B):-integer(C),cut,denotes_d(C,B),'denotes_.'(D,E,A),'denotes_[]'(E),denotes_r(C,D).
cost_syn(A,B):-integer(C),cut,denotes_d(C,B),'denotes_.'(D,E,A),'denotes_[]'(E),'denotes_+'(F,G,D),denotes_r(C,F).
cost_syn(A,B):-atom(C),cut,denotes_e(D,B),denotes_0(D),'denotes_.'(E,F,A),'denotes_[]'(F),denotes_r(C,E).
cost_syn(A,B):-atom(C),cut,denotes_e(D,B),denotes_0(D),'denotes_.'(E,F,A),'denotes_[]'(F),'denotes_+'(G,H,E),denotes_r(C,G).
cost_syn(A,B):-cut,denotes_e(C,B),'denotes_.'(D,E,A),'denotes_[]'(E),denotes_p(C,D).
cost_syn(A,B):-cut,denotes_e(C,B),'denotes_.'(D,E,A),'denotes_[]'(E),'denotes_+'(F,G,D),denotes_p(C,F).
cost_syn(A,B):-cut,denotes_f(C,B),denotes_0(C),denotes_r(D,A),denotes_void(D).
cheapest(A,B,C):-map_ea(A,D,C,E),member(F,B),member(D,F),cut,minimum_el(F,E).
cheapest(A,B,A):-true.
map_ea(A,A,B,B):-true.
map_ea(A,B,C,D):-'denotes_.'(D,E,C),'denotes_[]'(E),'denotes_.'(B,F,A),'denotes_[]'(F).
map_ea(A,B,C,D):-'denotes_.'(E,F,C),'denotes_[]'(F),'denotes_+'(D,G,E),'denotes_.'(H,I,A),'denotes_[]'(I),'denotes_+'(B,G,H).
map_ea(A,B,C,D):-pointer_tag(E),'denotes_^'(E,D,C),'denotes_^'(E,B,A).
map_ea(A,B,C,D):-pointer_tag(E),'denotes_^'(E,F,C),'denotes_+'(D,G,F),'denotes_^'(E,H,A),'denotes_+'(B,G,H).
minimum_el(A,B):-minimum_el(C,D,B),'denotes_.'(D,C,A).
minimum_el(A,B,B):-'denotes_[]'(A).
minimum_el(A,B,C):-less_p(D,B),cut,minimum_el(E,D,C),'denotes_.'(D,E,A).
minimum_el(A,B,C):-minimum_el(D,B,C),'denotes_.'(E,D,A).
code(A,B,C,D,E,F,G):-cut,det_code(A,B,C,D,H,I,J,F,G),'denotes_$case'(H,I,J,E).
code(A,B,C,D,E,F,G):-disj_p(E),cut,choice_block(A,B,C,D,E,F,G).
code(A,B,C,D,E,F,G):-neg(H),neg(I),cut,flat_conj(E,J),clause_code(K,C,D,B,F,G),'denotes_:-'(A,J,K),'denotes_='(E,L,I),'denotes_$case'(M,N,O,L),denotes_disj_p(E,H).
det_code(A,B,C,D,E,F,G,H,I):-type(E),cut,head_reg(A,J,K),rtest(L,K,B,M,N,H,O),type_test(E,J,P),rtest_in(P,K,M,Q,R,O,S),logical_simplify(T,U),choice(V,A,P,M,C,D,G,W,S,X),choice(Y,A,U,M,C,D,G,R,X,I),denotes_false(Y),denotes_true(V),denotes_not(P,T),denotes_fail(N),denotes_deref(J,L),denotes_v(J,F).
det_code(A,B,C,D,E,F,G,H,I):-cut,head_reg(A,J,K),head_reg(A,L,M),rtest(N,K,B,O,P,H,Q),rtest(R,M,O,S,T,Q,U),expand_cmp_det(V,J,L,K,M,W,X,S,Y,U,Z),arith_test(A1,J,L,V),logical_simplify(B1,C1),choice(D1,A,C1,Y,C,D,G,E1,Z,F1),choice(G1,A,A1,Y,C,D,G,X,F1,I),denotes_true(G1),denotes_false(D1),denotes_not(A1,B1),denotes_true(W),denotes_fail(T),denotes_deref(L,R),denotes_fail(P),denotes_deref(J,N),denotes_v(J,L,F),denotes_comparison(V,H1,E),denotes_arith(H1).
det_code(A,B,C,D,E,F,G,H,I):-cut,head_reg(A,J,K),rtest(L,K,B,M,N,H,O),type_test(P,J,Q),rtest_if_structure(P,Q,K,M,R,S,O,T),constC(T,U,V),constC(V,W,X),insert(Y,Z,X,A1),constC(A1,B1,C1),constC(C1,D1,E1),insert(F1,G1,E1,H1),hash_table(A,R,C,D,G,I1,J1,K1,F1,G1,H1,I),code(A,M,C,D,I1,Y,Z),denotes_0(J1),denotes_pragma(L1,D1),denotes_hash_length(K1,L1),denotes_label(M1,B1),denotes_label(S,W),denotes_hash(P,K,K1,M1,U),denotes_fail(N),denotes_deref(J,L),denotes_v(J,F),denotes_hash(P,E).
det_code(A,B,C,D,E,F,G,H,I):-tag(J,K),cut,head_reg(A,L,M),rtest(N,M,B,O,P,H,Q),constC(Q,R,S),type_test(J,L,T),disj_test(U,T,V),not_test(V,W),choice(X,A,W,O,C,D,G,Y,S,Z),choice(A1,A,B1,O,C,D,G,C1,Z,D1),choice(J,A,T,O,C,D,G,E1,D1,I),denotes_var(L,B1),denotes_var(A1),denotes_other(X),denotes_var(L,U),denotes_switch(K,M,C1,E1,Y,R),denotes_fail(P),denotes_deref(L,N),denotes_v(L,F),denotes_switch(J,E).
det_code(A,B,C,D,E,F,G,H,I):-cut,head_reg(A,J,K),head_reg(A,L,M),rtest(N,K,B,O,P,H,Q),rtest(R,M,O,S,T,Q,U),constC(U,V,W),choice(X,A,Y,S,C,D,G,Z,W,A1),choice(B1,A,C1,S,C,D,G,D1,A1,I),'denotes_\\=='(J,L,C1),denotes_false(B1),'denotes_=='(J,L,Y),denotes_true(X),denotes_equal(K,M,D1,V),denotes_fail(T),denotes_deref(L,R),denotes_fail(P),denotes_deref(J,N),denotes_v(J,L,F),denotes_equal(E).
det_code(A,B,C,D,E,F,G,H,I):-cut,head_reg(A,J,K),rtest(L,K,B,M,N,H,O),atomic_word(P,Q),constC(O,R,S),choice(T,A,U,M,C,D,G,V,S,W),choice(X,A,Y,M,C,D,G,Z,W,I),'denotes_\\='(J,P,Y),denotes_false(X),'denotes_='(J,P,U),denotes_true(T),denotes_equal(K,Q,Z,R),denotes_fail(N),denotes_deref(J,L),denotes_v(J,F),denotes_equal(A1,P,E),denotes_atomic(A1).
det_code(A,B,C,D,E,F,G,H,I):-cut,head_reg(A,J,K),rtests(L,K,B,M,N,H,O),tag(P,Q),pragma_tag(K,R,O,S),constC(S,T,U),constC(U,V,W),choice(X,A,Y,M,C,D,G,Z,W,A1),choice(B1,A,C1,M,C,D,G,D1,A1,I),denotes_not(E1,C1),'denotes_$name_arity'(J,F1,G1,E1),denotes_false(B1),'denotes_$name_arity'(J,F1,G1,Y),denotes_true(X),denotes_equal(H1,I1,D1,V),'denotes_^'(Q,J1,I1),'denotes_/'(F1,G1,J1),'denotes_.'(K,K1,H1),'denotes_[]'(K1),denotes_pragma(L1,T),denotes_align(K,M1,L1),denotes_1(M1),denotes_structure(R),denotes_atom(P),denotes_fail(N),'denotes_,'(N1,O1,L),denotes_structure(J,O1),denotes_deref(J,N1),denotes_v(J,F),denotes_equal(P1,Q1,E),'denotes_/'(F1,G1,Q1),denotes_structure(P1).
choice_block(A,B,C,D,E,F,G):-require_derefs(E,B,H),insert_derefs(A,H,B,I,F,J),split_disj(E,K,L),varset_disj(L,M),uninit_set_type(N,B,O),uninit_set_type(P,B,Q),unionv(O,M,R),diffv(R,Q,S),varset_numset(A,S,T),choice_block(A,I,T,O,Q,C,D,E,U,V,W,J,G),denotes_0(V),denotes_reg(P),denotes_mem(N).
clause_code(A,B,C,D,E,F):-clause_code(A,B,C,D,G,E,F).
require_derefs(A,B,C):-get_kind_d(A,B,D,E,F),sort(E,C),'denotes_[]'(F),denotes_deref(D).
insert_derefs(A,B,C,D,E,F):-varset(A,G),intersectv(B,G,H),insert_derefs_loop(A,H,C,D,E,F).
varset_disj(A,B):-varbag_disj(A,C,D),sort(C,B),'denotes_[]'(D).
varset_numset(A,B,C):-functor(A,D,E),low_reg(F),varset_numset(G,E,A,B,F,C),denotes_1(G).
choice_block(A,B,C,D,E,F,G,H,I,J,K,L,M):-cut,constC(L,N,M),denotes_fail(N),denotes_0(K),denotes_0(J),denotes_fail(H).
choice_block(A,B,C,D,E,F,G,H,I,J,J,K,K):-gt(J,L),cut,denotes_0(L),denotes_fail(I),denotes_fail(H).
choice_block(A,B,C,D,E,F,G,H,I,J,K,L,M):-cut,exprEval(N,O),constC(L,P,Q),functor(A,R,S),cp_instr(C,D,E,T,A,N,K,U,V,Q,W),code(A,B,F,G,T,W,X),choice_block(A,B,C,D,E,F,G,U,V,N,K,X,M),denotes_label(I,P),'denotes_+'(J,Y,O),denotes_1(Y),'denotes_;'(T,U,H).
choice_block(A,B,C,D,E,F,G,H,I,J,K,L,M):-neg(N),cut,choice_block(A,B,C,D,E,F,G,O,I,J,K,L,M),'denotes_;'(H,P,O),denotes_fail(P),denotes_disj_p(H,N).
cp_instr(A,B,C,D,E,F,G,H,I,J,J):-cut,denotes_fail(H),denotes_1(F).
cp_instr(A,B,C,D,E,F,G,H,I,J,K):-eq(F,L),cut,constC(J,M,K),denotes_choice(N,A,I,M),'denotes_/'(F,G,N),denotes_1(L).
cp_instr(A,B,C,D,E,F,G,H,I,J,K):-gt(F,L),cut,varset_conj(D,M),unionv(B,M,N),diffv(N,C,O),varset_numset(E,O,P),format_numset(A,P,Q),constC(J,R,K),denotes_choice(S,Q,I,R),'denotes_/'(F,G,S),denotes_1(L).
varset_conj(A,B):-varbag_conj(A,C,D),sort(C,B),'denotes_[]'(D).
format_numset(A,B,C):-cut,format_numset(D,E,F),'denotes_.'(G,F,C),'denotes_.'(G,E,B),'denotes_.'(G,D,A).
format_numset(A,B,C):-lt(D,E),cut,format_numset(F,G,H),'denotes_.'(E,I,G),'denotes_.'(J,H,C),denotes_no(J),'denotes_.'(E,I,B),'denotes_.'(D,F,A).
format_numset(A,B,C):-cut,format_numset(D,E,F),'denotes_[]'(E),'denotes_.'(G,F,C),denotes_no(G),'denotes_[]'(B),'denotes_.'(H,D,A).
format_numset(A,B,C):-'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
varset_numset(A,B,C,D,E,F):-gt(A,B),cut,'denotes_[]'(F).
varset_numset(A,B,C,D,E,F):-le(A,B),cut,arg(A,C,G),exprEval(H,I),incl_if_inv(G,D,H,F,J),exprEval(K,L),varset_numset(K,B,C,D,E,J),'denotes_+'(A,M,L),denotes_1(M),'denotes_+'(E,N,I),'denotes_-'(A,O,N),denotes_1(O).
incl_if_inv(A,B,C,D,E):-inv(A,B),cut,constC(D,C,E).
incl_if_inv(A,B,C,D,D):-neg(E),cut,denotes_inv(A,B,E).
varbag_disj(A,B,C):-cut,varbag_disj(D,B,E),varbag_disj(F,E,C),'denotes_;'(D,F,A).
varbag_disj(A,B,C):-varbag_conj(A,B,C).
varbag_conj(A,B,C):-cut,varbag_conj(D,B,E),varbag_conj(F,E,C),'denotes_,'(D,F,A).
varbag_conj(A,B,C):-cut,difflist(D,B,C),'denotes_$body'(E,D,F,A).
varbag_conj(A,B,C):-varbag(A,B,C).
get_kind_d(A,B,C,D,E):-cut,get_kind_c(F,B,C,D,G),get_kind_d_stop(F,H,B,C,G,E),'denotes_;'(F,H,A).
get_kind_d(A,B,C,D,E):-get_kind_c(A,B,C,D,E).
get_kind_c(A,B,C,D,E):-cut,get_kind_g(F,C,D,G),get_kind_c_stop(F,H,B,C,G,E),'denotes_,'(F,H,A).
get_kind_c(A,B,C,D,E):-get_kind_g(A,C,D,E).
get_kind_d_stop(A,B,C,D,E,E):-success_to_cut(A),cut.
get_kind_d_stop(A,B,C,D,E,F):-get_kind_d(B,C,D,E,F).
success_to_cut(A):-'denotes_$cut_shallow'(B,A).
success_to_cut(A):-'denotes_$cut_deep'(B,A).
success_to_cut(A):-'denotes_,'(B,C,A),'denotes_$cut_shallow'(D,B).
success_to_cut(A):-'denotes_,'(B,C,A),'denotes_$cut_deep'(D,B).
success_to_cut(A):-succeeds(B),success_to_cut(C),'denotes_,'(B,C,A).
get_kind_g(A,B,C,D):-require(A,E),filter_kind(E,B,C,D).
get_kind_c_stop(A,B,C,D,E,E):-neg(F),cut,denotes_implies(C,G,F),'denotes_;'(H,I,G),denotes_uninit(J,K,I),denotes_any(J),denotes_uninit(L,M,H),denotes_any(L),'denotes_='(M,K,A).
get_kind_c_stop(A,B,C,D,E,F):-get_kind_c(B,C,D,E,F).
filter_kind(A,B,C,D):-cut,filter_kind(E,B,C,F),filter_kind(G,B,F,D),'denotes_,'(E,G,A).
filter_kind(A,B,C,D):-cut,filter_kind(E,B,C,F),filter_kind(G,B,F,D),'denotes_;'(E,G,A).
filter_kind(A,B,C,D):-var(E),cut,constC(C,E,D),denotes_deref(B),denotes_deref(E,A).
filter_kind(A,B,C,D):-var(E),cut,constC(C,E,D),denotes_deref(B),denotes_rderef(E,A).
filter_kind(A,B,C,C):-true.
insert_derefs_loop(A,B,C,C,D,D):-cut,'denotes_[]'(B).
insert_derefs_loop(A,B,C,D,E,F):-head_reg(A,G,H),rtest(I,H,C,J,K,E,L),insert_derefs_loop(A,M,J,D,L,F),denotes_fail(K),denotes_deref(G,I),'denotes_.'(G,M,B).
head_reg(A,B,C):-var(B),cut,functor(A,D,E),head_reg(F,E,A,B,G),low_reg(H),exprEval(I,J),'denotes_-'(K,L,J),denotes_1(L),'denotes_+'(G,H,K),denotes_1(F),denotes_r(I,C).
head_reg(A,B,C):-atom(B),cut,term_tag(B,D),'denotes_^'(D,B,C).
head_reg(A,B,B):-number(B),cut.
head_reg(A,B,C):-compound(B),cut,denotes_r(D,C),denotes_complex_type_error(D).
choice(A,B,C,D,E,F,G,H,I,J):-mutex(C,D,K),cut,comment(B,L),constC(I,M,J),denotes_fail(M),'denotes_.'(N,O,L),'denotes_.'(C,P,O),'denotes_.'(Q,R,P),'denotes_.'(D,S,R),'denotes_.'(T,U,S),'denotes_[]'(U),'denotes_ in choice'(T),'denotes_ and '(Q),'denotes_Mutex of '(N),denotes_left(K),denotes_fail(H).
choice(A,B,C,D,E,F,G,H,I,J):-choice(K,G),cut,constC(I,L,M),update_head(N,O,D,P,E,F,B,Q,M,R),subsume(O,S,T),code(Q,P,E,F,T,R,J),denotes_label(H,L),'denotes_$test'(A,U,O,N,S,K).
choice(A,B,C,D,E,F,G,H,I,J):-neg(K),choice(L,G),cut,constC(I,M,J),denotes_fail(M),'denotes_$else'(N,O,P,L),denotes_fail(P),denotes_choice(Q,G,K),'denotes_$test'(A,R,S,T,U,Q),denotes_fail(H).
choice(A,B,C,D,E,F,G,H,I,J):-neg(K),choice(L,G),neg(M),cut,constC(I,N,O),update_head(P,C,D,Q,E,F,B,R,O,S),subsume(C,T,U),code(R,Q,E,F,U,S,J),denotes_label(H,N),'denotes_='(T,V,M),denotes_fail(V),'denotes_$else'(W,P,T,L),denotes_choice(X,G,K),'denotes_$test'(A,Y,Z,A1,B1,X).
rtest_if_structure(A,B,C,D,E,F,G,H):-cut,rtest(B,C,D,E,F,G,H),denotes_structure(A).
rtest_if_structure(A,B,C,D,D,E,F,F):-cut.
hash_table(A,B,C,D,E,F,G,G,H,H,I,I):-cut,'denotes_$else'(J,K,F,E).
hash_table(A,B,C,D,E,F,G,H,I,J,K,L):-cut,make_hash_entry(M,N),exprEval(O,P),constC(K,Q,R),update_head(S,T,B,U,C,D,A,V,R,W),code(V,U,C,D,X,W,Y),hash_table(A,B,C,D,Z,F,O,H,A1,J,Y,L),denotes_label(B1,Q),'denotes_+'(G,C1,P),denotes_1(C1),'denotes_.'(D1,A1,I),denotes_pair(N,B1,D1),'denotes_;'(E1,Z,E),'denotes_$test'(M,F1,T,S,X,E1).
choice(A,A):-neg(B),'denotes_='(A,C,B),'denotes_;'(D,E,C).
choice(A,A):-neg(B),'denotes_='(A,C,B),'denotes_;'(D,E,C).
choice(A,B):-choice(A,C),'denotes_;'(D,C,B).
choice(A,B):-choice(A,C),'denotes_;'(C,D,B).
update_head(A,B,C,D,E,F,G,G,H,H):-cut,update_formula(B,C,D),'denotes_[]'(A).
update_head(A,B,C,D,E,F,G,G,H,H):-neg(I),cut,update_formula(B,C,D),'denotes_='(A,J,I),'denotes_[]'(J).
make_hash_entry(A,A):-integer(A),cut.
make_hash_entry(A,A):-float(A),cut.
make_hash_entry(A,B):-atom(A),cut,tag(C,D),denotes_atom(C),'denotes_^'(D,A,B).
make_hash_entry(A,B):-tag(C,D),denotes_atom(C),'denotes_^'(D,E,B),'denotes_/'(F,G,E),'denotes_/'(F,G,A).
head_reg(A,B,C,D,E):-gt(A,B),cut,denotes_r(F,E),denotes_arity_error(F).
head_reg(A,B,C,D,A):-le(A,B),arg(A,C,E),ident(E,D),cut,true.
head_reg(A,B,C,D,E):-le(A,B),arg(A,C,F),nonident(F,D),cut,exprEval(G,H),head_reg(G,B,C,D,E),'denotes_+'(A,I,H),denotes_1(I).
head_regs(A,B,C,D):-functor(A,E,F),low_reg(G),head_regs(F,A,G,B,C,D).
head_regs(A,B,C,D,E,E):-le(A,F),cut,denotes_0(F).
head_regs(A,B,C,D,E,F):-gt(A,G),arg(A,B,H),inv(H,D),cut,constC(E,I,J),exprEval(K,L),exprEval(M,N),head_regs(K,B,C,D,J,F),'denotes_-'(O,P,N),denotes_1(P),'denotes_+'(A,C,O),'denotes_-'(A,Q,L),denotes_1(Q),denotes_r(M,I),denotes_0(G).
head_regs(A,B,C,D,E,F):-gt(A,G),cut,exprEval(H,I),head_regs(H,B,C,D,E,F),'denotes_-'(A,J,I),denotes_1(J),denotes_0(G).
testset(A):-testset(A,B,C,D,E).
testset(A,B,C,D,E):-testset(A,B,F,C,D,E),denotes_true(F).
testset(A,B,C,D,E,F,G):-test_type_name_arity(A,H,I,J,K),atomic_type(I),denotes_0(K),denotes_false(G),denotes_true(F),denotes_v(H,E),denotes_equal(L,J,D),denotes_atomic(L),'denotes_$name_arity'(H,J,M,B),denotes_0(M).
testset(A,B,C,D,E,F,G):-logical_simplify(H,I),test_type_name_arity(I,J,K,L,M),atomic_type(K),denotes_0(M),denotes_not(A,H),denotes_true(G),denotes_false(F),denotes_v(J,E),denotes_equal(N,L,D),denotes_atomic(N),denotes_not(O,B),'denotes_$name_arity'(J,L,P,O),denotes_0(P).
testset(A,B,C,D,E,F,G):-test_type_name_arity(A,H,I,J,K),denotes_structure(I),denotes_false(G),denotes_true(F),denotes_v(H,E),denotes_equal(L,M,D),'denotes_/'(J,K,M),denotes_structure(L),'denotes_$name_arity'(H,J,K,B).
testset(A,B,C,D,E,F,G):-logical_simplify(H,I),test_type_name_arity(I,J,K,L,M),denotes_structure(K),denotes_not(A,H),denotes_true(G),denotes_false(F),denotes_v(J,E),denotes_equal(N,O,D),'denotes_/'(L,M,O),denotes_structure(N),denotes_not(P,B),'denotes_$name_arity'(J,L,M,P).
testset(A,B,C,D,E,F,G):-test_type_name_arity(A,H,I,J,K),nonident(I,L),(M;N),(O;P),'denotes_='(F,J,P),'denotes_->'(Q,R,O),'denotes_='(F,S,R),'denotes_/'(J,K,S),'denotes_>'(K,T,Q),denotes_0(T),'denotes_;'(U,V,N),'denotes_;'(W,X,V),'denotes_='(Y,Z,X),denotes_structure(Z),'denotes_->'(A1,B1,W),'denotes_='(Y,C1,B1),denotes_denumerable(C1),denotes_denumerable_type(I,A1),'denotes_->'(D1,E1,U),'denotes_='(Y,F1,E1),denotes_denumerable(F1),'denotes_,'(G1,H1,D1),denotes_fail(H1),'denotes_=='(I,I1,G1),denotes_float(I1),'denotes_->'(J1,K1,M),'denotes_='(Y,L1,K1),denotes_float(L1),'denotes_,'(M1,N1,J1),denotes_true(N1),'denotes_=='(I,O1,M1),denotes_float(O1),denotes_cons(L),denotes_not(F,G),denotes_v(H,E),denotes_hash(Y,D),'denotes_$name_arity'(H,J,K,B).
testset(A,A,B,C,D,E,F):-encode_relop(A,G,H,I,J),termle(G,I),map_relop(A,K,E,F),denotes_arith(J),denotes_v(G,I,D),denotes_comparison(K,L,C),denotes_arith(L).
testset(A,A,B,C,D,E,F):-encode_relop(A,G,H,I,J),termle(I,G),flip(H,K),encode_relop(L,I,K,G,M),map_relop(L,N,E,F),denotes_arith(M),denotes_arith(J),denotes_v(I,G,D),denotes_comparison(N,O,C),denotes_arith(O).
testset(A,B,C,D,E,F,G):-many_way(A,B,H,D,F,G),denotes_v(H,E).
testset(A,B,C,D,E,F,G):-many_way(A,B,H,I,J,K),tag_type(L),nonident(L,M),neg(N),map_three(L,I,F),denotes_implies(C,O,N),denotes_nonvar(H,O),denotes_var(M),denotes_false(K),denotes_true(J),denotes_not(F,G),denotes_v(H,E),denotes_switch(L,D).
number_of_direcs(A,B):-get_direcs(A,C),sort(C,D),length(D,B).
goodness_key(A,B):-denotes_132(B),denotes_equal(C,D,A),'denotes_[]'(D),denotes_atomic(C).
goodness_key(A,B):-denotes_130(B),denotes_switch(C,A),denotes_negative(C).
goodness_key(A,B):-denotes_130(B),denotes_switch(C,A),denotes_nonnegative(C).
goodness_key(A,B):-denotes_130(B),denotes_switch(C,A),denotes_atom(C).
goodness_key(A,B):-denotes_130(B),denotes_switch(C,A),denotes_float(C).
goodness_key(A,B):-denotes_129(B),denotes_switch(C,A),denotes_integer(C).
goodness_key(A,B):-denotes_131(B),denotes_switch(C,A).
goodness_key(A,B):-denotes_122(B),denotes_cons(A).
goodness_key(A,B):-denotes_121(B),denotes_structure(A).
goodness_key(A,B):-denotes_120(B),denotes_var(A).
goodness_key(A,B):-denotes_120(B),denotes_atom(A).
goodness_key(A,B):-denotes_120(B),denotes_float(A).
goodness_key(A,B):-denotes_120(B),denotes_integer(A).
goodness_key(A,B):-fail,denotes_120(B),denotes_negative(A).
goodness_key(A,B):-fail,denotes_120(B),denotes_nonnegative(A).
goodness_key(A,B):-denotes_85(B),denotes_equal(A).
goodness_key(A,B):-denotes_80(B),denotes_equal(C,D,A),denotes_atomic(C).
goodness_key(A,B):-denotes_80(B),denotes_comparison(C,D,A).
goodness_key(A,B):-fail,denotes_79(B),denotes_integer(A).
goodness_key(A,B):-denotes_79(B),denotes_atomic(A).
goodness_key(A,B):-denotes_79(B),denotes_compound(A).
goodness_key(A,B):-denotes_78(B),denotes_negative(A).
goodness_key(A,B):-denotes_78(B),denotes_nonnegative(A).
goodness_key(A,B):-denotes_60(B),denotes_equal(C,D,A),denotes_structure(C).
goodness_key(A,B):-denotes_50(B),denotes_simple(A).
goodness_key(A,B):-denotes_41(B),denotes_hash(C,A),denotes_denumerable(C).
goodness_key(A,B):-denotes_41(B),denotes_hash(C,A),denotes_float(C).
goodness_key(A,B):-denotes_40(B),denotes_hash(C,A),denotes_structure(C).
get_direcs(A,B):-'denotes_[]'(B),'denotes_[]'(A).
get_direcs(A,B):-get_direcs(C,D),'denotes_.'(E,D,B),'denotes_.'(F,C,A),denotes_val(G,H,I,J,E,K,F).
switch_testset_list(A,B,C):-type_test(A,B,D),disj_test(E,D,F),not_test(F,G),denotes_var(B,E),'denotes_.'(H,I,C),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),denotes_val(N,G,O,P,Q,R,L),'denotes_,'(S,T,R),denotes_true(T),'denotes_$sel_error'(S),denotes_other(Q),denotes_none(O),denotes_val(U,D,V,W,A,X,J),'denotes_,'(Y,Z,X),denotes_true(Z),'denotes_$sel_error'(Y),denotes_none(V),denotes_val(A1,B1,C1,D1,E1,F1,H),'denotes_,'(G1,H1,F1),denotes_true(H1),'denotes_$sel_error'(G1),denotes_var(E1),denotes_none(C1),denotes_var(B,B1).
update_testset(A,B,C,D):-delete(B,E,F),update_testset(G,F,C,D),denotes_val(H,I,J,K,L,M,E),'denotes_.'(N,G,A),denotes_val(O,P,Q,R,L,S,N).
update_testset(A,B,C,D):-append(C,B,D),'denotes_[]'(A).
test_type_name_arity(A,B,C,D,E):-encode_name_arity(A,B,D,E,F),name_arity_type(D,E,C),denotes_true(F).
map_relop(A,B,C,D):-arith_test(A,B),special_cond(B),denotes_false(D),denotes_true(C).
map_relop(A,B,C,D):-opposite(A,E),arith_test(E,B),special_cond(B),denotes_true(D),denotes_false(C).
many_way(A,A,B,C,D,E):-type_test(C,B,A),denotes_false(E),denotes_true(D).
many_way(A,B,C,D,E,F):-test_type_name_arity(A,C,D,G,H),type_test(D,C,B),denotes_false(F),denotes_true(E).
many_way(A,B,C,D,E,F):-negation(A,G),many_way(G,H,C,D,F,E),out_negation(H,B).
many_way(A,B,C,D,E,F):-test_varbag(A,G),member(C,G),implies(A,H),denotes_nonvar(C,H),denotes_true(F),denotes_false(E),denotes_var(D),denotes_nonvar(C,B).
map_three(A,B,C):-denotes_var(C),denotes_var(B).
map_three(A,A,A):-true.
name_arity_type(A,B,C):-atom(A),integer(B),eq(B,D),denotes_0(D),denotes_atom(C).
name_arity_type(A,B,C):-float(A),integer(B),eq(B,D),denotes_0(D),denotes_float(C).
name_arity_type(A,B,C):-integer(A),integer(B),eq(B,D),denotes_0(D),denotes_integer(C).
name_arity_type(A,B,C):-fail,negative(A),integer(B),eq(B,D),denotes_0(D),denotes_negative(C).
name_arity_type(A,B,C):-fail,negative(A),integer(B),eq(B,D),denotes_0(D),denotes_nonnegative(C).
name_arity_type(A,B,C):-nonvar(A),integer(B),gt(B,D),neg(E),'denotes_,'(F,G,E),'denotes_=:='(B,H,G),denotes_2(H),'denotes_='(A,I,F),'denotes_.'(I),denotes_0(D),denotes_structure(C).
name_arity_type(A,B,C):-ident(A,D),integer(B),eq(B,E),denotes_2(E),'denotes_.'(D),denotes_cons(C).
negation(A,B):-cut,'denotes_\\+'(B,A).
negation(A,B):-cut,denotes_not(B,A).
out_negation(A,B):-cut,denotes_not(B,A).
out_negation(A,B):-cut,denotes_not(A,B).
entry_comment(A,B,C):-fail,cut,length(C,D),comment(A,E),'denotes_.'(F,G,E),'denotes_.'(B,H,G),'denotes_.'(I,J,H),'denotes_.'(C,K,J),'denotes_[]'(K),'denotes_) is called with '(I),'denotes_('(F).
entry_comment(A,B,C):-true,cut.
split_uninit_list(A,B,C,D,E):-'denotes_[]'(E),'denotes_[]'(D),'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
split_uninit_list(A,B,C,D,E):-split_uninit(F,G,H),uninit_set_type(I,G,J),uninit_set_type(K,G,L),split_uninit_list(M,N,O,P,Q),denotes_reg(K),denotes_mem(I),'denotes_.'(H,Q,E),'denotes_.'(G,P,D),'denotes_.'(L,O,C),'denotes_.'(J,N,B),'denotes_.'(R,M,A),denotes_entry(S,F,R).
insert_uninit(A,B,C,D,E,F,F):-'denotes_[]'(D),'denotes_[]'(A).
insert_uninit(A,B,C,D,E,F,G):-diffv(H,C,I),constC(F,J,K),init_code_block(I,B,K,L),constC(L,M,N),insert_uninit(O,B,C,P,E,N,G),denotes_jump(E,M),denotes_label(Q,J),'denotes_.'(R,P,D),denotes_entry(Q,S,R),'denotes_.'(H,O,A).
uninit_origins(A,B):-origin_fragments(A,C,D),keysort(C,E),origin_merge(E,B),'denotes_[]'(D).
make_uninit_mem_formula(A,B,C,C):-'denotes_[]'(A).
make_uninit_mem_formula(A,B,C,D):-member_origin(E,B),cut,co(F,C,G),make_uninit_mem_formula(H,B,G,D),denotes_uninit(I,J,K,F),denotes_mem(I),'denotes_-'(J,K,E),'denotes_.'(J,H,A).
make_uninit_mem_formula(A,B,C,D):-co(E,C,F),make_uninit_mem_formula(G,B,F,D),denotes_uninit(H,E),'denotes_.'(H,G,A).
make_uninit_reg_formula(A,B,B):-'denotes_[]'(A).
make_uninit_reg_formula(A,B,C):-co(D,B,E),make_uninit_reg_formula(F,E,C),denotes_uninit(G,H,D),denotes_reg(G),'denotes_.'(H,F,A).
init_code_block(A,B,C,C):-'denotes_[]'(A).
init_code_block(A,B,C,D):-find_arg(E,B,F),cut,low_reg(G),exprEval(H,I),pragma_tag(H,J,C,K),constC(K,L,M),init_code_block(N,B,M,D),denotes_move(H,O,L),'denotes_.'(H,P,O),'denotes_[]'(P),denotes_var(J),'denotes_-'(Q,R,I),denotes_1(R),'denotes_+'(G,E,Q),'denotes_.'(F,N,A).
init_code_block(A,B,C,D):-error(B,E),init_code_block(F,B,C,D),'denotes_.'(G,H,E),'denotes_.'(I,J,H),'denotes_.'(K,L,J),'denotes_[]'(L),'denotes_ is not initialized.'(K),'denotes_Variable '(G),'denotes_.'(I,F,A).
member_origin(A,B):-ident(C,D),cut,'denotes_.'(E,F,B),'denotes_-'(D,G,E),'denotes_-'(C,G,A).
member_origin(A,B):-member_origin(C,D),'denotes_-'(E,F,C),'denotes_.'(G,D,B),'denotes_-'(E,F,A).
origin_fragments(A,B,B):-'denotes_[]'(A).
origin_fragments(A,B,C):-origin_formula(D,B,E),origin_fragments(F,E,C),'denotes_.'(D,F,A).
origin_merge(A,B):-'denotes_[]'(B),'denotes_[]'(A).
origin_merge(A,B):-origin_merge(C,D,E,B,F),'denotes_[]'(F),'denotes_.'(G,C,A),'denotes_-'(D,H,G).
origin_formula(A,B,C):-cut,origin_formula(D,B,E),origin_formula(F,E,C),'denotes_,'(D,F,A).
origin_formula(A,B,C):-cut,constC(B,D,C),'denotes_-'(E,F,D),denotes_uninit(G,E,F,A),denotes_mem(G).
origin_formula(A,B,B):-true.
origin_merge(A,B,C,D,E):-constC(D,F,E),'denotes_-'(B,C,F),'denotes_[]'(A).
origin_merge(A,B,C,D,E):-ident(B,F),cut,append(G,C,H),origin_merge(I,B,H,D,E),'denotes_.'(J,I,A),'denotes_-'(F,G,J).
origin_merge(A,B,C,D,E):-nonident(B,F),cut,constC(D,G,H),origin_merge(I,F,J,H,E),'denotes_-'(B,C,G),'denotes_.'(K,I,A),'denotes_-'(F,J,K).
clause_code(A,B,C,D,E,F,G):-standard_form(A,H,I),logical_simplify(D,J),clause_code_3(K,B,C,J,E,F,G),'denotes_:-'(H,I,K).
clause_code_3(A,B,C,D,E,F,G):-cut,constC(F,H,G),denotes_fail(H),denotes_fail(E),denotes_fail(D).
clause_code_3(A,B,C,D,E,F,G):-neg(H),constC(F,I,J),copy(K,L),clause(M,B,N,O,P,J,Q),copy(R,S),constC(Q,T,U),return_jump(C,U,G),clause_allocate(N,V,W),environment(V,W,I,T),cut,'denotes_.'(A,E,S),'denotes_.'(M,P,R),'denotes_.'(M,O,L),'denotes_.'(A,D,K),'denotes_='(D,X,H),denotes_fail(X).
clause(A,B,C,D,E,F,G):-uninit_set_type(H,D,I),head_moves_pre(J,I,K,L,F,M),find_gperms(N,O),uninit_allowset(P,B,Q),varbag(R,S),filter_uniq(S,T),body(P,U,V,O,Q,B,T,W,X,Y,Z,A1,B1,C1,D1,K,E1,D,E,M,F1),head_moves_post_c(J,I,G1,B1,D1,F1,G),flat_conj(H1,I1),'denotes_,'(J1,K1,H1),'denotes_,'(V,L1,K1),'denotes_$varlist'(G1,L1),'denotes_$varlist'(L,J1),'denotes_[]'(C1),'denotes_[]'(A1),'denotes_[]'(Y),'denotes_[]'(W),denotes_no(U),'denotes_:-'(J,P,R),'denotes_:-'(J,P,N),denotes_reg(H),'denotes_:-'(J,I1,C),'denotes_:-'(J,P,A).
return_jump(A,B,C):-constC(B,D,C),denotes_return(D),denotes_return(A).
return_jump(A,B,C):-constC(B,D,C),denotes_jump(E,D),denotes_jump(E,A).
clause_allocate(A,B,C):-varlist(A,D),local_allocate(D,B,C).
clause_allocate(A,B,C):-error(D),'denotes_.'(E,F,D),'denotes_.'(G,H,F),'denotes_.'(A,I,H),'denotes_.'(J,K,I),'denotes_.'(L,M,K),'denotes_[]'(M),'denotes_because of a bug in the register allocation routine.'(L),denotes_nl(J),denotes_nl(G),'denotes_Register allocation could not be done for the clause:'(E).
environment(A,B,C,D):-denotes_nop(D),denotes_nop(C),denotes_no(A).
environment(A,B,C,D):-denotes_deallocate(B,D),denotes_allocate(B,C),denotes_yes(A).
head_moves_pre(A,B,C,D,E,F):-univ(A,G),low_reg(H),head_moves_pre_2(I,H,B,D,E,F),sort(I,J),diffv(J,B,C),'denotes_.'(K,I,G).
find_gperms(A,B):-split(A,C,D),varset(C,E),gpermvars(D,E,F,G,H,I,B),'denotes_[]'(I),'denotes_[]'(G).
uninit_allowset(A,B,C):-uninit_allowbag(A,B,D,E,F,G,H),sort(E,C),'denotes_[]'(G),'denotes_[]'(F).
body(A,B,C,D,E,F,G,H,H,I,I,J,J,K,K,L,L,M,N,O,P):-cut,'denotes_.'(Q,P,O),denotes_fail(Q),denotes_fail(N),denotes_fail(M),denotes_fail(C).
body(A,B,C,D,E,F,G,H,H,I,I,J,J,K,K,L,M,N,O,P,Q):-cut,init_uninit(R,S,T,L,M,N,O,P,Q),'denotes_[]'(T),'denotes_[]'(R),'denotes_$varlist'(S,C),denotes_no(B),denotes_true(A).
body(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U):-cut,efficient_entry(V,W,G,R,X,P,Y),flat_conj(W,Z),union_conj_eff(Z,A1,B1,C1),body(B1,C1,C,D,E,F,G,H,I,J,K,L,M,N,O,Y,Q,X,S,T,U),denotes_no(B),'denotes_,'(V,A1,A).
body(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U):-split_formula(V,P,W,R,X,Y),last_goal_adjust(Z,X,Y,A1,B1),perm_c(W,C1,D,H,D1,J,E1,L,F1,N,G1,P,H1,A1,I1,T,J1),map_terms(D1,E1,W,K1),map_terms(D1,E1,I1,L1),uninit_bag_type(M1,L1,N1),goal_c(K1,O1,P1,Q1,R1,E,F,S1,N1,F1,T1,G1,U1,H1,V1,L1,W1,J1,X1),sort(S1,Y1),make_indirect(Y1,Z1),append(Y1,T1,A2),append(Z1,U1,B2),x_call_moves_post_c2(P1,C2,A2,D2,B2,E2,X1,F2),args_post_c2(Q1,G2,D2,H2,E2,I2,V1,J2,W1,K2,F2,L2),update_formula(R1,K2,M2),map_terms(E1,D1,M2,N2),combine_formula(N2,B1,O2),body(Z,P2,Q2,D,E,F,G,D1,I,E1,K,H2,M,I2,O,J2,Q,O2,S,L2,U),denotes_mem(M1),'denotes_,'(C1,R2,C),'denotes_,'(O1,S2,R2),'denotes_,'(C2,T2,S2),'denotes_,'(G2,Q2,T2),'denotes_,'(U2,P2,B),denotes_yes(U2),'denotes_,'(W,Z,A).
head_moves_post_c(A,B,C,D,E,F,G):-cons(D),cut,head_moves_post(A,B,H,I,J),map_instr_list(I,D,E,F,G),map_varlist_list(H,C,D),'denotes_[]'(J).
head_moves_post_c(A,B,C,D,E,F,G):-head_moves_post(A,B,C,F,G).
uninit_allowbag(A,B,C,D,E,F,G):-cut,uninit_allowbag(H,B,I,D,J,F,K),uninit_allowbag(L,I,C,J,E,K,G),'denotes_,'(H,L,A).
uninit_allowbag(A,B,C,D,E,F,G):-cut,uninit_allowbag(H,B,I,D,J,F,K),uninit_allowbag(L,I,C,J,E,K,G),'denotes_;'(H,L,A).
uninit_allowbag(A,B,C,D,E,F,G):-cut,uninit_allowbag(H,B,C,D,E,F,G),'denotes_$body'(I,J,K,A),'denotes_:-'(L,H,I).
uninit_allowbag(A,B,B,C,D,E,F):-functor(A,G,H),member(I,B),cut,copy(J,K),uninit_bag(L,C,M),copy(N,O),uninit_allowbag(P,Q,R,M,D,E,F),'denotes_:-'(A,P,O),'denotes_:-'(S,T,N),'denotes_:-'(A,L,K),'denotes_:-'(U,V,J),denotes_stree(W,X,Y,Z,Q,A1,I),'denotes_:-'(U,V,Y),'denotes_:-'(S,T,X),'denotes_/'(G,H,W).
uninit_allowbag(A,B,B,C,D,E,E):-require(A,F),uninit_bag(F,C,D),true.
init_uninit(A,B,C,D,E,F,G,H,I):-varbag(A,J),init_uninit(J,F,B,C,D,E,H,I,K,L),remove_uninit(K,F,G),'denotes_[]'(L).
efficient_entry(A,B,C,D,D,E,E):-modal_entry(A,F),add_uninit_void(A,E,C,D,G),tree_trav_entry(F,G,B),cut,comment(H),comment(A,I),'denotes_.'(J,K,I),'denotes_.'(G,L,K),'denotes_[]'(L),'denotes_The mode formula at this point is '(J),'denotes_.'(M,N,H),'denotes_.'(A,O,N),'denotes_.'(P,Q,O),'denotes_.'(B,R,Q),'denotes_[]'(R),'denotes_ by '(P),'denotes_Replaced '(M).
efficient_entry(A,A,B,C,C,D,D):-true.
union_conj_eff(A,B,C,D):-union_conj_eff(E,B,F,G),'denotes_,'(H,G,D),denotes_yes(H),'denotes_,'(I,F,C),'denotes_,'(I,E,A).
union_conj_eff(A,B,B,C):-denotes_no(C),denotes_true(A).
last_goal_adjust(A,B,C,D,E):-cut,split_uninit(C,F,E),combine_formula(F,B,D),denotes_true(A).
last_goal_adjust(A,B,C,B,C):-neg(D),cut,'denotes_='(A,E,D),denotes_true(E).
perm_c(A,B,C,D,E,F,G,H,H,I,I,J,K,L,M,N,O):-cons(H),cut,perm(A,P,C,D,E,F,G,J,K,L,M,Q,R),map_instr_list(Q,H,I,N,O),map_varlist(P,B,H),'denotes_[]'(R).
perm_c(A,B,C,D,E,F,G,H,H,I,I,J,K,L,M,N,O):-perm(A,B,C,D,E,F,G,J,K,L,M,N,O),true.
goal_c(A,B,C,D,E,F,G,H,I,J,K,L,L,M,N,O,P,Q,R):-cons(J),cut,goal(A,S,C,D,E,F,G,H,I,J,K,M,N,O,P,T,U),map_instr_list(T,J,L,Q,R),map_varlist(S,B,J),'denotes_[]'(U).
goal_c(A,B,C,D,E,F,G,H,I,J,K,L,L,M,N,O,P,Q,R):-goal(A,B,C,D,E,F,G,H,I,J,K,M,N,O,P,Q,R),true.
make_indirect(A,B):-'denotes_[]'(B),'denotes_[]'(A).
make_indirect(A,B):-make_indirect(C,D),'denotes_.'(E,D,B),'denotes_.'(F,G,E),'denotes_[]'(G),'denotes_.'(F,C,A).
x_call_moves_post_c2(A,B,C,C,D,D,E,F):-cons(C),cut,x_call_moves_post(G,H,I,J,K,L),map_instr_list(K,C,D,E,F),map_varlist_goal(I,B,C),'denotes_[]'(L),'denotes_[]'(J),denotes_data(G,H,A).
x_call_moves_post_c2(A,B,C,C,D,D,E,F):-cut,x_call_moves_post(G,H,I,J,E,F),'denotes_[]'(J),'denotes_$varlist'(I,B),denotes_data(G,H,A).
x_call_moves_post_c2(A,B,C,C,D,D,E,E):-'denotes_$varlist'(F,B),'denotes_[]'(F),denotes_none(A).
args_post_c2(A,B,C,C,D,D,E,F,G,H,I,J):-cons(C),cut,args_post(K,L,M,N,O,E,F,G,H,P,Q),map_instr_list(P,C,D,I,J),map_varlist_goal(N,B,C),'denotes_[]'(Q),'denotes_[]'(O),denotes_data(K,L,M,A).
args_post_c2(A,B,C,C,D,D,E,F,G,H,I,J):-cut,args_post(K,L,M,N,O,E,F,G,H,I,J),'denotes_[]'(O),'denotes_$varlist'(N,B),denotes_data(K,L,M,A).
args_post_c2(A,B,C,C,D,D,E,E,F,F,G,G):-'denotes_$varlist'(H,B),'denotes_[]'(H),denotes_none(A).
goal(A,B,C,D,E,F,G,H,H,I,I,J,K,L,M,N,O):-call_p(A),unwrap_goal(A,P,Q),cut,init_uninit(P,R,S,J,T,L,U,N,V),functor(P,W,X),gensym(Y,Z,A1),unwrap_form(A,B1,U,C1),uninit_set_type(D1,C1,E1),x_call_moves_pre(P,E1,S,F1,V,G1),fence_if_die(P,F1,H1),x_call_moves_post_c1(P,E1,C),unionv(E1,T,K),remove_vars(C1,I1),remove_all_uninit(I1,M),'denotes_[]'(H1),'denotes_.'(J1,O,G1),denotes_call(K1,J1),'denotes_/'(A1,X,K1),denotes_reg(D1),'denotes_/'(A1,X,B1),'denotes_/'(W,X,Z),'denotes_.'(L1,M1,Y),'denotes_.'(N1,O1,M1),'denotes_.'(P1,Q1,O1),'denotes_[]'(Q1),denotes_95(P1),denotes_101(N1),denotes_36(L1),denotes_yes(Q),denotes_true(E),denotes_none(D),'denotes_$varlist'(R,B).
goal(A,B,C,D,E,F,G,H,I,J,J,K,L,M,N,O,P):-call_p(A),unwrap_goal(A,Q,R),cut,functor(Q,S,T),univ(Q,U),parameter_setup(Q,V,W,X,Y,K,Z,M,A1,O,B1),args_pre(V,C1,D1,H,I,Y,E1,Z,F1,A1,G1,B1,H1),univ(I1,J1),rtests_m(W,K1,G1,L1,H1,M1),warn_fail(A,L1,N1),init_uninit(O1,P1,Q1,F1,L,N1,R1,M1,S1),the_call(Q,I1,T1,V,D1,G,R1,U1,S1,P),remove_all_uninit(U1,V1),after(Q,E),map_vars(C1,D1,E,W1),update_formula(W1,V1,N),args_post_c1(V,C1,D1,D),'denotes_[]'(Q1),denotes_pair(C1,D1,O1),'denotes_.'(S,D1,J1),'denotes_[]'(E1),'denotes_.'(S,C1,U),denotes_no(R),denotes_none(C),'denotes_,'(X1,Y1,B),'denotes_,'(K1,Z1,Y1),'denotes_,'(A2,T1,Z1),'denotes_$varlist'(P1,A2),'denotes_$varlist'(X,X1).
goal(A,B,C,D,E,F,G,H,H,I,J,K,L,M,N,O,P):-init_uninit(Q,R,S,K,T,M,U,O,V),unify_g(W,S,F,T,L,U,N,V,P,I,J),'denotes_='(X,Y,W),'denotes_='(X,Y,Q),denotes_true(E),denotes_none(D),denotes_none(C),'denotes_$varlist'(R,B),'denotes_='(X,Y,A).
map_varlist(A,B,C):-bodylist(A,D,E),map_varlist_goal(D,B,C),'denotes_[]'(E).
head_moves_post(A,B,C,D,E):-head_moves_post_2(B,A,C,D,E).
map_varlist_list(A,B,C):-map_varlist_list(A,C,B,D),'denotes_[]'(D).
perm(A,B,C,D,E,F,G,H,I,J,K,L,M):-write_once,cut,vars_to_rename(A,J,N),intersectv(N,C,O),intersectv(O,H,P),copy(P,Q),sort(Q,R),update_mapping(P,R,S,D,E,F,G),init_extra_vars(P,R,S,T,U,H,I,J,K,L,M),'denotes_[]'(U),'denotes_$varlist'(T,B).
perm(A,B,C,D,D,E,E,F,F,G,G,H,H):-neg(I),cut,denotes_write_once(I),'denotes_$varlist'(J,B),'denotes_[]'(J).
x_call_moves_post_c1(A,B,C):-denotes_data(A,B,C).
x_call_moves_post(A,B,C,D,E,F):-x_call_moves_post_2(B,A,C,D,E,F).
map_varlist_goal(A,B,C):-map_varlist_list(A,C,D,E),'denotes_$varlist'(D,E,B).
args_post_c1(A,B,C,D):-denotes_data(A,B,C,D).
args_post(A,B,C,D,D,E,E,F,F,G,G):-cut,'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
args_post(A,B,C,D,E,F,G,H,I,J,K):-one_arg_post(L,M,N,O,D,P,F,Q,H,R,J,S),args_post(T,U,V,P,E,Q,G,R,I,S,K),'denotes_.'(O,V,C),'denotes_.'(N,U,B),'denotes_.'(W,T,A),denotes_flag(L,M,W).
bodylist(A,B,C):-cut,bodylist(D,B,E),bodylist(F,E,C),'denotes_,'(D,F,A).
bodylist(A,B,C):-goallist(A,B,C).
map_varlist_list(A,B,C,C):-'denotes_[]'(A).
map_varlist_list(A,B,C,D):-ident(E,F),(G;H),cut,constC(C,I,J),constC(J,K,L),map_varlist_list(M,B,L,D),denotes_memberv(K,B,H),denotes_memberv(I,B,G),denotes_pref(F),'denotes_.'(E,N,A),'denotes_.'(I,O,N),'denotes_.'(K,M,O).
map_varlist_list(A,B,C,D):-constC(C,E,F),map_varlist_list(G,B,F,D),'denotes_.'(E,G,A).
unwrap_goal(A,B,C):-cut,denotes_yes(C),'denotes_$body'(D,E,F,A),'denotes_:-'(B,G,D).
unwrap_goal(A,A,B):-denotes_no(B).
unwrap_form(A,B,C,C):-cut,end_of_list(D,E),'denotes_.'(F,G,E),denotes_entry(B,C,F),'denotes_$body'(H,I,D,A),'denotes_:-'(J,K,H).
unwrap_form(A,B,C,C):-true.
x_call_moves_pre(A,B,C,D,E,F):-varset(A,G),diffv(G,B,H),x_call_moves_pre_2(H,A,C,D,E,F).
fence_if_die(A,B,B):-survive(A),cut.
fence_if_die(A,B,C):-neg(D),cut,constC(B,E,C),denotes_fence(E),denotes_survive(A,D).
parameter_setup(A,B,C,D,E,F,G,H,I,J,K):-functor(A,L,M),univ(A,N),uninit_set(H,O),uninit_set_type(P,H,Q),term_dupset_varset(A,R,S),diffv(S,F,T),unionv(T,O,U),intersectv(R,U,V),warn_dup_uninit(A,V),init_uninit_set(V,Q,D,E,F,G,H,W,J,K),remove_uninit(V,W,I),uninit_set_type(X,I,Y),uninit_set_type(Z,I,A1),get_given_flags(Y,A1,G,B1,B),require(A,C1),split_uninit(C1,D1,C),uninit_set_type(E1,D1,F1),uninit_set_type(G1,D1,H1),get_req_flags(F1,H1,B1,B),warn_req_uninit(I1,A,B,J1),'denotes_/'(L,M,J1),denotes_1(I1),denotes_mem(G1),denotes_reg(E1),denotes_mem(Z),denotes_reg(X),denotes_mem(P),'denotes_.'(L,B1,N).
args_pre(A,B,C,D,D,E,E,F,F,G,G,H,H):-cut,'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
args_pre(A,B,C,D,E,F,G,H,I,J,K,L,M):-one_arg_pre(N,O,P,Q,D,R,F,S,H,T,J,U,L,V),args_pre(W,X,Y,R,E,S,G,T,I,U,K,V,M),'denotes_.'(Q,Y,C),'denotes_.'(P,X,B),'denotes_.'(Z,W,A),denotes_flag(N,O,Z).
warn_fail(A,B,C):-cut,warning(D),'denotes_.'(E,F,D),'denotes_.'(A,G,F),'denotes_.'(H,I,G),'denotes_[]'(I),'denotes_ can never be reached.'(H),'denotes_Bad require modes--the goal '(E),denotes_fail(C),denotes_fail(B).
warn_fail(A,B,B):-true.
the_call(A,B,C,D,E,F,G,H,I,J):-expand(A,B,C,G,H,I,J),cut,true.
the_call(A,B,C,D,E,F,G,G,H,I):-macro_expand(B,H,I,J,K,L,M),cut,fence_if_die(B,K,N),'denotes_$varlist'(J,N,C).
the_call(A,B,C,D,E,F,G,H,I,J):-neg(K),cut,low_reg(L),call_moves_pre(L,D,E,M,N,I,O),fence_if_die(B,N,P),functor(B,Q,R),call_instruction(S,B,F,O,T),call_moves_post(L,D,E,P,U,T,J),remove_vars(G,H),'denotes_[]'(U),'denotes_/'(Q,R,S),denotes_anyregs(B,K),'denotes_$varlist'(M,C).
the_call(A,B,B,C,D,E,F,G,H,I):-anyregs(B),cut,functor(B,J,K),remove_vars(F,G),'denotes_.'(L,I,H),denotes_call(B,L).
unify_g(A,B,C,D,E,F,G,H,I,J,J):-var(K),compound(L),memberv(K,J),neg(M),cut,unify_goal(N,B,C,D,E,F,G,H,I),'denotes_,'(O,P,N),'denotes_='(Q,L,P),'denotes_='(K,Q,O),denotes_implies(F,R,M),denotes_unbound(K,R),'denotes_='(K,L,A).
unify_g(A,B,C,D,E,F,G,H,I,J,J):-var(K),compound(L),memberv(K,J),neg(M),cut,unify_goal(N,B,C,D,E,F,G,H,I),'denotes_,'(O,P,N),'denotes_='(Q,L,P),'denotes_='(K,Q,O),denotes_implies(F,R,M),denotes_unbound(K,R),'denotes_='(L,K,A).
unify_g(A,B,C,D,E,F,G,H,I,J,J):-unify_goal(K,B,C,D,E,F,G,H,I),'denotes_='(L,M,K),'denotes_='(L,M,A).
unify_goal(A,B,C,D,E,F,G,H,I):-unify(A,C,D,E,B,J,F,G,K,H,I),denotes_fail(K),'denotes_[]'(J).
end_of_list(A,A):-var(A),cut,true.
end_of_list(A,B):-nonvar(C),cut,end_of_list(D,B),'denotes_.'(E,D,C),'denotes_.'(E,D,A).
init_uninit(A,B,C,D,E,F,G,H,I,J):-cut,init_uninit(A,K,C,L,E,M,G,N,I,O),init_uninit(A,P,L,D,M,F,N,H,O,J),'denotes_,'(K,P,B).
init_uninit(A,B,C,D,E,F,G,H,I,J):-an_uninit_mode(B,K,L),neg(M),cut,pragma_tag(L,N,G,O),includev(L,E,F),'denotes_.'(P,H,O),denotes_move(L,Q,P),'denotes_.'(L,R,Q),'denotes_[]'(R),denotes_var(N),denotes_memberv(L,A,M),denotes_mem(K),'denotes_.'(L,J,I),'denotes_.'(L,D,C).
init_uninit(A,B,C,D,E,F,G,H,I,J):-an_uninit_mode(B,K,L),neg(M),cut,new_var_nf(L,E,F,C,D,G,H),denotes_memberv(L,A,M),denotes_reg(K),'denotes_.'(L,J,I).
init_uninit(A,B,C,C,D,D,E,E,F,F):-true.
new_var_nf(A,B,C,D,E,F,G):-includev(A,B,C),tag(H,I),align_calc(J,K,L),align_pad(L,M,G),denotes_1(J),denotes_var(H),'denotes_.'(N,O,F),'denotes_.'(P,Q,O),'denotes_.'(R,M,Q),denotes_push(A,S,T,R),denotes_1(T),denotes_r(U,S),denotes_h(U),denotes_pragma(V,P),denotes_push(W,V),denotes_variable(W),denotes_move(X,A,N),'denotes_^'(I,Y,X),denotes_r(Z,Y),denotes_h(Z),'denotes_.'(A,A1,D),'denotes_.'(A,E,A1).
init_uninit_set(A,B,C,C,D,D,E,E,F,F):-cut,'denotes_[]'(A).
init_uninit_set(A,B,C,D,E,F,G,H,I,J):-inv(K,B),cut,pragma_tag(K,L,I,M),includev(K,E,N),init_uninit_set(O,B,P,D,N,F,G,H,Q,J),'denotes_.'(R,Q,M),denotes_move(K,S,R),'denotes_.'(K,T,S),'denotes_[]'(T),denotes_var(L),'denotes_.'(K,P,C),'denotes_.'(K,O,A).
init_uninit_set(A,B,C,D,E,F,G,H,I,J):-neg(K),cut,new_var_nf(L,E,M,C,N,I,O),init_uninit_set(P,B,N,D,M,F,G,H,O,J),denotes_inv(L,B,K),'denotes_.'(L,P,A).
macro_expand(A,B,C,D,E,F,G):-macro(A,B,C,D,E,H),sort(H,I),unionv(I,F,G).
call_moves_pre(A,B,C,D,D,E,E):-cut,'denotes_[]'(C),'denotes_[]'(B).
call_moves_pre(A,B,C,D,E,F,G):-cut,exprEval(H,I),call_moves_pre(H,J,K,D,E,F,G),'denotes_+'(A,L,I),denotes_1(L),'denotes_.'(M,K,C),'denotes_.'(N,J,B),denotes_flag(O,P,N),denotes_reg(P).
call_moves_pre(A,B,C,D,E,F,G):-constC(F,H,I),exprEval(J,K),call_moves_pre(J,L,M,N,E,I,G),'denotes_+'(A,O,K),denotes_1(O),denotes_move(P,Q,H),denotes_r(A,Q),'denotes_.'(R,S,D),'denotes_.'(P,T,S),'denotes_.'(U,N,T),denotes_r(A,U),denotes_pref(R),'denotes_.'(P,M,C),'denotes_.'(V,L,B).
call_instruction(A,B,C,D,E):-member(F,C),cut,compile_stree(G,H,I,J,D,E),denotes_noheader(J),denotes_jump(K,I),denotes_nopeep(H),denotes_stree(A,L,M,N,O,P,G),denotes_stree(A,L,M,N,O,P,F).
call_instruction(A,B,C,D,E):-survive(B),cut,'denotes_.'(F,E,D),denotes_simple_call(A,F).
call_instruction(A,B,C,D,E):-neg(F),cut,denotes_survive(B,F),'denotes_.'(G,E,D),denotes_call(A,G).
call_moves_post(A,B,C,D,D,E,E):-cut,'denotes_[]'(C),'denotes_[]'(B).
call_moves_post(A,B,C,D,E,F,G):-cut,constC(F,H,I),exprEval(J,K),call_moves_post(J,L,M,N,E,I,G),'denotes_+'(A,O,K),denotes_1(O),denotes_move(P,Q,H),denotes_r(A,P),'denotes_.'(R,S,D),'denotes_.'(T,U,S),'denotes_.'(Q,N,U),denotes_r(A,T),denotes_pref(R),'denotes_.'(Q,M,C),'denotes_.'(V,L,B),denotes_flag(W,X,V),denotes_reg(X).
call_moves_post(A,B,C,D,E,F,G):-exprEval(H,I),call_moves_post(H,J,K,D,E,F,G),'denotes_+'(A,L,I),denotes_1(L),'denotes_.'(M,K,C),'denotes_.'(N,J,B).
warn_dup_uninit(A,B):-cut,'denotes_[]'(B).
warn_dup_uninit(A,B):-cut,comment(A,C),'denotes_.'(D,E,C),'denotes_.'(F,G,E),'denotes_.'(H,I,G),'denotes_.'(A,J,I),'denotes_.'(K,L,J),'denotes_[]'(L),'denotes_ is duplicated.'(K),'denotes_ of '(H),'denotes_Argument '(D),'denotes_.'(F,M,B),'denotes_[]'(M).
warn_dup_uninit(A,B):-cons(B),cut,comment(A,C),'denotes_.'(D,E,C),'denotes_.'(B,F,E),'denotes_.'(G,H,F),'denotes_.'(A,I,H),'denotes_.'(J,K,I),'denotes_[]'(K),'denotes_ are duplicated.'(J),'denotes_ of '(G),'denotes_Arguments '(D).
get_given_flags(A,B,C,D,E):-cut,'denotes_[]'(E),'denotes_[]'(D).
get_given_flags(A,B,C,D,E):-get_given_one(A,B,C,F,G),get_given_flags(A,B,C,H,I),'denotes_.'(J,I,E),denotes_flag(G,K,J),'denotes_.'(F,H,D).
get_req_flags(A,B,C,D):-cut,'denotes_[]'(D),'denotes_[]'(C).
get_req_flags(A,B,C,D):-get_req_one(A,B,E,F),get_req_flags(A,B,G,H),'denotes_.'(I,H,D),denotes_flag(J,F,I),'denotes_.'(E,G,C).
warn_req_uninit(A,B,C,D):-cut,'denotes_[]'(C).
warn_req_uninit(A,B,C,D):-cut,arg(A,B,E),warning(B,F),exprEval(G,H),warn_req_uninit(G,B,I,D),'denotes_+'(A,J,H),denotes_1(J),'denotes_.'(K,L,F),'denotes_.'(E,M,L),'denotes_.'(N,O,M),'denotes_.'(B,P,O),'denotes_.'(Q,R,P),'denotes_[]'(R),'denotes_ is given an init but requires an uninit.'(Q),'denotes_ of '(N),'denotes_Argument '(K),'denotes_.'(S,I,C),denotes_flag(T,U,S),denotes_mem(U),denotes_ini(T).
warn_req_uninit(A,B,C,D):-exprEval(E,F),warn_req_uninit(E,B,G,D),'denotes_+'(A,H,F),denotes_1(H),'denotes_.'(I,G,C).
get_given_one(A,B,C,D,E):-nonvar(D),cut,denotes_ini(E).
get_given_one(A,B,C,D,E):-var(D),inv(D,B),cut,denotes_mem(E).
get_given_one(A,B,C,D,E):-var(D),inv(D,C),cut,denotes_ini(E).
get_given_one(A,B,C,D,E):-var(D),neg(F),cut,denotes_inv(D,C,F),denotes_reg(G,E),denotes_sf(G).
get_given_one(A,B,C,D,E):-var(D),inv(D,A),cut,denotes_reg(F,E),denotes_uni(F).
get_req_one(A,B,C,D):-inv(C,B),cut,denotes_mem(D).
get_req_one(A,B,C,D):-inv(C,A),cut,denotes_reg(D).
get_req_one(A,B,C,D):-denotes_ini(D).
one_arg_pre(A,B,C,C,D,D,E,E,F,F,G,G,H,H):-cut,denotes_reg(B),denotes_reg(I,A).
one_arg_pre(A,B,C,D,E,F,G,G,H,H,I,I,J,J):-cut,'denotes_.'(C,F,E),denotes_reg(B),denotes_mem(A).
one_arg_pre(A,B,C,D,E,E,F,F,G,G,H,H,I,I):-cut,denotes_reg(B),denotes_ini(A).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,K,L,M):-cut,includev(D,I,J),tag(N,O),exprEval(P,Q),'denotes_-'(R,S,Q),denotes_1(S),denotes_1(R),denotes_var(N),'denotes_.'(T,U,L),'denotes_.'(V,W,U),'denotes_.'(X,M,W),denotes_pad(P,X),denotes_adda(Y,Z,A1,V),denotes_r(B1,A1),denotes_h(B1),denotes_1(Z),denotes_r(C1,Y),denotes_h(C1),denotes_move(D1,D,T),'denotes_^'(O,E1,D1),denotes_r(F1,E1),denotes_h(F1),'denotes_.'(D,G1,G),'denotes_.'(D,H,G1),'denotes_.'(D,F,E),denotes_mem(B),denotes_reg(H1,A),denotes_uni(H1).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,K,L,M):-cut,includev(C,I,N),includev(D,N,J),tag(O,P),exprEval(Q,R),'denotes_-'(S,T,R),denotes_1(T),denotes_1(S),denotes_var(O),'denotes_.'(U,V,L),'denotes_.'(W,X,V),'denotes_.'(Y,Z,X),'denotes_.'(A1,M,Z),denotes_pad(Q,A1),denotes_adda(B1,C1,D1,Y),denotes_r(E1,D1),denotes_h(E1),denotes_1(C1),denotes_r(F1,B1),denotes_h(F1),denotes_move(G1,D,W),'denotes_^'(P,H1,G1),denotes_r(I1,H1),denotes_h(I1),denotes_move(J1,C,U),'denotes_^'(P,K1,J1),denotes_r(L1,K1),denotes_h(L1),'denotes_.'(C,M1,G),'denotes_.'(N1,O1,M1),'denotes_.'(C,P1,O1),'denotes_.'(D,Q1,P1),'denotes_.'(D,H,Q1),denotes_pref(N1),'denotes_.'(C,R1,E),'denotes_.'(D,F,R1),denotes_mem(B),denotes_reg(S1,A),denotes_sf(S1).
one_arg_pre(A,B,C,C,D,E,F,F,G,G,H,H,I,I):-cut,'denotes_.'(C,E,D),denotes_mem(B),denotes_mem(A).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-cut,includev(D,I,J),tag(O,P),exprEval(Q,R),combine_formula(S,K,L),denotes_uninit(D,S),'denotes_-'(T,U,R),denotes_1(U),denotes_1(T),denotes_var(O),'denotes_.'(V,W,M),'denotes_.'(X,Y,W),'denotes_.'(Z,N,Y),denotes_pad(Q,Z),denotes_adda(A1,B1,C1,X),denotes_r(D1,C1),denotes_h(D1),denotes_1(B1),denotes_r(E1,A1),denotes_h(E1),denotes_move(F1,D,V),'denotes_^'(P,G1,F1),denotes_r(H1,G1),denotes_h(H1),'denotes_.'(D,I1,G),'denotes_.'(D,H,I1),'denotes_.'(D,F,E),denotes_mem(B),denotes_ini(A).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-cut,new_var(D,I,J,G,H,K,L,M,N),'denotes_.'(D,F,E),denotes_ini(B),denotes_reg(O,A),denotes_uni(O).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-cut,new_var(C,D,I,J,G,H,K,L,M,N),'denotes_.'(C,O,E),'denotes_.'(D,F,O),denotes_ini(B),denotes_reg(P,A),denotes_sf(P).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-cut,includev(D,I,J),pragma_tag(C,O,M,P),combine_formula(Q,K,L),'denotes_,'(R,S,Q),'denotes_,'(T,U,S),'denotes_=='(C,D,U),denotes_var(C,T),denotes_deref(C,R),'denotes_.'(V,W,P),'denotes_.'(X,N,W),denotes_move(C,D,X),denotes_move(C,Y,V),'denotes_.'(C,Z,Y),'denotes_[]'(Z),denotes_var(O),'denotes_.'(C,A1,G),'denotes_.'(B1,C1,A1),'denotes_.'(C,D1,C1),'denotes_.'(D,H,D1),denotes_pref(B1),'denotes_.'(C,E1,E),'denotes_.'(D,F,E1),denotes_ini(B),denotes_mem(A).
one_arg_pre(A,B,C,D,E,F,G,H,I,J,K,L,M,N):-cut,varset(C,O),diffv(O,I,P),difflist(P,E,F),create_arg(C,D,I,J,G,H,K,L,M,N),denotes_ini(B),denotes_ini(A).
one_arg_post(A,B,C,C,D,D,E,F,G,G,H,H):-cut,includev(C,E,F),denotes_reg(B),denotes_reg(I,A).
one_arg_post(A,B,C,D,E,F,G,H,I,I,J,K):-cut,includev(D,G,H),'denotes_.'(L,K,J),denotes_move(D,C,L),'denotes_.'(D,M,E),'denotes_.'(C,F,M),denotes_reg(B),denotes_mem(A).
one_arg_post(A,B,C,D,E,F,G,H,I,J,K,L):-cut,includev(D,G,M),unify(N,M,H,E,F,I,J,K,L),'denotes_='(D,C,N),denotes_reg(B),denotes_ini(A).
one_arg_post(A,B,C,D,E,F,G,H,I,I,J,K):-cut,includev(C,G,H),'denotes_.'(L,K,J),denotes_move(D,C,L),'denotes_.'(D,M,E),'denotes_.'(C,F,M),denotes_mem(B),denotes_reg(N,A),denotes_uni(N).
one_arg_post(A,B,C,D,E,E,F,F,G,G,H,H):-cut,denotes_mem(B),denotes_reg(I,A),denotes_sf(I).
one_arg_post(A,B,C,D,E,E,F,F,G,G,H,H):-cut,denotes_mem(B),denotes_mem(A).
one_arg_post(A,B,C,D,E,F,G,H,I,J,K,L):-cut,unify(M,G,H,E,F,I,J,K,L),'denotes_='(D,C,M),denotes_mem(B),denotes_ini(A).
one_arg_post(A,B,C,D,E,F,G,H,I,I,J,K):-cut,includev(C,G,H),'denotes_.'(L,K,J),denotes_move(D,C,L),'denotes_.'(D,M,E),'denotes_.'(C,F,M),denotes_ini(B),denotes_reg(N,A),denotes_uni(N).
one_arg_post(A,B,C,D,E,E,F,F,G,G,H,H):-cut,denotes_ini(B),denotes_reg(I,A),denotes_sf(I).
one_arg_post(A,B,C,D,E,E,F,F,G,G,H,H):-cut,denotes_ini(B),denotes_mem(A).
one_arg_post(A,B,C,D,E,E,F,F,G,G,H,H):-cut,denotes_ini(B),denotes_ini(A).
new_var(A,B,C,D,E,F,G,H,I):-combine_formula(J,F,G),new_var_nf(A,B,C,D,E,H,I),'denotes_,'(K,L,J),denotes_var(A,L),denotes_deref(A,K).
new_var(A,B,C,D,E,F,G,H,I,J):-nonident(A,B),cut,combine_formula(K,G,H),new_var_nf(A,B,C,D,E,F,I,J),'denotes_,'(L,M,K),'denotes_,'(N,O,M),'denotes_,'(P,Q,O),denotes_var(B,Q),denotes_deref(B,P),denotes_var(A,N),denotes_deref(A,L).
new_var(A,B,C,D,E,F,G,H,I,J):-ident(A,B),cut,new_var(A,C,D,E,F,G,H,I,J),true.
create_arg(A,A,B,B,C,C,D,D,E,E):-var(A),inv(A,B),cut,true.
create_arg(A,B,C,D,E,F,G,G,H,I):-var(A),neg(J),cut,new_var_nf(A,B,C,D,E,F,H,I),denotes_inv(A,C,J).
create_arg(A,B,C,C,D,D,E,E,F,F):-atomic(A),cut,make_word(A,B),true.
create_arg(A,B,C,D,E,F,G,H,I,J):-compound(A),cut,term_formula(B,A,G,K),combine_formula(L,K,H),includev(B,C,M),make_word(A,N),uninit_set(H,O),intersectv(M,O,P),diffv(M,P,Q),uninit_set_type(R,H,S),writemode(A,S,Q,T,U,F,V,J),unionv(T,P,D),denotes_mem(R),denotes_deref(B,L),'denotes_.'(W,V,I),denotes_move(N,B,W),'denotes_.'(B,U,E).
unify(A,B,C,D,E,F,G,H,I):-varset(J,K),unify(L,K,B,C,D,E,F,G,M,H,I),denotes_fail(M),'denotes_='(N,O,L),'denotes_='(N,O,J),'denotes_='(N,O,A).
call_moves(A,B,C,C):-cut,'denotes_[]'(B).
call_moves(A,B,C,D):-cut,constC(C,E,F),exprEval(G,H),call_moves(G,I,F,D),'denotes_+'(A,J,H),denotes_1(J),denotes_move(K,L,E),denotes_r(A,L),'denotes_.'(K,I,B).
head_moves_pre_2(A,B,C,D,E,E):-cut,'denotes_[]'(D),'denotes_[]'(A).
head_moves_pre_2(A,B,C,D,E,F):-inv(G,C),cut,exprEval(H,I),head_moves_pre_2(J,H,C,D,E,F),'denotes_+'(B,K,I),denotes_1(K),'denotes_.'(G,J,A).
head_moves_pre_2(A,B,C,D,E,F):-constC(E,G,H),exprEval(I,J),head_moves_pre_2(K,I,C,L,H,F),'denotes_+'(B,M,J),denotes_1(M),denotes_move(N,O,G),denotes_r(B,N),'denotes_.'(P,Q,D),'denotes_.'(R,S,Q),'denotes_.'(O,L,S),denotes_r(B,R),denotes_pref(P),'denotes_.'(O,K,A).
head_moves_post_2(A,B,C,D,D):-'denotes_[]'(C),'denotes_[]'(A).
head_moves_post_2(A,B,C,D,E):-head_reg(B,F,G),constC(D,H,I),head_moves_post_2(J,B,K,I,E),denotes_move(F,G,H),'denotes_.'(L,M,C),'denotes_.'(F,N,M),'denotes_.'(G,K,N),denotes_pref(L),'denotes_.'(F,J,A).
x_call_moves_pre_2(A,B,C,C,D,D):-'denotes_[]'(A).
x_call_moves_pre_2(A,B,C,D,E,F):-head_reg(B,G,H),constC(E,I,J),x_call_moves_pre_2(K,B,L,D,J,F),denotes_move(G,H,I),'denotes_.'(M,N,C),'denotes_.'(G,O,N),'denotes_.'(H,L,O),denotes_pref(M),'denotes_.'(G,K,A).
x_call_moves_post_2(A,B,C,C,D,D):-'denotes_[]'(A).
x_call_moves_post_2(A,B,C,D,E,F):-head_reg(B,G,H),constC(E,I,J),x_call_moves_post_2(K,B,L,D,J,F),denotes_move(H,G,I),'denotes_.'(M,N,C),'denotes_.'(H,O,N),'denotes_.'(G,L,O),denotes_pref(M),'denotes_.'(G,K,A).
vars_to_rename(A,B,C):-survive(A),cut,vars_to_be_dereffed(A,B,D),bindset(A,B,E),unionv(D,E,C).
vars_to_rename(A,B,C):-neg(D),cut,vars_to_be_dereffed(A,B,C),denotes_survive(A,D).
update_mapping(A,B,C,D,E,F,G):-map_terms(D,F,A,C),map_terms(C,B,F,H),diffv(A,D,I),map_terms(A,B,I,J),append(J,H,G),append(I,D,E).
init_extra_vars(A,B,C,D,D,E,E,F,F,G,G):-cut,'denotes_[]'(C),'denotes_[]'(B),'denotes_[]'(A).
init_extra_vars(A,B,C,D,E,F,G,H,I,J,K):-init_extra_var(L,M,N,D,O,F,P,H,Q,J,R),init_extra_vars(S,T,U,O,E,P,G,Q,I,R,K),'denotes_.'(N,U,C),'denotes_.'(M,T,B),'denotes_.'(L,S,A).
vars_to_be_dereffed(A,B,C):-require(A,D),split_deref(D,E),varset(E,F),not_deref(F,B,C).
not_deref(A,B,C):-cut,'denotes_[]'(C),'denotes_[]'(A).
not_deref(A,B,C):-neg(D),cut,not_deref(E,B,F),denotes_implies(B,G,D),denotes_deref(H,G),'denotes_.'(H,F,C),'denotes_.'(H,E,A).
not_deref(A,B,C):-not_deref(D,B,C),'denotes_.'(E,D,A).
init_extra_var(A,B,C,D,E,F,G,H,H,I,J):-implies(H,K),cut,includev(B,F,G),denotes_deref(A,K),'denotes_.'(L,J,I),denotes_move(C,B,L),'denotes_.'(M,N,D),'denotes_.'(C,O,N),'denotes_.'(B,E,O),denotes_pref(M).
init_extra_var(A,B,C,D,E,F,G,H,I,J,K):-includev(B,F,G),update_formula(L,H,I),denotes_deref(A,L),'denotes_.'(M,K,J),denotes_deref(C,B,M),'denotes_.'(N,O,D),'denotes_.'(C,P,O),'denotes_.'(B,E,P),denotes_pref(N).
gpermvars(A,B,B,C,C,D,D):-cut,denotes_true(A).
gpermvars(A,B,C,D,E,F,G):-gpermstep(H,B,I,D,J,F,K),gpermsurv(H,I,L,J,M),gpermvars(N,L,C,M,E,K,G),'denotes_,'(H,N,A).
gpermstep(A,B,C,D,D,E,F):-varset(A,G),intersectv(G,D,H),unionv(E,H,F),unionv(B,G,C),true.
gpermsurv(A,B,B,C,C):-survive(A),cut,true.
gpermsurv(A,B,B,C,D):-neg(E),cut,unionv(C,B,D),denotes_survive(A,E).
add_uninit_void(A,B,C,D,E):-var_args(A,F),term_dupset(A,G),diffv(F,G,H),diffv(H,B,I),uninit_set(D,J),diffv(I,J,K),make_uninit(K,L,M),intersectv(I,C,N),make_voids(N,O,L),union_formula(O,D,P),squeeze_conj(P,E),denotes_true(M).
tree_trav_entry(A,B,C):-denotes_entry(C,A).
tree_trav_entry(A,B,C):-(D;E),denotes_tree_trav_entry(F,B,C,E),'denotes_->'(G,H,D),denotes_tree_trav_entry(I,B,C,H),denotes_implies(B,J,G),denotes_mode(J,I,F,A).
make_uninit(A,B,B):-'denotes_[]'(A).
make_uninit(A,B,C):-co(D,B,E),make_uninit(F,E,C),denotes_uninit(G,H,D),denotes_either(G),'denotes_.'(H,F,A).
make_voids(A,B,B):-'denotes_[]'(A).
make_voids(A,B,C):-co(D,B,E),make_voids(F,E,C),denotes_void(G,D),'denotes_.'(G,F,A).
clause_allocate(A):-clause_allocate(A,B,C).
varlist(A,B):-varlist(A,B,C),'denotes_[]'(C).
local_allocate(A,B,C):-usage(A,D),alloc_voids(D),find_perms(A,E),split_temps(D,E,F),alloc_temps(F,A),split_perms(D,G),alloc_perms(G,A),num_perms(G,C),env_needed(A,C,B),cut.
usage(A,B):-varset(A,C),init_usage(C,B),first_usage(A,D,B),length(A,E),reverse(A,F),last_usage(F,E,B),denotes_1(D).
alloc_voids(A):-'denotes_[]'(A).
alloc_voids(A):-get_usage(B,C,D,E),(F;G),alloc_voids(H),denotes_true(G),'denotes_->'(I,J,F),'denotes_='(C,K,J),denotes_r(L,K),denotes_void(L),'denotes_='(D,E,I),'denotes_.'(B,H,A).
find_perms(A,B):-permvars(A,C,D,E,F,G,B),'denotes_[]'(G),'denotes_[]'(E),'denotes_[]'(C).
split_temps(A,B,C):-cut,'denotes_[]'(C),'denotes_[]'(A).
split_temps(A,B,C):-get_usage(D,E,F,G),neg(H),cut,split_temps(I,B,J),denotes_inv(E,B,H),'denotes_.'(D,J,C),'denotes_.'(D,I,A).
split_temps(A,B,C):-split_temps(D,B,C),'denotes_.'(E,D,A).
alloc_temps(A,B):-pref_closure(A,B),rest_temps(A,B,A).
split_perms(A,B):-'denotes_[]'(B),'denotes_[]'(A).
split_perms(A,B):-get_usage(C,D,E,F),var(D),cut,split_perms(G,H),'denotes_.'(C,H,B),'denotes_.'(C,G,A).
split_perms(A,B):-split_perms(C,B),'denotes_.'(D,C,A).
alloc_perms(A,B):-write_once,cut,naive_alloc_perms(B).
alloc_perms(A,B):-neg(C),cut,soph_alloc_perms(A),denotes_write_once(C).
num_perms(A,B):-low_perm(C),exprEval(D,E),num_perms(A,D,F),exprEval(B,G),'denotes_-'(F,D,G),'denotes_-'(C,H,E),denotes_1(H).
env_needed(A,B,C):-gt(B,D),cut,denotes_0(D),denotes_yes(C).
env_needed(A,B,C):-env_needed(A),cut,denotes_yes(C).
env_needed(A,B,C):-denotes_no(C).
varlist(A,B,C):-bodylist(D,B,C),cut,'denotes_:-'(E,D,A).
goallist(A,B,C):-cut,difflist(D,B,C),'denotes_$varlist'(D,A).
goallist(A,B,C):-cut,insert(D,E,B,C),'denotes_$varlist'(D,E,A).
goallist(A,B,C):-anyregs(A),cut,varbag(A,B,D),fence_if_die(A,D,C).
goallist(A,B,C):-neg(D),cut,univ(A,E),low_reg(F),goallist(F,G,B,H),fence_if_die(A,H,C),'denotes_.'(I,G,E),denotes_anyregs(A,D).
goallist(A,B,C,C):-'denotes_[]'(B).
goallist(A,B,C,D):-var(E),cut,constC(C,F,G),constC(G,E,H),constC(H,I,J),exprEval(K,L),goallist(K,M,J,D),'denotes_+'(A,N,L),denotes_1(N),denotes_r(A,I),denotes_pref(F),'denotes_.'(E,M,B).
goallist(A,B,C,D):-nonvar(E),cut,constC(C,F,G),exprEval(H,I),goallist(H,J,G,D),'denotes_+'(A,K,I),denotes_1(K),denotes_r(A,F),'denotes_.'(E,J,B).
env_needed(A):-ident(B,C),neg(D),denotes_trivial_moves(E,D),denotes_fence(C),'denotes_.'(B,E,A).
env_needed(A):-env_needed(B),'denotes_.'(C,B,A).
trivial_moves(A):-'denotes_[]'(A).
trivial_moves(A):-trivial_moves(B),'denotes_.'(C,D,A),'denotes_.'(E,F,D),'denotes_.'(E,B,F),denotes_pref(C).
get_usage(A,B,C,D):-denotes_var(D,C,B,A).
init_usage(A,B):-cut,'denotes_[]'(B),'denotes_[]'(A).
init_usage(A,B):-init_usage(C,D),'denotes_.'(E,D,B),denotes_var(F,G,H,E),'denotes_.'(H,C,A).
first_usage(A,B,C):-cut,'denotes_[]'(A).
first_usage(A,B,C):-var(D),cut,exprEval(E,F),find_usage(D,C,G,H),fix_it(B,G),first_usage(I,E,C),'denotes_+'(B,J,F),denotes_1(J),'denotes_.'(D,I,A).
first_usage(A,B,C):-nonvar(D),cut,exprEval(E,F),first_usage(G,E,C),'denotes_+'(B,H,F),denotes_1(H),'denotes_.'(D,G,A).
last_usage(A,B,C):-cut,'denotes_[]'(A).
last_usage(A,B,C):-var(D),cut,exprEval(E,F),find_usage(D,C,G,H),fix_it(B,H),last_usage(I,E,C),'denotes_-'(B,J,F),denotes_1(J),'denotes_.'(D,I,A).
last_usage(A,B,C):-nonvar(D),cut,exprEval(E,F),last_usage(G,E,C),'denotes_-'(B,H,F),denotes_1(H),'denotes_.'(D,G,A).
find_usage(A,B,C,D):-(E;F),denotes_find_usage(A,G,C,D,F),'denotes_->'(H,I,E),'denotes_,'(J,K,I),'denotes_='(D,L,K),'denotes_='(C,M,J),'denotes_=='(A,N,H),'denotes_.'(O,G,B),denotes_var(L,M,N,O).
fix_it(A,B):-(C;D),denotes_true(D),'denotes_->'(E,F,C),'denotes_='(A,B,F),denotes_var(B,E).
permvars(A,B,B,C,C,D,D):-cut,'denotes_[]'(A).
permvars(A,B,C,D,E,F,G):-var(H),cut,includev(H,B,I),permstep(H,D,J,F,K),permvars(L,I,C,J,E,K,G),'denotes_.'(H,L,A).
permvars(A,B,C,D,E,F,G):-ident(H,I),cut,unionv(D,B,J),permvars(K,B,C,J,E,F,G),denotes_fence(I),'denotes_.'(H,K,A).
permvars(A,B,C,D,E,F,G):-nonvar(H),nonident(H,I),cut,permvars(J,B,C,D,E,F,G),denotes_fence(I),'denotes_.'(H,J,A).
permstep(A,B,B,C,D):-inv(A,B),cut,includev(A,C,D),true.
permstep(A,B,B,C,C):-cut,true.
naive_alloc_perms(A):-reverse(A,B),low_perm(C),naive_alloc_perms(B,C,D).
soph_alloc_perms(A):-sort(A,B),reverse(B,C),soph_alloc_perms(C,C).
naive_alloc_perms(A,B,B):-cut,'denotes_[]'(A).
naive_alloc_perms(A,B,C):-alloc_if_var(D,B,E),naive_alloc_perms(F,E,C),'denotes_.'(D,F,A).
alloc_if_var(A,B,C):-(D;E),'denotes_='(C,B,E),'denotes_->'(F,G,D),'denotes_,'(H,I,G),'denotes_='(A,J,I),denotes_p(B,J),denotes_is(C,K,H),'denotes_+'(B,L,K),denotes_1(L),denotes_var(A,F).
soph_alloc_perms(A,B):-cut,'denotes_[]'(A).
soph_alloc_perms(A,B):-get_usage(C,D,E,F),low_perm(G),max_int(H),range(G,I,H),neg(J),soph_alloc_perms(K,B),denotes_usage_overlap(E,F,B,L,J),denotes_p(I,L),denotes_p(I,D),'denotes_.'(C,K,A).
usage_overlap(A,B,C,D):-get_usage(E,D,F,G),nonvar(D),overlap(A,B,F,G),cut,'denotes_.'(E,H,C).
usage_overlap(A,B,C,D):-usage_overlap(A,B,E,D),'denotes_.'(F,E,C).
num_perms(A,B,B):-'denotes_[]'(A).
num_perms(A,B,C):-get_usage(D,E,F,G),max(B,H,I),num_perms(J,I,C),denotes_p(H,E),'denotes_.'(D,J,A).
pref_closure(A,B):-pref_temps(A,B,A,C,D),pref_closure(A,B,D),denotes_0(C).
rest_temps(A,B,C):-cut,'denotes_[]'(A).
rest_temps(A,B,C):-get_usage(D,E,F,G),(H;I),rest_temps(J,B,C),denotes_true(I),'denotes_->'(K,L,H),denotes_pref_closure(C,B,L),'denotes_,'(M,N,K),denotes_rest_allocate(E,B,C,F,G,N),denotes_var(E,M),'denotes_.'(D,J,A).
pref_temps(A,B,C,D,D):-cut,'denotes_[]'(A).
pref_temps(A,B,C,D,E):-get_usage(F,G,H,I),(J;K),pref_temps(L,B,C,M,E),'denotes_='(M,D,K),'denotes_->'(N,O,J),denotes_is(M,P,O),'denotes_+'(D,Q,P),denotes_1(Q),'denotes_,'(R,S,N),denotes_pref_allocate(G,B,C,H,I,S),denotes_var(G,R),'denotes_.'(F,L,A).
pref_closure(A,B,C):-gt(C,D),cut,pref_closure(A,B),denotes_0(D).
pref_closure(A,B,C):-cut,denotes_0(C).
pref_allocate(A,B,C,D,E):-eq(D,E),prefer(A,B,A),true.
pref_allocate(A,B,C,D,E):-noteq(D,E),prefer(A,B,A),neg(F),denotes_already_used(A,A,D,E,B,C,F).
prefer(A,B,C):-pref(D),ident(A,E),temp_register(C),'denotes_.'(D,F,B),'denotes_.'(E,G,F),'denotes_.'(C,H,G).
prefer(A,B,C):-pref(D),ident(A,E),temp_register(C),'denotes_.'(D,F,B),'denotes_.'(C,G,F),'denotes_.'(E,H,G).
prefer(A,B,C):-prefer(A,D,C),'denotes_.'(E,D,B).
already_used(A,B,C,D,E,F):-usage_overlap(C,D,F,B),cut.
already_used(A,B,C,D,E,F):-reg_overlap(A,B,G,C,D,E),cut,denotes_1(G).
rest_allocate(A,B,C,D,E):-low_reg(F),high_reg(G),range(F,H,G),neg(I),denotes_already_used(J,K,D,E,B,C,I),denotes_r(H,K),denotes_r(H,J),denotes_r(H,A).
reg_overlap(A,B,C,D,E,F):-le(C,D),exprEval(G,H),reg_overlap(A,B,G,D,E,I),'denotes_+'(C,J,H),denotes_1(J),'denotes_.'(K,I,F).
reg_overlap(A,B,C,D,E,F):-lt(D,C),lt(C,E),no_conflict(A,B,F,G),exprEval(H,I),reg_overlap(A,B,H,D,E,G),'denotes_+'(C,J,I),denotes_1(J).
reg_overlap(A,B,C,D,E,F):-lt(D,C),lt(C,E),ident(B,G),'denotes_.'(G,H,F).
no_conflict(A,B,C,D):-pref(E),(F;G),cut,'denotes_,'(H,I,G),'denotes_=='(B,J,I),'denotes_=='(A,K,H),'denotes_,'(L,M,F),'denotes_=='(B,K,M),'denotes_=='(A,J,L),'denotes_.'(E,N,C),'denotes_.'(J,O,N),'denotes_.'(K,D,O).
no_conflict(A,B,C,D):-nonident(B,E),cut,'denotes_.'(E,D,C).
pref(A):-ident(A,B),denotes_pref(B).
overlap(A,B,C,D):-lt(A,C),lt(C,B).
overlap(A,B,C,D):-lt(A,D),lt(D,B).
overlap(A,B,C,D):-lt(A,C),lt(D,B).
overlap(A,B,C,D):-lt(C,A),lt(B,D).
temp_register(A):-nonvar(B),integer(C),denotes_r(C,B),denotes_r(C,A).
ct_u(A,B,B,C,C):-inv(D,C),cut,denotes_nonvar(D,A).
ct_u(A,B,C,D,D):-ctest(A,B,C),true.
rt_d(A,A,B,B,C,C,D,D,E,E):-inv(A,E),cut,true.
rt_d(A,B,C,D,E,F,G,H,I,I):-rtest_deref(A,B,C,D,E,F,G,H),true.
rt_in_d(A,A,B,B,C,C,D,D,E,E):-inv(A,E),cut,true.
rt_in_d(A,B,C,D,E,F,G,H,I,I):-rtest_in_deref(A,B,C,D,E,F,G,H),true.
unify(A,B,C,D,E,F):-unify(G,B,C,H,D,E,F),'denotes_='(I,J,G),'denotes_='(I,J,A).
unify(A,B,C,D,E,F,G):-unify(H,D,B,C,E,I,F,G),'denotes_='(J,K,H),'denotes_='(J,K,A).
unify(A,B,C,D,E,F,G,H):-unify(I,C,D,B,J,E,F,G,H),'denotes_[]'(J),'denotes_='(K,L,I),'denotes_='(K,L,A).
unify(A,B,C,D,E,F,G,H,I,J,K):-uninit_set(G,L),diffv(C,L,M),grounds_in_form(G,N),rderef_set(G,O),intersectv(O,N,P),uninit_set_type(Q,G,R),unify_2(S,T,P,U,N,V,R,B,M,W,E,F,G,X,I,J,K),varset(Y,Z),unionv(W,Z,D),intersectv(L,W,A1),remove_uninit(A1,X,B1),update_formula(C1,C,B1,H),'denotes_='(S,T,C1),'denotes_='(S,T,Y),denotes_mem(Q),'denotes_='(S,T,A).
unify(A,B,C,D,E,F,G,H,I,J,K):-unify(L,B,C,M,E,N,G,O,I,J,P),unify(Q,B,M,D,N,F,O,H,I,P,K),'denotes_,'(L,Q,A).
unify_2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-var(A),var(B),cut,unify_var(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-var(A),nonvar(B),cut,unify_3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-nonvar(A),var(B),cut,unify_3(B,A,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-nonvar(A),nonvar(B),cut,unify_nonvar(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_var(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-inv(A,I),inv(B,I),cut,unify_var_i(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_var(A,B,C,C,D,D,E,F,G,H,I,J,K,L,M,N,O):-inv(A,G),neg(P),cut,uninit_dest(B,Q,R,E),cond_pref(R,I,S),map_formula(A,B,K,L),cond_pragma_tag(R,B,N,T),includev(B,G,H),'denotes_.'(U,O,T),denotes_move(A,Q,U),'denotes_.'(A,V,S),'denotes_.'(B,J,V),denotes_inv(B,G,P).
unify_var(A,B,C,C,D,D,E,F,G,H,I,J,K,L,M,N,O):-neg(P),inv(B,G),cut,uninit_dest(A,Q,R,E),cond_pref(R,I,S),map_formula(B,A,K,L),cond_pragma_tag(R,A,N,T),includev(A,G,H),'denotes_.'(U,O,T),denotes_move(B,Q,U),'denotes_.'(B,V,S),'denotes_.'(A,J,V),denotes_inv(A,G,P).
unify_var(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-neg(R),neg(S),cut,unify_var_u(A,B,C,D,E,F,G,I,J,K,L,M,N,P,Q),denotes_inv(B,I,S),denotes_inv(A,I,R).
unify_3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-neg(R),cut,uninit_unify(A,B,S,T,C,D,E,F,G,H,I,U,K,L,M,N,P,Q),includev(A,U,J),denotes_nonlast(S),denotes_inv(A,I,R).
unify_3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-inv(A,E),cut,init_unify(A,B,R,S,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),denotes_nonlast(R).
unify_3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-unify_depth(A,B,R,S,T),init_unify(A,R,U,V,C,W,E,X,G,H,I,Y,K,Z,M,A1,O,P,B1),unify_3_conj(T,W,D,X,F,G,H,Y,J,Z,L,A1,N,O,B1,Q),denotes_nonlast(U).
unify_nonvar(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-functor(A,R,S),functor(B,R,S),cut,unify_nonvar(A,B,T,S,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),denotes_1(T).
unify_nonvar(A,B,C,C,D,D,E,F,G,G,H,H,I,J,K,L,M):-update_formula(N,I,J),denotes_fail(N),'denotes_.'(O,M,L),denotes_fail(O).
unify_nonvar(A,B,C,D,E,E,F,F,G,H,I,I,J,J,K,K,L,M,M):-gt(C,D),cut,true.
unify_nonvar(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-le(C,D),cut,arg(C,A,T),arg(C,B,U),unify_2(T,U,E,V,G,W,I,J,K,X,M,Y,O,Z,Q,R,A1),exprEval(B1,C1),unify_nonvar(A,B,B1,D,V,F,W,H,I,J,X,L,Y,N,Z,P,Q,A1,S),'denotes_+'(C,D1,C1),denotes_1(D1).
uninit_unify(A,B,C,D,E,E,F,F,G,H,I,J,K,L,M,N,O,P):-compound(B),cut,uninit_bind(A,B,G,K,Q,M,R,O,S),writemode(C,A,B,T,U,G,H,I,J,Q,L,R,N,S,P),'denotes_.'(T,U,D).
uninit_unify(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O):-atomic(B),cut,uninit_bind(A,B,G,J,K,L,M,N,O),true.
uninit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R):-var(B),cut,unify_var(A,B,E,F,G,H,I,J,K,L,M,N,O,P,S,Q,R),true.
init_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-split_formula(T,K,U,O,V,W),xinit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,V,X,Q,R,S),combine_formula(X,W,P),'denotes_='(A,B,U).
unify_depth(A,B,C,D,E):-unify_depth_2(F,B,C,G,H,I,J),sort(I,D),flat_conj(G,E),'denotes_[]'(J),denotes_true(H),denotes_0(F).
unify_3_conj(A,B,B,C,C,D,E,F,F,G,G,H,H,I,J,J):-denotes_true(A).
unify_3_conj(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P):-unify_2(Q,R,B,S,D,T,F,G,H,U,J,V,L,W,N,O,X),unify_3_conj(Y,S,C,T,E,F,G,U,I,V,K,W,M,N,X,P),'denotes_,'(Z,Y,A),'denotes_='(Q,R,Z).
unify_var_i(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-atomic_value(M,A,R),cut,unify_2(B,R,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_var_i(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-atomic_value(M,B,R),cut,unify_2(A,R,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
unify_var_i(A,B,C,C,D,D,E,F,G,G,H,I,J,K,L,M,N):-ctest(O,J,P),ctest(Q,P,R),cut,rtest_in_deref(A,S,H,T,R,U,M,V),rtest_in_deref(B,W,T,X,U,K,V,Y),'denotes_.'(Z,N,Y),denotes_equal(S,W,L,Z),'denotes_.'(S,A1,X),'denotes_.'(W,I,A1),denotes_atomic(B,Q),denotes_atomic(A,O).
unify_var_i(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-unify_flag(M,A,R),unify_flag(M,B,S),unify_var_i(R,S,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),true.
uninit_dest(A,A,B,C):-neg(D),cut,denotes_inv(A,C,D),denotes_yes(B).
uninit_dest(A,B,C,D):-inv(A,D),cut,denotes_no(C),'denotes_.'(A,E,B),'denotes_[]'(E).
cond_pref(A,B,C):-cut,'denotes_.'(D,C,B),denotes_pref(D),denotes_yes(A).
cond_pref(A,B,B):-cut,denotes_no(A).
map_formula(A,B,C,D):-map_terms(E,F,C,G),union_formula(C,G,D),'denotes_.'(B,H,F),'denotes_[]'(H),'denotes_.'(A,I,E),'denotes_[]'(I).
cond_pragma_tag(A,B,C,C):-denotes_yes(A).
cond_pragma_tag(A,B,C,D):-pragma_tag(B,E,C,D),denotes_var(E),denotes_no(A).
unify_var_u(A,B,C,C,D,D,E,F,G,H,I,J,K,L,M):-inv(A,E),inv(B,E),cut,includev(A,F,N),includev(B,N,G),update_formula(O,J,P),update_formula(Q,P,R),update_formula(S,R,T),update_formula(U,T,K),pragma_tag(A,V,L,W),pragma_tag(B,X,Y,Z),'denotes_.'(A1,M,Z),denotes_move(A,B1,A1),'denotes_.'(B,C1,B1),'denotes_[]'(C1),denotes_var(X),'denotes_.'(D1,Y,W),denotes_move(A,E1,D1),'denotes_.'(A,F1,E1),'denotes_[]'(F1),denotes_var(V),denotes_var(B,U),denotes_var(A,S),denotes_deref(B,Q),denotes_deref(A,O),'denotes_.'(A,G1,H),'denotes_.'(H1,I1,G1),'denotes_.'(A,J1,I1),'denotes_.'(B,I,J1),denotes_pref(H1).
unify_var_u(A,B,C,C,D,D,E,F,G,H,I,J,K,L,M):-inv(A,E),neg(N),cut,includev(A,F,O),includev(B,O,G),update_formula(P,J,Q),update_formula(R,Q,S),update_formula(T,S,U),update_formula(V,U,K),pragma_tag(A,W,L,X),'denotes_.'(Y,Z,X),'denotes_.'(A1,M,Z),denotes_move(A,B,A1),denotes_move(A,B1,Y),'denotes_.'(A,C1,B1),'denotes_[]'(C1),denotes_var(W),denotes_var(B,V),denotes_var(A,T),denotes_deref(B,R),denotes_deref(A,P),denotes_inv(B,E,N),'denotes_.'(A,D1,H),'denotes_.'(E1,F1,D1),'denotes_.'(A,G1,F1),'denotes_.'(B,I,G1),denotes_pref(E1).
unify_var_u(A,B,C,C,D,D,E,F,G,H,I,J,K,L,M):-neg(N),inv(B,E),cut,includev(A,F,O),includev(B,O,G),update_formula(P,J,Q),update_formula(R,Q,S),update_formula(T,S,U),update_formula(V,U,K),pragma_tag(A,W,X,Y),'denotes_.'(Z,M,Y),denotes_move(A,A1,Z),'denotes_.'(A,B1,A1),'denotes_[]'(B1),denotes_var(W),denotes_var(B,V),denotes_var(A,T),denotes_deref(B,R),denotes_deref(A,P),denotes_inv(A,E,N),'denotes_.'(C1,X,L),denotes_move(B,A,C1),'denotes_.'(D1,E1,H),'denotes_.'(B,F1,E1),'denotes_.'(A,G1,F1),'denotes_.'(A,I,G1),denotes_pref(D1).
unify_var_u(A,B,C,C,D,D,E,F,G,H,I,J,J,K,L):-neg(M),neg(N),cut,new_var_nf(A,B,F,G,H,I,K,L),denotes_inv(B,E,N),denotes_inv(A,E,M).
unify_flag(A,B,C):-implies(A,D),cut,denotes_nonvar(B,D),denotes_nonvar(C).
unify_flag(A,B,C):-implies(A,D),cut,denotes_var(B,D),denotes_var(C).
unify_flag(A,B,C):-'denotes_?'(C).
unify_var_i(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O,P):-cut,rtest_in_deref(C,Q,J,R,L,S,O,T),rtest_in(U,Q,S,V,N,T,W),pragma_tag_form(Q,V,M,W,X),'denotes_.'(Y,P,X),denotes_move(D,Z,Y),'denotes_.'(Q,A1,Z),'denotes_[]'(A1),denotes_trail(Q,U),'denotes_.'(D,B1,R),'denotes_.'(Q,K,B1),denotes_nonvar(B),denotes_var(A).
unify_var_i(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O,P):-cut,rtest_in_deref(D,Q,J,R,L,S,O,T),rtest_in(U,Q,S,V,N,T,W),pragma_tag_form(Q,V,M,W,X),'denotes_.'(Y,P,X),denotes_move(C,Z,Y),'denotes_.'(Q,A1,Z),'denotes_[]'(A1),denotes_trail(Q,U),'denotes_.'(C,B1,R),'denotes_.'(Q,K,B1),denotes_var(B),denotes_nonvar(A).
unify_var_i(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O,P):-rtest_in_deref(C,Q,J,R,L,S,O,T),rtest_in_deref(D,U,R,V,S,W,T,X),fence_if_nosurvive(Y,K),remove_vars(W,M),'denotes_.'(Z,P,X),denotes_unify(Q,U,A,B,N,Z),'denotes_.'(A1,B1,V),'denotes_.'(Q,C1,B1),'denotes_.'(U,Y,C1),denotes_pref(A1).
pragma_tag_form(A,B,B,C,D):-get_tag(B,A,E),cut,'denotes_.'(F,D,C),denotes_pragma(G,F),denotes_tag(A,E,G).
pragma_tag_form(A,B,B,C,C):-true.
fence_if_nosurvive(A,A):-survive(B),cut,'denotes_$unify'(C,D,B).
fence_if_nosurvive(A,B):-neg(C),cut,denotes_survive(D,C),'denotes_$unify'(E,F,D),'denotes_.'(G,B,A),denotes_fence(G).
new_var_nf(A,B,C,D,E,F,G,H):-nonident(A,B),cut,includev(A,C,I),includev(B,I,D),tag(J,K),align_calc(L,M,N),align_pad(N,O,H),denotes_1(L),denotes_var(J),'denotes_.'(P,Q,G),'denotes_.'(R,S,Q),'denotes_.'(T,U,S),'denotes_.'(V,O,U),denotes_push(B,W,X,V),denotes_1(X),denotes_r(Y,W),denotes_h(Y),denotes_pragma(Z,T),denotes_push(A1,Z),denotes_variable(A1),denotes_move(B1,B,R),'denotes_^'(K,C1,B1),denotes_r(D1,C1),denotes_h(D1),denotes_move(E1,A,P),'denotes_^'(K,F1,E1),denotes_r(G1,F1),denotes_h(G1),'denotes_.'(A,H1,E),'denotes_.'(I1,J1,H1),'denotes_.'(A,K1,J1),'denotes_.'(B,L1,K1),'denotes_.'(B,F,L1),denotes_pref(I1).
new_var_nf(A,B,C,D,E,F,G,H):-ident(A,B),cut,new_var_nf(A,C,D,E,F,G,H),true.
uninit_bind(A,B,C,D,E,F,G,H,I):-make_word(B,J),uninit_move(J,A,C,F,K,H,I),term_formula(A,B,K,G),'denotes_.'(A,E,D).
writemode(A,B,C,D,E,F,G,H,H,I,I,J,J,K,L):-cut,'denotes_.'(M,L,K),denotes_jump(D,M),denotes_last(A).
writemode(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):-cut,b_writemode(C,E,F,G,H,I,J,K,L,M,P,O,B,Q,R),denotes_0(Q),'denotes_.'(S,P,N),denotes_pragma(T,S),denotes_push(U,T),denotes_term(R,U),denotes_nonlast(A).
make_word(A,B):-compound(A),term_tag(A,C),cut,'denotes_^'(C,D,B),denotes_r(E,D),denotes_h(E).
make_word(A,B):-atom(A),term_tag(A,C),cut,'denotes_^'(C,A,B).
make_word(A,A):-number(A),cut.
make_word(A,A):-var(A),cut.
uninit_move(A,B,C,D,E,F,G):-neg(H),cut,update_formula(I,D,E),denotes_deref(B,I),denotes_inv(B,C,H),'denotes_.'(J,G,F),denotes_move(A,B,J).
uninit_move(A,B,C,D,D,E,F):-inv(B,C),cut,pragma_tag(B,G,E,H),'denotes_.'(I,F,H),denotes_move(A,J,I),'denotes_.'(B,K,J),'denotes_[]'(K),denotes_var(G).
term_formula(A,B,C,D):-nonvar(B),cut,functor(B,E,F),update_formula(G,C,D),'denotes_$name_arity'(A,E,F,G).
term_formula(A,B,C,C):-var(B),cut,true.
xinit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-atomic(B),ct_u(T,O,U,G,V),cut,rtest_deref(A,W,M,X,U,Y,R,Z),unify_rm(W,B,C,A1,B1,E,F,V,H,I,J,K,L,X,N,Y,P,Q,Z,S),denotes_no(B1),denotes_nonvar(A,T),'denotes_.'(C1,A1,D).
xinit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-compound(B),ct_u(T,O,U,G,V),cut,rtest_deref(A,W,M,X,U,Y,R,Z),term_test(B,W,A1),rtest(A1,W,Y,B1,Q,Z,C1),unify_rm(W,B,C,D1,E1,E,F,V,H,I,J,K,L,X,N,B1,P,Q,C1,S),denotes_no(E1),denotes_nonvar(A,T),'denotes_.'(F1,D1,D).
xinit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-nonvar(B),ctest(T,O,U),cut,rtest_deref(A,V,M,W,U,X,R,Y),unify_wm(V,B,C,Z,E,F,G,H,I,J,K,L,W,N,X,P,Q,Y,S),denotes_var(A,T),'denotes_.'(A1,Z,D).
xinit_unify(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O,P):-atomic(B),cut,rtest_deref(A,Q,J,R,L,S,O,T),rtest_in(U,Q,S,M,N,T,V),term_tag(B,W),make_word(B,X,Y),'denotes_.'(Z,P,V),denotes_unify_atomic(Q,Y,N,Z),denotes_trail_if_var(Q,U),'denotes_.'(Q,K,R),'denotes_.'(A1,B1,D).
xinit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-nonvar(B),cut,rtest_deref(A,T,M,U,O,V,R,W),term_tag(B,X),term_test(B,T,Y),update_formula(Z,V,A1),unify_wm(T,B,C,B1,K,A1,C1,D1,E,E1,G,F1,I,G1,H1,Q),update_formula(Y,V,I1),unify_rm(T,B,C,B1,J1,I1,K1,L1,E1,F,F1,H,I,J,K,L,H1,N,Q),intersect_formula(C1,K1,P),denotes_yes(J1),denotes_var(T,Z),'denotes_.'(M1,S,W),denotes_switch(N1,X,T,D1,L1,Q,M1),denotes_unify(N1),'denotes_.'(T,G1,U),'denotes_.'(O1,B1,D).
xinit_unify(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-var(B),cut,unify_var(A,B,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),'denotes_.'(T,U,D).
unify_rm(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T):-structure(B),cut,functor(B,U,V),univ(B,W),rtest_in(X,A,P,Y,R,S,Z),unify_args(A1,B1,A,D,E,F,G,H,I,J,K,L,M,C1,O,Y,Q,R,Z,T,D1),denotes_structure(D1),denotes_1(B1),'denotes_$name_arity'(A,U,V,X),'denotes_.'(U,A1,W),'denotes_.'(A,C1,N).
unify_rm(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T):-cons(U),cut,unify_args(V,W,A,D,E,F,G,H,I,J,K,L,M,X,O,P,Q,R,S,T,Y),denotes_cons(Y),denotes_0(W),'denotes_.'(Z,A1,V),'denotes_.'(B1,C1,A1),'denotes_[]'(C1),'denotes_.'(Z,B1,U),'denotes_.'(A,X,N),'denotes_.'(Z,B1,B).
unify_rm(A,B,C,D,E,F,F,G,G,H,I,J,J,K,L,M,N,O,P,Q):-atom(B),cut,rtest_in(R,A,M,N,O,P,Q),'denotes_$name_arity'(A,B,S,R),denotes_0(S),'denotes_.'(A,L,K).
unify_rm(A,B,C,D,E,F,F,G,G,H,I,J,J,K,L,M,N,O,P,Q):-number(B),cut,rtest_in(R,A,M,N,O,P,Q),'denotes_$name_arity'(A,B,S,R),denotes_0(S),'denotes_.'(A,L,K).
unify_wm(A,B,C,D,E,E,F,F,G,H,I,J,K,L,M,N,O,P,Q):-compound(B),cut,rtest_in(R,A,M,S,O,P,T),term_tag(B,U),pragma_tag(A,V,T,W),writemode(C,A,B,X,Y,G,H,I,J,Z,L,S,N,A1,Q),'denotes_.'(B1,A1,W),denotes_move(C1,D1,B1),'denotes_.'(A,E1,D1),'denotes_[]'(E1),'denotes_^'(U,F1,C1),denotes_r(G1,F1),denotes_h(G1),denotes_var(V),denotes_trail(A,R),'denotes_.'(A,Z,K),'denotes_.'(X,Y,D).
unify_wm(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O,P):-atom(B),cut,term_tag(B,Q),rtest_in(R,A,L,M,N,O,S),pragma_tag(A,T,S,U),'denotes_.'(V,P,U),denotes_move(W,X,V),'denotes_.'(A,Y,X),'denotes_[]'(Y),'denotes_^'(Q,B,W),denotes_var(T),denotes_trail(A,R),'denotes_.'(A,K,J).
unify_wm(A,B,C,D,E,E,F,F,G,H,I,I,J,K,L,M,N,O,P):-number(B),cut,rtest_in(Q,A,L,M,N,O,R),pragma_tag(A,S,R,T),'denotes_.'(U,P,T),denotes_move(B,V,U),'denotes_.'(A,W,V),'denotes_[]'(W),denotes_var(S),denotes_trail(A,Q),'denotes_.'(A,K,J).
make_word(A,B,C):-compound(A),term_tag(A,D),cut,'denotes_^'(D,E,C),'denotes_+'(F,B,E),denotes_r(G,F),denotes_h(G).
make_word(A,B,C):-atom(A),term_tag(A,D),cut,'denotes_^'(D,A,C).
make_word(A,B,A):-number(A),cut.
make_word(A,B,A):-var(A),cut.
unify_wm(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P):-unify_wm(A,B,C,D,I,J,K,L,M,Q,E,R,N,O,F,G,P,H,S),'denotes_[]'(S),'denotes_[]'(Q).
unify_rm(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):-unify_rm(A,B,C,D,E,I,J,K,L,M,N,O,P,Q,R,F,G,S,H,T),'denotes_[]'(T).
unify_args(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U):-unify_args(V,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),'denotes_[]'(V).
unify_args(A,B,C,D,E,F,G,G,H,H,I,J,K,K,L,L,M,M,N,O,O,P):-cut,'denotes_[]'(B),'denotes_[]'(A).
unify_args(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V):-cut,unify_arg(A,W,X,C,D,Y,E,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V),denotes_nonlast(Y),denotes_no(F),'denotes_.'(X,Z,B),'denotes_[]'(Z).
unify_args(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V):-cut,unify_arg(A,W,X,C,D,Y,E,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V),denotes_last(Y),denotes_yes(F),'denotes_.'(X,Z,B),'denotes_[]'(Z).
unify_args(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V):-fail,exprEval(W,X),cut,move_arg(D,C,Y,G,Z,I,A1,M,B1,O,C1,Q,D1,T,E1,V),exprEval(F1,G1),move_arg(D,F1,H1,Z,I1,A1,J1,B1,K1,C1,L1,D1,M1,E1,N1,V),unify_args(O1,P1,C,D,E,F,I1,H,J1,J,K,L,K1,N,L1,P,M1,R,S,N1,U,V),'denotes_.'(Q1,R1,P1),'denotes_.'(S1,T1,R1),'denotes_.'(Y,U1,O1),'denotes_.'(H1,V1,U1),'denotes_[]'(V1),'denotes_+'(C,W1,G1),denotes_1(W1),denotes_mod(C,X1,X),denotes_2(X1),denotes_0(W),'denotes_.'(Q1,Y1,B),'denotes_.'(S1,T1,Y1),'denotes_[]'(A).
unify_args(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V):-cut,unify_arg(A,W,X,C,D,Y,Z,G,A1,I,B1,K,L,M,C1,O,D1,Q,E1,S,T,F1,V),exprEval(G1,H1),unify_args(W,I1,G1,D,E,F,A1,H,B1,J,K,L,C1,N,D1,P,E1,R,S,F1,U,V),'denotes_.'(J1,K1,I1),'denotes_+'(C,L1,H1),denotes_1(L1),denotes_nonlast(Y),'denotes_.'(X,M1,B),'denotes_.'(J1,K1,M1).
unify_arg(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W):-var(C),neg(X),neg(Y),cut,move_arg(A,B,E,D,C,H,I,J,K,N,Z,P,Q,R,S,U,V,W),sort(Z,O),denotes_inv(C,L,Y),denotes_inv(C,N,X).
unify_arg(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W):-move_arg(A,B,E,D,X,H,Y,J,Z,N,A1,P,B1,R,C1,U,D1,W),init_unify(X,C,F,G,Y,I,Z,K,L,M,A1,O,B1,Q,C1,S,T,D1,V),true.
move_arg(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P):-pragma_tag(A,P,N,Q),pragma_align(A,B,Q,R),includev(C,H,I),gnd_drf_update(C,A,D,E,F,G,L,M),'denotes_.'(S,O,R),denotes_move(T,C,S),'denotes_.'(U,V,T),'denotes_[]'(V),'denotes_+'(A,B,U),'denotes_.'(A,W,J),'denotes_.'(C,K,W).
move_arg(A,B,C,D,E,F,F,G,G,H,H,I,I,J,J,K,K,L):-'denotes_.'(E,B,A).
move_arg(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R):-move_arg(C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),'denotes_[]'(B),'denotes_[]'(A).
pragma_align(A,B,C,D):-exprEval(E,F),cut,denotes_mod(B,G,F),denotes_1(G),denotes_0(E),'denotes_.'(H,D,C),denotes_pragma(I,H),denotes_align(A,J,I),denotes_1(J).
pragma_align(A,B,C,C):-true.
gnd_drf_update(A,B,C,D,E,F,G,H):-inv(B,E),cut,includev(A,E,F),combine_formula(I,G,J),drf_update(A,B,C,D,J,H),denotes_ground(A,I).
gnd_drf_update(A,B,C,C,D,D,E,E):-true.
drf_update(A,B,C,D,E,F):-inv(B,C),cut,includev(A,C,D),combine_formula(G,E,F),denotes_rderef(A,G).
drf_update(A,B,C,C,D,D):-true.
writemode(A,B,C,D,E,F,G,H):-writemode(I,J,A,K,L,B,M,C,D,E,F,N,O,G,H),denotes_true(N),'denotes_[]'(M),denotes_none(J),denotes_nonlast(I).
align_calc(A,B,C):-exprEval(B,D),exprEval(C,E),'denotes_-'(B,A,E),'denotes_*'(F,G,D),denotes_1(G),'denotes_//'(H,I,F),denotes_1(I),'denotes_-'(J,K,H),denotes_1(K),'denotes_+'(A,L,J),denotes_1(L).
align_pad(A,B,B):-cut,denotes_0(A).
align_pad(A,B,C):-noteq(A,D),cut,denotes_0(D),'denotes_.'(E,C,B),denotes_pad(A,E).
new_umemvar_nf(A,B,C,D,E,F,G):-includev(A,B,C),tag(H,I),align_calc(J,K,L),align_pad(L,M,G),denotes_1(J),denotes_var(H),'denotes_.'(N,O,F),'denotes_.'(P,M,O),denotes_adda(Q,R,S,P),denotes_r(T,S),denotes_h(T),denotes_1(R),denotes_r(U,Q),denotes_h(U),denotes_move(V,A,N),'denotes_^'(I,W,V),denotes_r(X,W),denotes_h(X),'denotes_.'(A,Y,D),'denotes_.'(A,E,Y).
new_vars(A,B,C,D,E,F,G,H,I):-sort(A,J),diffv(J,B,K),uninit_set_type(L,F,M),uninit_set_type(N,F,O),diffv(K,O,P),new_var_list(P,M,B,C,D,E,F,G,H,I),denotes_reg(N),denotes_mem(L).
new_var_list(A,B,C,C,D,D,E,E,F,F):-'denotes_[]'(A).
new_var_list(A,B,C,D,E,F,G,H,I,J):-inv(K,B),cut,new_umemvar_nf(K,C,L,E,M,I,N),new_var_list(O,B,L,D,M,F,G,H,N,J),'denotes_.'(K,O,A).
new_var_list(A,B,C,D,E,F,G,H,I,J):-neg(K),cut,new_var(L,C,M,E,N,G,O,I,P),new_var_list(Q,B,M,D,N,F,O,H,P,J),denotes_inv(L,B,K),'denotes_.'(L,Q,A).
b_writemode(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):-structure(A),cut,tag(P,Q),functor(A,R,S),univ(A,T),exprEval(U,V),align_calc(U,W,X),exprEval(Y,Z),exprEval(A1,B1),fill_slots(C1,D1,C,D,E,E1,G,F1,I,G1,H1,I1,M),align_pad(X,I1,J1),b_writeargs(C1,Y,D1,B,C,D,E1,F,F1,H,G1,J,J1,L,M,A1,O),'denotes_+'(N,W,B1),'denotes_+'(N,K1,Z),denotes_1(K1),'denotes_+'(S,L1,V),denotes_1(L1),'denotes_.'(R,C1,T),denotes_atom(P),'denotes_.'(M1,N1,K),'denotes_.'(O1,H1,N1),denotes_push(P1,Q1,R1,O1),denotes_1(R1),denotes_r(S1,Q1),denotes_h(S1),'denotes_^'(Q,T1,P1),'denotes_/'(R,S,T1),denotes_pragma(U1,M1),denotes_push(V1,U1),denotes_structure(S,V1).
b_writemode(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):-cons(P),cut,align_calc(Q,R,S),exprEval(T,N),exprEval(U,V),fill_slots(W,X,C,D,E,Y,G,Z,I,A1,B1,C1,M),align_pad(S,C1,D1),b_writeargs(E1,T,X,B,C,D,Y,F,Z,H,A1,J,D1,L,M,U,O),'denotes_.'(F1,G1,E1),'denotes_.'(H1,I1,G1),'denotes_[]'(I1),'denotes_.'(F1,J1,W),'denotes_.'(H1,K1,J1),'denotes_[]'(K1),'denotes_+'(N,R,V),denotes_2(Q),'denotes_.'(F1,H1,P),'denotes_.'(L1,B1,K),denotes_pragma(M1,L1),denotes_push(N1,M1),denotes_cons(N1),'denotes_.'(F1,H1,A).
b_writemode(A,B,C,D,E,E,F,F,G,G,H,H,I,J,J):-atomic(A),cut,'denotes_[]'(B).
b_writemode(A,B,C,D,E,E,F,F,G,G,H,H,I,J,J):-var(A),cut,'denotes_[]'(B).
fill_slots(A,B,C,D,E,E,F,F,G,G,H,H,I):-cut,'denotes_[]'(B),'denotes_[]'(A).
fill_slots(A,B,C,D,E,F,G,H,I,J,K,L,M):-cut,make_word(N,O,P),initialize_var(N,P,C,D,E,Q,G,R,I,S,K,T,M),fill_slots(U,V,C,D,Q,F,R,H,S,J,T,L,M),'denotes_.'(O,V,B),'denotes_.'(N,U,A).
b_writeargs(A,B,C,D,E,F,G,G,H,H,I,I,J,J,K,L,L):-cut,'denotes_[]'(D),'denotes_[]'(C),'denotes_[]'(A).
b_writeargs(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-cut,exprEval(R,S),b_writemode(T,U,E,F,G,H,I,J,K,L,V,N,O,P,Q),'denotes_-'(P,B,S),'denotes_.'(W,V,M),denotes_label(X,W),'denotes_.'(X,U,D),'denotes_.'(R,Y,C),'denotes_[]'(Y),'denotes_.'(T,Z,A),'denotes_[]'(Z).
b_writeargs(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):-cut,exprEval(R,S),exprEval(T,U),b_writemode(V,W,E,F,G,X,I,Y,K,Z,M,A1,O,P,B1),b_writeargs(C1,T,D1,D,E,F,X,H,Y,J,Z,L,A1,N,O,B1,Q),'denotes_.'(E1,F1,C1),'denotes_+'(B,G1,U),denotes_1(G1),'denotes_-'(P,B,S),'denotes_.'(R,D1,C),'denotes_.'(V,H1,A),'denotes_.'(E1,F1,H1).
initialize_var(A,B,C,D,E,F,G,H,I,J,K,L,M):-is_uninit_mem(A,C,E,N,I,O),cut,remove_uninit(P,Q,O,R),combine_formula(S,R,J),includev(A,N,F),pragma_tag(A,T,K,U),'denotes_.'(V,W,U),'denotes_.'(X,L,W),denotes_push(B,Y,Z,X),denotes_1(Z),denotes_r(A1,Y),denotes_h(A1),denotes_move(A,B1,V),'denotes_.'(A,C1,B1),'denotes_[]'(C1),denotes_var(T),denotes_var(A,S),'denotes_.'(A,D1,Q),'denotes_[]'(D1),denotes_mem(P),'denotes_.'(A,E1,G),'denotes_.'(A,H,E1).
initialize_var(A,B,C,D,E,F,G,H,I,J,K,L,M):-var(A),neg(N),cut,tag(O,P),push_if_init(A,B,C,D,E,F,Q,H,I,J,R,L,M),denotes_var(O),denotes_inv(A,E,N),'denotes_.'(S,R,K),denotes_move(T,A,S),'denotes_^'(P,U,T),denotes_r(V,U),denotes_h(V),'denotes_.'(A,W,G),'denotes_.'(A,Q,W).
initialize_var(A,B,C,D,E,E,F,G,H,H,I,J,K):-var(A),inv(A,E),cut,'denotes_.'(L,J,I),denotes_push(B,M,N,L),denotes_1(N),denotes_r(O,M),denotes_h(O),'denotes_.'(A,G,F).
initialize_var(A,B,C,D,E,E,F,F,G,G,H,I,J):-nonvar(A),cut,'denotes_.'(K,I,H),denotes_push(B,L,M,K),denotes_1(M),denotes_r(N,L),denotes_h(N).
is_uninit_mem(A,B,C,C,D,D):-var(A),inv(A,B),neg(E),cut,denotes_inv(A,C,E).
is_uninit_mem(A,B,C,C,D,E):-var(A),ctest(F,D,E),cut,denotes_uninit(G,A,F),denotes_mem(G).
push_if_init(A,B,C,D,E,E,F,F,G,H,I,J,K):-inv(A,D),cut,combine_formula(L,G,H),denotes_uninit(M,A,N,L),'denotes_.'(K,O,N),'denotes_[]'(O),denotes_mem(M),'denotes_.'(P,J,I),denotes_adda(Q,R,S,P),denotes_r(T,S),denotes_h(T),denotes_1(R),denotes_r(U,Q),denotes_h(U).
push_if_init(A,B,C,D,E,F,G,G,H,I,J,K,L):-neg(M),cut,includev(A,E,F),combine_formula(N,H,I),'denotes_,'(O,P,N),denotes_deref(A,P),denotes_var(A,O),denotes_inv(A,D,M),'denotes_.'(Q,K,J),denotes_push(B,R,S,Q),denotes_1(S),denotes_r(T,R),denotes_h(T).
unify_depth_2(A,B,B,C,C,D,D):-simple(B),cut,true.
unify_depth_2(A,B,C,D,E,F,G):-depth_limit(H),ge(A,H),cut,comment(I),'denotes_.'(J,K,I),'denotes_.'(B,L,K),'denotes_.'(M,N,L),'denotes_.'(A,O,N),'denotes_[]'(O),'denotes_ at depth '(M),'denotes_Found structure '(J),'denotes_.'(C,G,F),'denotes_,'(P,Q,D),'denotes_,'(R,E,Q),'denotes_='(S,C,R),'denotes_='(S,B,P).
unify_depth_2(A,B,C,D,E,F,G):-functor(B,H,I),functor(C,H,I),exprEval(J,K),unify_depth_2(L,I,J,B,C,D,E,F,G),denotes_1(L),'denotes_+'(A,M,K),denotes_1(M).
unify_depth_2(A,B,C,D,E,F,F,G,G):-gt(A,B),cut,true.
unify_depth_2(A,B,C,D,E,F,G,H,I):-le(A,B),cut,arg(A,D,J),arg(A,E,K),unify_depth_2(C,J,K,F,L,H,M),exprEval(N,O),unify_depth_2(N,B,C,D,E,L,G,M,I),'denotes_+'(A,P,O),denotes_1(P).
