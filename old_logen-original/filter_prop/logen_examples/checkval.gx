/*  --------------------  */
/*  GENERATING EXTENSION  */
/*  --------------------  */

p_m(B,C,D) :- 
  ((
    find_pattern(p(B,C),D)
   ) -> (
    true
   ) ; (
    ':'(cogen,generalise(p(B,C),E)),
    ':'(cogen,add_extra_argument([95,117],E,F,G)),
    insert_pattern(E,H),
    findall(I, (
      G,
      I = (clause(H,F))),J),
    pp(J),
    find_pattern(p(B,C),D)
  )).
checkval_m(K,L,M) :- 
  ((
    find_pattern(checkval(K,L),M)
   ) -> (
    true
   ) ; (
    ':'(cogen,generalise(checkval(K,L),N)),
    ':'(cogen,add_extra_argument([95,117],N,O,P)),
    insert_pattern(N,Q),
    findall(R, (
      P,
      R = (clause(Q,O))),S),
    pp(S),
    find_pattern(checkval(K,L),M)
  )).
test_m(T,U,V) :- 
  ((
    find_pattern(test(T,U),V)
   ) -> (
    true
   ) ; (
    ':'(cogen,generalise(test(T,U),W)),
    ':'(cogen,add_extra_argument([95,117],W,X,Y)),
    insert_pattern(W,Z),
    findall(A1, (
      Y,
      A1 = (clause(Z,X))),B1),
    pp(B1),
    find_pattern(test(T,U),V)
  )).
p_cm(C1,D1,E1) :- 
  ((
    find_clp_pattern(p(C1,D1),E1)
   ) -> (
    true
   ) ; (
    ':'(cogen,generalise(p(C1,D1),F1)),
    ':'(cogen,add_extra_argument([95,117],F1,G1,H1)),
    insert_clp_pattern(F1,I1),
    findall(J1, (
      H1,
      J1 = (clause(I1,G1))),K1),
    printCLP(K1),
    find_clp_pattern(p(C1,D1),E1)
  )).
checkval_cm(L1,M1,N1) :- 
  ((
    find_clp_pattern(checkval(L1,M1),N1)
   ) -> (
    true
   ) ; (
    ':'(cogen,generalise(checkval(L1,M1),O1)),
    ':'(cogen,add_extra_argument([95,117],O1,P1,Q1)),
    insert_clp_pattern(O1,R1),
    findall(S1, (
      Q1,
      S1 = (clause(R1,P1))),T1),
    printCLP(T1),
    find_clp_pattern(checkval(L1,M1),N1)
  )).
p_u(B,C,','(D,E)) :- 
  constraintTest(D,[B > 2]),
  checkval_cm(B,C,E).
checkval_u(F,above,G) :- 
  constraintTest(G,[F > 0]).
checkval_u(H,above1,I) :- 
  constraintTest(I,[H > 3]).
checkval_u(J,zero,K) :- 
  constraintTest(K,[J = 0]).
checkval_u(L,below,M) :- 
  constraintTest(M,[L < 0]).
test_u(N,O,P) :- 
  p_cm(N,O,P).

/* no facts generated !! */

/* GX file Generated in 10 ms */
