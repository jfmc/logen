:- include('../logen_source/logen')./*%:- filter [A]\==[B].%:- filter match1([[dynamic,list,static],[dynamic,list]],[A],[[dynamic,list,static],[dynamic,list]],[A]).%:- filter match([[dynamic,list],[dynamic,list,static]],[A]).*/:- filter [[dynamic,list,static],[dynamic,static]]\==[A].:- filter match1([[dynamic,static],[dynamic,list,static]],[A],                 [[dynamic,static],[dynamic,list,static]],[A]).:- filter match([[dynamic,list,static],[dynamic,static]],[A]).logen(match, match(Pat,T)) :-        logen(memo, match1(Pat,T,Pat,T)).logen(match1, match1([],Ts,P,T)).logen(match1, match1([A|Ps],[B|Ts],P,[X|T])) :-        logen(rescall, A\==B),        logen(memo, match1(P,T,P,T)).logen(match1, match1([A|Ps],[A|Ts],P,T)) :-        logen(unfold, match1(Ps,Ts,P,T)).